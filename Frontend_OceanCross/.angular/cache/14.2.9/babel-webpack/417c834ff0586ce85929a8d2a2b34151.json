{"ast":null,"code":"const streams = require('streamroller');\n\nconst os = require('os');\n\nconst eol = os.EOL;\n\nfunction openTheStream(filename, pattern, options) {\n  const stream = new streams.DateRollingFileStream(filename, pattern, options);\n  stream.on('error', err => {\n    // eslint-disable-next-line no-console\n    console.error('log4js.dateFileAppender - Writing to file %s, error happened ', filename, err);\n  });\n  stream.on('drain', () => {\n    process.emit('log4js:pause', false);\n  });\n  return stream;\n}\n/**\n * File appender that rolls files according to a date pattern.\n * @param filename base filename.\n * @param pattern the format that will be added to the end of filename when rolling,\n *          also used to check when to roll files - defaults to '.yyyy-MM-dd'\n * @param layout layout function for log messages - defaults to basicLayout\n * @param options - options to be passed to the underlying stream\n * @param timezoneOffset - optional timezone offset in minutes (default system local)\n */\n\n\nfunction appender(filename, pattern, layout, options, timezoneOffset) {\n  // the options for file appender use maxLogSize, but the docs say any file appender\n  // options should work for dateFile as well.\n  options.maxSize = options.maxLogSize;\n  const writer = openTheStream(filename, pattern, options);\n\n  const app = function (logEvent) {\n    if (!writer.writable) {\n      return;\n    }\n\n    if (!writer.write(layout(logEvent, timezoneOffset) + eol, 'utf8')) {\n      process.emit('log4js:pause', true);\n    }\n  };\n\n  app.shutdown = function (complete) {\n    writer.end('', 'utf-8', complete);\n  };\n\n  return app;\n}\n\nfunction configure(config, layouts) {\n  let layout = layouts.basicLayout;\n\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n\n  if (!config.alwaysIncludePattern) {\n    config.alwaysIncludePattern = false;\n  } // security default (instead of relying on streamroller default)\n\n\n  config.mode = config.mode || 0o600;\n  return appender(config.filename, config.pattern, layout, config, config.timezoneOffset);\n}\n\nmodule.exports.configure = configure;","map":{"version":3,"names":["streams","require","os","eol","EOL","openTheStream","filename","pattern","options","stream","DateRollingFileStream","on","err","console","error","process","emit","appender","layout","timezoneOffset","maxSize","maxLogSize","writer","app","logEvent","writable","write","shutdown","complete","end","configure","config","layouts","basicLayout","type","alwaysIncludePattern","mode","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/log4js/lib/appenders/dateFile.js"],"sourcesContent":["const streams = require('streamroller');\nconst os = require('os');\n\nconst eol = os.EOL;\n\nfunction openTheStream(filename, pattern, options) {\n  const stream = new streams.DateRollingFileStream(filename, pattern, options);\n  stream.on('error', (err) => {\n    // eslint-disable-next-line no-console\n    console.error(\n      'log4js.dateFileAppender - Writing to file %s, error happened ',\n      filename,\n      err\n    );\n  });\n  stream.on('drain', () => {\n    process.emit('log4js:pause', false);\n  });\n  return stream;\n}\n\n/**\n * File appender that rolls files according to a date pattern.\n * @param filename base filename.\n * @param pattern the format that will be added to the end of filename when rolling,\n *          also used to check when to roll files - defaults to '.yyyy-MM-dd'\n * @param layout layout function for log messages - defaults to basicLayout\n * @param options - options to be passed to the underlying stream\n * @param timezoneOffset - optional timezone offset in minutes (default system local)\n */\nfunction appender(filename, pattern, layout, options, timezoneOffset) {\n  // the options for file appender use maxLogSize, but the docs say any file appender\n  // options should work for dateFile as well.\n  options.maxSize = options.maxLogSize;\n\n  const writer = openTheStream(filename, pattern, options);\n\n  const app = function (logEvent) {\n    if (!writer.writable) {\n      return;\n    }\n    if (!writer.write(layout(logEvent, timezoneOffset) + eol, 'utf8')) {\n      process.emit('log4js:pause', true);\n    }\n  };\n\n  app.shutdown = function (complete) {\n    writer.end('', 'utf-8', complete);\n  };\n\n  return app;\n}\n\nfunction configure(config, layouts) {\n  let layout = layouts.basicLayout;\n  if (config.layout) {\n    layout = layouts.layout(config.layout.type, config.layout);\n  }\n\n  if (!config.alwaysIncludePattern) {\n    config.alwaysIncludePattern = false;\n  }\n\n  // security default (instead of relying on streamroller default)\n  config.mode = config.mode || 0o600;\n\n  return appender(\n    config.filename,\n    config.pattern,\n    layout,\n    config,\n    config.timezoneOffset\n  );\n}\n\nmodule.exports.configure = configure;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAME,GAAG,GAAGD,EAAE,CAACE,GAAf;;AAEA,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,OAA1C,EAAmD;EACjD,MAAMC,MAAM,GAAG,IAAIT,OAAO,CAACU,qBAAZ,CAAkCJ,QAAlC,EAA4CC,OAA5C,EAAqDC,OAArD,CAAf;EACAC,MAAM,CAACE,EAAP,CAAU,OAAV,EAAoBC,GAAD,IAAS;IAC1B;IACAC,OAAO,CAACC,KAAR,CACE,+DADF,EAEER,QAFF,EAGEM,GAHF;EAKD,CAPD;EAQAH,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmB,MAAM;IACvBI,OAAO,CAACC,IAAR,CAAa,cAAb,EAA6B,KAA7B;EACD,CAFD;EAGA,OAAOP,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,QAAT,CAAkBX,QAAlB,EAA4BC,OAA5B,EAAqCW,MAArC,EAA6CV,OAA7C,EAAsDW,cAAtD,EAAsE;EACpE;EACA;EACAX,OAAO,CAACY,OAAR,GAAkBZ,OAAO,CAACa,UAA1B;EAEA,MAAMC,MAAM,GAAGjB,aAAa,CAACC,QAAD,EAAWC,OAAX,EAAoBC,OAApB,CAA5B;;EAEA,MAAMe,GAAG,GAAG,UAAUC,QAAV,EAAoB;IAC9B,IAAI,CAACF,MAAM,CAACG,QAAZ,EAAsB;MACpB;IACD;;IACD,IAAI,CAACH,MAAM,CAACI,KAAP,CAAaR,MAAM,CAACM,QAAD,EAAWL,cAAX,CAAN,GAAmChB,GAAhD,EAAqD,MAArD,CAAL,EAAmE;MACjEY,OAAO,CAACC,IAAR,CAAa,cAAb,EAA6B,IAA7B;IACD;EACF,CAPD;;EASAO,GAAG,CAACI,QAAJ,GAAe,UAAUC,QAAV,EAAoB;IACjCN,MAAM,CAACO,GAAP,CAAW,EAAX,EAAe,OAAf,EAAwBD,QAAxB;EACD,CAFD;;EAIA,OAAOL,GAAP;AACD;;AAED,SAASO,SAAT,CAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;EAClC,IAAId,MAAM,GAAGc,OAAO,CAACC,WAArB;;EACA,IAAIF,MAAM,CAACb,MAAX,EAAmB;IACjBA,MAAM,GAAGc,OAAO,CAACd,MAAR,CAAea,MAAM,CAACb,MAAP,CAAcgB,IAA7B,EAAmCH,MAAM,CAACb,MAA1C,CAAT;EACD;;EAED,IAAI,CAACa,MAAM,CAACI,oBAAZ,EAAkC;IAChCJ,MAAM,CAACI,oBAAP,GAA8B,KAA9B;EACD,CARiC,CAUlC;;;EACAJ,MAAM,CAACK,IAAP,GAAcL,MAAM,CAACK,IAAP,IAAe,KAA7B;EAEA,OAAOnB,QAAQ,CACbc,MAAM,CAACzB,QADM,EAEbyB,MAAM,CAACxB,OAFM,EAGbW,MAHa,EAIba,MAJa,EAKbA,MAAM,CAACZ,cALM,CAAf;AAOD;;AAEDkB,MAAM,CAACC,OAAP,CAAeR,SAAf,GAA2BA,SAA3B"},"metadata":{},"sourceType":"script"}