{"ast":null,"code":"'use strict'; // eslint-disable-next-line node/no-deprecated-api\n\nconst resolve = require('url').resolve;\n\nconst SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nconst _ = require('lodash');\n\nconst PathUtils = require('./utils/path-utils');\n\nconst log = require('./logger').create('reporter');\n\nconst MultiReporter = require('./reporters/multi');\n\nconst baseReporterDecoratorFactory = require('./reporters/base').decoratorFactory;\n\nfunction createErrorFormatter(config, emitter, SourceMapConsumer) {\n  const basePath = config.basePath;\n  const urlRoot = config.urlRoot === '/' ? '' : config.urlRoot || '';\n  let lastServedFiles = [];\n  emitter.on('file_list_modified', files => {\n    lastServedFiles = files.served;\n  });\n  const URL_REGEXP = new RegExp('(?:https?:\\\\/\\\\/' + config.hostname + '(?:\\\\:' + config.port + ')?' + ')?\\\\/?' + urlRoot + '\\\\/?' + '(base/|absolute)' + // prefix, including slash for base/ to create relative paths.\n  '((?:[A-z]\\\\:)?[^\\\\?\\\\s\\\\:]*)' + // path\n  '(\\\\?\\\\w*)?' + // sha\n  '(\\\\:(\\\\d+))?' + // line\n  '(\\\\:(\\\\d+))?' + // column\n  '', 'g');\n  const cache = new WeakMap();\n\n  function getSourceMapConsumer(sourceMap) {\n    if (!cache.has(sourceMap)) {\n      cache.set(sourceMap, new SourceMapConsumer(sourceMap));\n    }\n\n    return cache.get(sourceMap);\n  }\n\n  return function (input, indentation) {\n    indentation = _.isString(indentation) ? indentation : '';\n\n    if (_.isError(input)) {\n      input = input.message;\n    } else if (_.isEmpty(input)) {\n      input = '';\n    } else if (!_.isString(input)) {\n      input = JSON.stringify(input, null, indentation);\n    }\n\n    let msg = input.replace(URL_REGEXP, function (stackTracePath, prefix, path, __, ___, line, ____, column) {\n      const normalizedPath = prefix === 'base/' ? `${basePath}/${path}` : path;\n      const file = lastServedFiles.find(file => file.path === normalizedPath);\n\n      if (file && file.sourceMap && line) {\n        line = +line;\n        column = +column; // When no column is given and we default to 0, it doesn't make sense to only search for smaller\n        // or equal columns in the sourcemap, let's search for equal or greater columns.\n\n        const bias = column ? SourceMapConsumer.GREATEST_LOWER_BOUND : SourceMapConsumer.LEAST_UPPER_BOUND;\n\n        try {\n          const zeroBasedColumn = Math.max(0, (column || 1) - 1);\n          const original = getSourceMapConsumer(file.sourceMap).originalPositionFor({\n            line,\n            column: zeroBasedColumn,\n            bias\n          }); // If there is no original position/source for the current stack trace path, then\n          // we return early with the formatted generated position. This handles the case of\n          // generated code which does not map to anything, see Case 1 of the source-map spec.\n          // https://sourcemaps.info/spec.html.\n\n          if (original.source === null) {\n            return PathUtils.formatPathMapping(path, line, column);\n          } // Source maps often only have a local file name, resolve to turn into a full path if\n          // the path is not absolute yet.\n\n\n          const oneBasedOriginalColumn = original.column == null ? original.column : original.column + 1;\n          return `${PathUtils.formatPathMapping(resolve(path, original.source), original.line, oneBasedOriginalColumn)} <- ${PathUtils.formatPathMapping(path, line, column)}`;\n        } catch (e) {\n          log.warn(`An unexpected error occurred while resolving the original position for: ${stackTracePath}`);\n          log.warn(e);\n        }\n      }\n\n      return PathUtils.formatPathMapping(path, line, column) || prefix;\n    });\n\n    if (indentation) {\n      msg = indentation + msg.replace(/\\n/g, '\\n' + indentation);\n    }\n\n    return config.formatError ? config.formatError(msg) : msg + '\\n';\n  };\n}\n\nfunction createReporters(names, config, emitter, injector) {\n  const errorFormatter = createErrorFormatter(config, emitter, SourceMapConsumer);\n  const reporters = [];\n  names.forEach(name => {\n    if (['dots', 'progress'].includes(name)) {\n      [require(`./reporters/${name}`), require(`./reporters/${name}_color`)].forEach(Reporter => {\n        reporters.push(new Reporter(errorFormatter, config.reportSlowerThan, config.colors, config.browserConsoleLogOptions));\n      });\n      return;\n    }\n\n    const locals = {\n      baseReporterDecorator: ['factory', baseReporterDecoratorFactory],\n      formatError: ['value', errorFormatter]\n    };\n\n    try {\n      log.debug(`Trying to load reporter: ${name}`);\n      reporters.push(injector.createChild([locals], ['reporter:' + name]).get('reporter:' + name));\n    } catch (e) {\n      if (e.message.includes(`No provider for \"reporter:${name}\"`)) {\n        log.error(`Can not load reporter \"${name}\", it is not registered!\\n  Perhaps you are missing some plugin?`);\n      } else {\n        log.error(`Can not load \"${name}\"!\\n ${e.stack}`);\n      }\n\n      emitter.emit('load_error', 'reporter', name);\n      return;\n    }\n\n    const colorName = name + '_color';\n\n    if (!names.includes(colorName)) {\n      try {\n        log.debug(`Trying to load color-version of reporter: ${name} (${colorName})`);\n        reporters.push(injector.createChild([locals], ['reporter:' + colorName]).get('reporter:' + name));\n      } catch (e) {\n        log.debug('Couldn\\'t load color-version.');\n      }\n    }\n  });\n  reporters.forEach(reporter => emitter.bind(reporter));\n  return new MultiReporter(reporters);\n}\n\ncreateReporters.$inject = ['config.reporters', 'config', 'emitter', 'injector'];\nexports.createReporters = createReporters;","map":{"version":3,"names":["resolve","require","SourceMapConsumer","_","PathUtils","log","create","MultiReporter","baseReporterDecoratorFactory","decoratorFactory","createErrorFormatter","config","emitter","basePath","urlRoot","lastServedFiles","on","files","served","URL_REGEXP","RegExp","hostname","port","cache","WeakMap","getSourceMapConsumer","sourceMap","has","set","get","input","indentation","isString","isError","message","isEmpty","JSON","stringify","msg","replace","stackTracePath","prefix","path","__","___","line","____","column","normalizedPath","file","find","bias","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","zeroBasedColumn","Math","max","original","originalPositionFor","source","formatPathMapping","oneBasedOriginalColumn","e","warn","formatError","createReporters","names","injector","errorFormatter","reporters","forEach","name","includes","Reporter","push","reportSlowerThan","colors","browserConsoleLogOptions","locals","baseReporterDecorator","debug","createChild","error","stack","emit","colorName","reporter","bind","$inject","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/reporter.js"],"sourcesContent":["'use strict'\n\n// eslint-disable-next-line node/no-deprecated-api\nconst resolve = require('url').resolve\nconst SourceMapConsumer = require('source-map').SourceMapConsumer\nconst _ = require('lodash')\n\nconst PathUtils = require('./utils/path-utils')\nconst log = require('./logger').create('reporter')\nconst MultiReporter = require('./reporters/multi')\nconst baseReporterDecoratorFactory = require('./reporters/base').decoratorFactory\n\nfunction createErrorFormatter (config, emitter, SourceMapConsumer) {\n  const basePath = config.basePath\n  const urlRoot = config.urlRoot === '/' ? '' : (config.urlRoot || '')\n  let lastServedFiles = []\n\n  emitter.on('file_list_modified', (files) => {\n    lastServedFiles = files.served\n  })\n\n  const URL_REGEXP = new RegExp('(?:https?:\\\\/\\\\/' +\n    config.hostname + '(?:\\\\:' + config.port + ')?' + ')?\\\\/?' +\n    urlRoot + '\\\\/?' +\n    '(base/|absolute)' + // prefix, including slash for base/ to create relative paths.\n    '((?:[A-z]\\\\:)?[^\\\\?\\\\s\\\\:]*)' + // path\n    '(\\\\?\\\\w*)?' + // sha\n    '(\\\\:(\\\\d+))?' + // line\n    '(\\\\:(\\\\d+))?' + // column\n    '', 'g')\n\n  const cache = new WeakMap()\n\n  function getSourceMapConsumer (sourceMap) {\n    if (!cache.has(sourceMap)) {\n      cache.set(sourceMap, new SourceMapConsumer(sourceMap))\n    }\n    return cache.get(sourceMap)\n  }\n\n  return function (input, indentation) {\n    indentation = _.isString(indentation) ? indentation : ''\n    if (_.isError(input)) {\n      input = input.message\n    } else if (_.isEmpty(input)) {\n      input = ''\n    } else if (!_.isString(input)) {\n      input = JSON.stringify(input, null, indentation)\n    }\n\n    let msg = input.replace(URL_REGEXP, function (stackTracePath, prefix, path, __, ___, line, ____, column) {\n      const normalizedPath = prefix === 'base/' ? `${basePath}/${path}` : path\n      const file = lastServedFiles.find((file) => file.path === normalizedPath)\n\n      if (file && file.sourceMap && line) {\n        line = +line\n        column = +column\n\n        // When no column is given and we default to 0, it doesn't make sense to only search for smaller\n        // or equal columns in the sourcemap, let's search for equal or greater columns.\n        const bias = column ? SourceMapConsumer.GREATEST_LOWER_BOUND : SourceMapConsumer.LEAST_UPPER_BOUND\n\n        try {\n          const zeroBasedColumn = Math.max(0, (column || 1) - 1)\n          const original = getSourceMapConsumer(file.sourceMap).originalPositionFor({ line, column: zeroBasedColumn, bias })\n\n          // If there is no original position/source for the current stack trace path, then\n          // we return early with the formatted generated position. This handles the case of\n          // generated code which does not map to anything, see Case 1 of the source-map spec.\n          // https://sourcemaps.info/spec.html.\n          if (original.source === null) {\n            return PathUtils.formatPathMapping(path, line, column)\n          }\n\n          // Source maps often only have a local file name, resolve to turn into a full path if\n          // the path is not absolute yet.\n          const oneBasedOriginalColumn = original.column == null ? original.column : original.column + 1\n          return `${PathUtils.formatPathMapping(resolve(path, original.source), original.line, oneBasedOriginalColumn)} <- ${PathUtils.formatPathMapping(path, line, column)}`\n        } catch (e) {\n          log.warn(`An unexpected error occurred while resolving the original position for: ${stackTracePath}`)\n          log.warn(e)\n        }\n      }\n\n      return PathUtils.formatPathMapping(path, line, column) || prefix\n    })\n\n    if (indentation) {\n      msg = indentation + msg.replace(/\\n/g, '\\n' + indentation)\n    }\n\n    return config.formatError ? config.formatError(msg) : msg + '\\n'\n  }\n}\n\nfunction createReporters (names, config, emitter, injector) {\n  const errorFormatter = createErrorFormatter(config, emitter, SourceMapConsumer)\n  const reporters = []\n\n  names.forEach((name) => {\n    if (['dots', 'progress'].includes(name)) {\n      [\n        require(`./reporters/${name}`),\n        require(`./reporters/${name}_color`)\n      ].forEach((Reporter) => {\n        reporters.push(new Reporter(errorFormatter, config.reportSlowerThan, config.colors, config.browserConsoleLogOptions))\n      })\n      return\n    }\n\n    const locals = {\n      baseReporterDecorator: ['factory', baseReporterDecoratorFactory],\n      formatError: ['value', errorFormatter]\n    }\n\n    try {\n      log.debug(`Trying to load reporter: ${name}`)\n      reporters.push(injector.createChild([locals], ['reporter:' + name]).get('reporter:' + name))\n    } catch (e) {\n      if (e.message.includes(`No provider for \"reporter:${name}\"`)) {\n        log.error(`Can not load reporter \"${name}\", it is not registered!\\n  Perhaps you are missing some plugin?`)\n      } else {\n        log.error(`Can not load \"${name}\"!\\n ${e.stack}`)\n      }\n      emitter.emit('load_error', 'reporter', name)\n      return\n    }\n\n    const colorName = name + '_color'\n    if (!names.includes(colorName)) {\n      try {\n        log.debug(`Trying to load color-version of reporter: ${name} (${colorName})`)\n        reporters.push(injector.createChild([locals], ['reporter:' + colorName]).get('reporter:' + name))\n      } catch (e) {\n        log.debug('Couldn\\'t load color-version.')\n      }\n    }\n  })\n\n  reporters.forEach((reporter) => emitter.bind(reporter))\n\n  return new MultiReporter(reporters)\n}\n\ncreateReporters.$inject = [\n  'config.reporters',\n  'config',\n  'emitter',\n  'injector'\n]\n\nexports.createReporters = createReporters\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}