{"ast":null,"code":"\"use strict\";\n\nfunction e(e) {\n  return e && \"object\" == typeof e && \"default\" in e ? e : {\n    default: e\n  };\n}\n\nvar l = e(require(\"postcss-value-parser\")),\n    t = new Map([[\"block,flow\", \"block\"], [\"block,flow-root\", \"flow-root\"], [\"inline,flow\", \"inline\"], [\"inline,flow-root\", \"inline-block\"], [\"run-in,flow\", \"run-in\"], [\"list-item,block,flow\", \"list-item\"], [\"inline,flow,list-item\", \"inline list-item\"], [\"block,flex\", \"flex\"], [\"inline,flex\", \"inline-flex\"], [\"block,grid\", \"grid\"], [\"inline,grid\", \"inline-grid\"], [\"inline,ruby\", \"ruby\"], [\"block,table\", \"table\"], [\"inline,table\", \"inline-table\"], [\"table-cell,flow\", \"table-cell\"], [\"table-caption,flow\", \"table-caption\"], [\"ruby-base,flow\", \"ruby-base\"], [\"ruby-text,flow\", \"ruby-text\"]]);\n\nconst n = e => {\n  const n = !(\"preserve\" in Object(e)) || Boolean(e.preserve);\n  return {\n    postcssPlugin: \"postcss-normalize-display-values\",\n\n    prepare() {\n      const e = new Map();\n      return {\n        Declaration(o) {\n          if (\"display\" !== o.prop.toLowerCase()) return;\n          const i = o.value;\n          if (!i) return;\n          if (e.has(i)) return void (o.value !== e.get(i) && (o.cloneBefore({\n            value: e.get(i)\n          }), n || o.remove()));\n\n          const r = function (e) {\n            const {\n              nodes: n\n            } = l.default(e);\n            if (1 === n.length) return e;\n            const o = n.filter(e => \"word\" === e.type).map(e => e.value.toLowerCase());\n            if (o.length <= 1) return e;\n            return t.get(o.join(\",\")) || e;\n          }(i);\n\n          e.set(i, r), o.value !== r && (o.cloneBefore({\n            value: r\n          }), n || o.remove());\n        }\n\n      };\n    }\n\n  };\n};\n\nn.postcss = !0, module.exports = n;","map":{"version":3,"names":["e","default","l","require","t","Map","n","Object","Boolean","preserve","postcssPlugin","prepare","Declaration","o","prop","toLowerCase","i","value","has","get","cloneBefore","remove","r","nodes","length","filter","type","map","join","set","postcss","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@csstools/postcss-normalize-display-values/dist/index.cjs"],"sourcesContent":["\"use strict\";function e(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var l=e(require(\"postcss-value-parser\")),t=new Map([[\"block,flow\",\"block\"],[\"block,flow-root\",\"flow-root\"],[\"inline,flow\",\"inline\"],[\"inline,flow-root\",\"inline-block\"],[\"run-in,flow\",\"run-in\"],[\"list-item,block,flow\",\"list-item\"],[\"inline,flow,list-item\",\"inline list-item\"],[\"block,flex\",\"flex\"],[\"inline,flex\",\"inline-flex\"],[\"block,grid\",\"grid\"],[\"inline,grid\",\"inline-grid\"],[\"inline,ruby\",\"ruby\"],[\"block,table\",\"table\"],[\"inline,table\",\"inline-table\"],[\"table-cell,flow\",\"table-cell\"],[\"table-caption,flow\",\"table-caption\"],[\"ruby-base,flow\",\"ruby-base\"],[\"ruby-text,flow\",\"ruby-text\"]]);const n=e=>{const n=!(\"preserve\"in Object(e))||Boolean(e.preserve);return{postcssPlugin:\"postcss-normalize-display-values\",prepare(){const e=new Map;return{Declaration(o){if(\"display\"!==o.prop.toLowerCase())return;const i=o.value;if(!i)return;if(e.has(i))return void(o.value!==e.get(i)&&(o.cloneBefore({value:e.get(i)}),n||o.remove()));const r=function(e){const{nodes:n}=l.default(e);if(1===n.length)return e;const o=n.filter((e=>\"word\"===e.type)).map((e=>e.value.toLowerCase()));if(o.length<=1)return e;return t.get(o.join(\",\"))||e}(i);e.set(i,r),o.value!==r&&(o.cloneBefore({value:r}),n||o.remove())}}}}};n.postcss=!0,module.exports=n;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}