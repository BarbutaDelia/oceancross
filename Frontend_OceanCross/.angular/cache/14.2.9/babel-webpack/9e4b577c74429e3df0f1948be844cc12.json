{"ast":null,"code":"const url = require('url');\n\nconst {\n  Agent: httpAgent\n} = require('http');\n\nconst {\n  Agent: httpsAgent\n} = require('https');\n\nconst httpProxy = require('http-proxy');\n\nconst _ = require('lodash');\n\nconst {\n  lookup\n} = require('../utils/dns-utils');\n\nconst log = require('../logger').create('proxy');\n\nfunction parseProxyConfig(proxies, config) {\n  proxies = proxies || [];\n  return _.sortBy(_.map(proxies, function (proxyConfiguration, proxyPath) {\n    if (typeof proxyConfiguration === 'string') {\n      proxyConfiguration = {\n        target: proxyConfiguration\n      };\n    }\n\n    let proxyUrl = proxyConfiguration.target; // eslint-disable-next-line node/no-deprecated-api\n\n    const proxyDetails = url.parse(proxyUrl);\n    let pathname = proxyDetails.pathname;\n\n    if (proxyPath.endsWith('/') && !proxyUrl.endsWith('/')) {\n      log.warn(`proxy \"${proxyUrl}\" normalized to \"${proxyUrl}/\"`);\n      proxyUrl += '/';\n      pathname += '/';\n    }\n\n    if (!proxyPath.endsWith('/') && proxyUrl.endsWith('/')) {\n      log.warn(`proxy \"${proxyPath}\" normalized to \"${proxyPath}/\"`);\n      proxyPath += '/';\n    }\n\n    if (pathname === '/' && !proxyUrl.endsWith('/')) {\n      pathname = '';\n    }\n\n    const hostname = proxyDetails.hostname || config.hostname;\n    const protocol = proxyDetails.protocol || config.protocol;\n    const defaultPorts = {\n      'http:': '80',\n      'https:': '443'\n    };\n    const port = proxyDetails.port || defaultPorts[proxyDetails.protocol] || config.port;\n    const changeOrigin = proxyConfiguration.changeOrigin || false;\n    const Agent = protocol === 'https:' ? httpsAgent : httpAgent;\n    const agent = new Agent({\n      keepAlive: true,\n      lookup\n    });\n    const proxy = httpProxy.createProxyServer({\n      target: {\n        host: hostname,\n        port,\n        protocol\n      },\n      xfwd: true,\n      changeOrigin: changeOrigin,\n      secure: config.proxyValidateSSL,\n      agent\n    });\n    ['proxyReq', 'proxyRes'].forEach(function (name) {\n      const callback = proxyDetails[name] || config[name];\n\n      if (callback) {\n        proxy.on(name, callback);\n      }\n    });\n    proxy.on('error', function proxyError(err, req, res) {\n      if (err.code === 'ECONNRESET' && req.socket.destroyed) {\n        log.debug(`failed to proxy ${req.url} (browser hung up the socket)`);\n      } else {\n        log.warn(`failed to proxy ${req.url} (${err.message})`);\n      }\n\n      res.destroy();\n    });\n    return {\n      path: proxyPath,\n      baseUrl: pathname,\n      host: hostname,\n      port,\n      proxy,\n      agent\n    };\n  }), 'path').reverse();\n}\n/**\n * Returns a handler which understands the proxies and its redirects, along with the proxy to use\n * @param proxies An array of proxy record objects\n * @param urlRoot The URL root that karma is mounted on\n * @return {Function} handler function\n */\n\n\nfunction createProxyHandler(proxies, urlRoot) {\n  if (!proxies.length) {\n    const nullProxy = (request, response, next) => next();\n\n    nullProxy.upgrade = () => {};\n\n    return nullProxy;\n  }\n\n  function createProxy(request, response, next) {\n    const proxyRecord = proxies.find(p => request.url.startsWith(p.path));\n\n    if (proxyRecord) {\n      log.debug(`proxying request - ${request.url} to ${proxyRecord.host}:${proxyRecord.port}`);\n      request.url = request.url.replace(proxyRecord.path, proxyRecord.baseUrl);\n      proxyRecord.proxy.web(request, response);\n    } else {\n      return next();\n    }\n  }\n\n  createProxy.upgrade = function (request, socket, head) {\n    // special-case karma's route to avoid upgrading it\n    if (request.url.startsWith(urlRoot)) {\n      log.debug(`NOT upgrading proxyWebSocketRequest ${request.url}`);\n      return;\n    }\n\n    const proxyRecord = proxies.find(p => request.url.startsWith(p.path));\n\n    if (proxyRecord) {\n      log.debug(`upgrade proxyWebSocketRequest ${request.url} to ${proxyRecord.host}:${proxyRecord.port}`);\n      request.url = request.url.replace(proxyRecord.path, proxyRecord.baseUrl);\n      proxyRecord.proxy.ws(request, socket, head);\n    }\n  };\n\n  return createProxy;\n}\n\nexports.create = function (\n/* config */\nconfig,\n/* config.proxies */\nproxies,\n/* emitter */\nemitter) {\n  const proxyRecords = parseProxyConfig(proxies, config);\n  emitter.on('exit', done => {\n    log.debug('Destroying proxy agents');\n    proxyRecords.forEach(proxyRecord => {\n      proxyRecord.agent.destroy();\n    });\n    done();\n  });\n  return createProxyHandler(proxyRecords, config.urlRoot);\n};","map":{"version":3,"names":["url","require","Agent","httpAgent","httpsAgent","httpProxy","_","lookup","log","create","parseProxyConfig","proxies","config","sortBy","map","proxyConfiguration","proxyPath","target","proxyUrl","proxyDetails","parse","pathname","endsWith","warn","hostname","protocol","defaultPorts","port","changeOrigin","agent","keepAlive","proxy","createProxyServer","host","xfwd","secure","proxyValidateSSL","forEach","name","callback","on","proxyError","err","req","res","code","socket","destroyed","debug","message","destroy","path","baseUrl","reverse","createProxyHandler","urlRoot","length","nullProxy","request","response","next","upgrade","createProxy","proxyRecord","find","p","startsWith","replace","web","head","ws","exports","emitter","proxyRecords","done"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/middleware/proxy.js"],"sourcesContent":["const url = require('url')\nconst { Agent: httpAgent } = require('http')\nconst { Agent: httpsAgent } = require('https')\nconst httpProxy = require('http-proxy')\nconst _ = require('lodash')\nconst { lookup } = require('../utils/dns-utils')\n\nconst log = require('../logger').create('proxy')\n\nfunction parseProxyConfig (proxies, config) {\n  proxies = proxies || []\n  return _.sortBy(_.map(proxies, function (proxyConfiguration, proxyPath) {\n    if (typeof proxyConfiguration === 'string') {\n      proxyConfiguration = { target: proxyConfiguration }\n    }\n    let proxyUrl = proxyConfiguration.target\n    // eslint-disable-next-line node/no-deprecated-api\n    const proxyDetails = url.parse(proxyUrl)\n    let pathname = proxyDetails.pathname\n\n    if (proxyPath.endsWith('/') && !proxyUrl.endsWith('/')) {\n      log.warn(`proxy \"${proxyUrl}\" normalized to \"${proxyUrl}/\"`)\n      proxyUrl += '/'\n      pathname += '/'\n    }\n\n    if (!proxyPath.endsWith('/') && proxyUrl.endsWith('/')) {\n      log.warn(`proxy \"${proxyPath}\" normalized to \"${proxyPath}/\"`)\n      proxyPath += '/'\n    }\n\n    if (pathname === '/' && !proxyUrl.endsWith('/')) {\n      pathname = ''\n    }\n\n    const hostname = proxyDetails.hostname || config.hostname\n    const protocol = proxyDetails.protocol || config.protocol\n    const defaultPorts = {\n      'http:': '80',\n      'https:': '443'\n    }\n    const port = proxyDetails.port || defaultPorts[proxyDetails.protocol] || config.port\n    const changeOrigin = proxyConfiguration.changeOrigin || false\n    const Agent = protocol === 'https:' ? httpsAgent : httpAgent\n    const agent = new Agent({\n      keepAlive: true,\n      lookup\n    })\n    const proxy = httpProxy.createProxyServer({\n      target: { host: hostname, port, protocol },\n      xfwd: true,\n      changeOrigin: changeOrigin,\n      secure: config.proxyValidateSSL,\n      agent\n    })\n\n    ;['proxyReq', 'proxyRes'].forEach(function (name) {\n      const callback = proxyDetails[name] || config[name]\n      if (callback) {\n        proxy.on(name, callback)\n      }\n    })\n\n    proxy.on('error', function proxyError (err, req, res) {\n      if (err.code === 'ECONNRESET' && req.socket.destroyed) {\n        log.debug(`failed to proxy ${req.url} (browser hung up the socket)`)\n      } else {\n        log.warn(`failed to proxy ${req.url} (${err.message})`)\n      }\n\n      res.destroy()\n    })\n\n    return { path: proxyPath, baseUrl: pathname, host: hostname, port, proxy, agent }\n  }), 'path').reverse()\n}\n\n/**\n * Returns a handler which understands the proxies and its redirects, along with the proxy to use\n * @param proxies An array of proxy record objects\n * @param urlRoot The URL root that karma is mounted on\n * @return {Function} handler function\n */\nfunction createProxyHandler (proxies, urlRoot) {\n  if (!proxies.length) {\n    const nullProxy = (request, response, next) => next()\n    nullProxy.upgrade = () => {}\n    return nullProxy\n  }\n\n  function createProxy (request, response, next) {\n    const proxyRecord = proxies.find((p) => request.url.startsWith(p.path))\n    if (proxyRecord) {\n      log.debug(`proxying request - ${request.url} to ${proxyRecord.host}:${proxyRecord.port}`)\n      request.url = request.url.replace(proxyRecord.path, proxyRecord.baseUrl)\n      proxyRecord.proxy.web(request, response)\n    } else {\n      return next()\n    }\n  }\n\n  createProxy.upgrade = function (request, socket, head) {\n    // special-case karma's route to avoid upgrading it\n    if (request.url.startsWith(urlRoot)) {\n      log.debug(`NOT upgrading proxyWebSocketRequest ${request.url}`)\n      return\n    }\n\n    const proxyRecord = proxies.find((p) => request.url.startsWith(p.path))\n    if (proxyRecord) {\n      log.debug(`upgrade proxyWebSocketRequest ${request.url} to ${proxyRecord.host}:${proxyRecord.port}`)\n      request.url = request.url.replace(proxyRecord.path, proxyRecord.baseUrl)\n      proxyRecord.proxy.ws(request, socket, head)\n    }\n  }\n\n  return createProxy\n}\n\nexports.create = function (/* config */config, /* config.proxies */proxies, /* emitter */emitter) {\n  const proxyRecords = parseProxyConfig(proxies, config)\n  emitter.on('exit', (done) => {\n    log.debug('Destroying proxy agents')\n    proxyRecords.forEach((proxyRecord) => {\n      proxyRecord.agent.destroy()\n    })\n    done()\n  })\n  return createProxyHandler(proxyRecords, config.urlRoot)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}