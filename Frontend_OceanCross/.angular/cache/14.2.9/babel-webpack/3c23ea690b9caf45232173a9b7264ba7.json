{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DevToolsIgnorePlugin = void 0;\n\nconst webpack_1 = require(\"webpack\"); // Following the naming conventions from\n// https://sourcemaps.info/spec.html#h.ghqpj1ytqjbm\n\n\nconst IGNORE_LIST = 'x_google_ignoreList';\nconst PLUGIN_NAME = 'devtools-ignore-plugin';\n/**\n * This plugin adds a field to source maps that identifies which sources are\n * vendored or runtime-injected (aka third-party) sources. These are consumed by\n * Chrome DevTools to automatically ignore-list sources.\n */\n\nclass DevToolsIgnorePlugin {\n  apply(compiler) {\n    const {\n      RawSource\n    } = compiler.webpack.sources;\n    compiler.hooks.compilation.tap(PLUGIN_NAME, compilation => {\n      compilation.hooks.processAssets.tap({\n        name: PLUGIN_NAME,\n        stage: webpack_1.Compilation.PROCESS_ASSETS_STAGE_DEV_TOOLING,\n        additionalAssets: true\n      }, assets => {\n        for (const [name, asset] of Object.entries(assets)) {\n          // Instead of using `asset.map()` to fetch the source maps from\n          // SourceMapSource assets, process them directly as a RawSource.\n          // This is because `.map()` is slow and can take several seconds.\n          if (!name.endsWith('.map')) {\n            // Ignore non source map files.\n            continue;\n          }\n\n          const mapContent = asset.source().toString();\n\n          if (!mapContent) {\n            continue;\n          }\n\n          const map = JSON.parse(mapContent);\n          const ignoreList = [];\n\n          for (const [index, path] of map.sources.entries()) {\n            if (path.includes('/node_modules/') || path.startsWith('webpack/')) {\n              ignoreList.push(index);\n            }\n          }\n\n          map[IGNORE_LIST] = ignoreList;\n          compilation.updateAsset(name, new RawSource(JSON.stringify(map)));\n        }\n      });\n    });\n  }\n\n}\n\nexports.DevToolsIgnorePlugin = DevToolsIgnorePlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","DevToolsIgnorePlugin","webpack_1","require","IGNORE_LIST","PLUGIN_NAME","apply","compiler","RawSource","webpack","sources","hooks","compilation","tap","processAssets","name","stage","Compilation","PROCESS_ASSETS_STAGE_DEV_TOOLING","additionalAssets","assets","asset","entries","endsWith","mapContent","source","toString","map","JSON","parse","ignoreList","index","path","includes","startsWith","push","updateAsset","stringify"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@angular-devkit/build-angular/src/webpack/plugins/devtools-ignore-plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DevToolsIgnorePlugin = void 0;\nconst webpack_1 = require(\"webpack\");\n// Following the naming conventions from\n// https://sourcemaps.info/spec.html#h.ghqpj1ytqjbm\nconst IGNORE_LIST = 'x_google_ignoreList';\nconst PLUGIN_NAME = 'devtools-ignore-plugin';\n/**\n * This plugin adds a field to source maps that identifies which sources are\n * vendored or runtime-injected (aka third-party) sources. These are consumed by\n * Chrome DevTools to automatically ignore-list sources.\n */\nclass DevToolsIgnorePlugin {\n    apply(compiler) {\n        const { RawSource } = compiler.webpack.sources;\n        compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {\n            compilation.hooks.processAssets.tap({\n                name: PLUGIN_NAME,\n                stage: webpack_1.Compilation.PROCESS_ASSETS_STAGE_DEV_TOOLING,\n                additionalAssets: true,\n            }, (assets) => {\n                for (const [name, asset] of Object.entries(assets)) {\n                    // Instead of using `asset.map()` to fetch the source maps from\n                    // SourceMapSource assets, process them directly as a RawSource.\n                    // This is because `.map()` is slow and can take several seconds.\n                    if (!name.endsWith('.map')) {\n                        // Ignore non source map files.\n                        continue;\n                    }\n                    const mapContent = asset.source().toString();\n                    if (!mapContent) {\n                        continue;\n                    }\n                    const map = JSON.parse(mapContent);\n                    const ignoreList = [];\n                    for (const [index, path] of map.sources.entries()) {\n                        if (path.includes('/node_modules/') || path.startsWith('webpack/')) {\n                            ignoreList.push(index);\n                        }\n                    }\n                    map[IGNORE_LIST] = ignoreList;\n                    compilation.updateAsset(name, new RawSource(JSON.stringify(map)));\n                }\n            });\n        });\n    }\n}\nexports.DevToolsIgnorePlugin = DevToolsIgnorePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAD,CAAzB,C,CACA;AACA;;;AACA,MAAMC,WAAW,GAAG,qBAApB;AACA,MAAMC,WAAW,GAAG,wBAApB;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMJ,oBAAN,CAA2B;EACvBK,KAAK,CAACC,QAAD,EAAW;IACZ,MAAM;MAAEC;IAAF,IAAgBD,QAAQ,CAACE,OAAT,CAAiBC,OAAvC;IACAH,QAAQ,CAACI,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+BR,WAA/B,EAA6CO,WAAD,IAAiB;MACzDA,WAAW,CAACD,KAAZ,CAAkBG,aAAlB,CAAgCD,GAAhC,CAAoC;QAChCE,IAAI,EAAEV,WAD0B;QAEhCW,KAAK,EAAEd,SAAS,CAACe,WAAV,CAAsBC,gCAFG;QAGhCC,gBAAgB,EAAE;MAHc,CAApC,EAIIC,MAAD,IAAY;QACX,KAAK,MAAM,CAACL,IAAD,EAAOM,KAAP,CAAX,IAA4BxB,MAAM,CAACyB,OAAP,CAAeF,MAAf,CAA5B,EAAoD;UAChD;UACA;UACA;UACA,IAAI,CAACL,IAAI,CAACQ,QAAL,CAAc,MAAd,CAAL,EAA4B;YACxB;YACA;UACH;;UACD,MAAMC,UAAU,GAAGH,KAAK,CAACI,MAAN,GAAeC,QAAf,EAAnB;;UACA,IAAI,CAACF,UAAL,EAAiB;YACb;UACH;;UACD,MAAMG,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAZ;UACA,MAAMM,UAAU,GAAG,EAAnB;;UACA,KAAK,MAAM,CAACC,KAAD,EAAQC,IAAR,CAAX,IAA4BL,GAAG,CAACjB,OAAJ,CAAYY,OAAZ,EAA5B,EAAmD;YAC/C,IAAIU,IAAI,CAACC,QAAL,CAAc,gBAAd,KAAmCD,IAAI,CAACE,UAAL,CAAgB,UAAhB,CAAvC,EAAoE;cAChEJ,UAAU,CAACK,IAAX,CAAgBJ,KAAhB;YACH;UACJ;;UACDJ,GAAG,CAACvB,WAAD,CAAH,GAAmB0B,UAAnB;UACAlB,WAAW,CAACwB,WAAZ,CAAwBrB,IAAxB,EAA8B,IAAIP,SAAJ,CAAcoB,IAAI,CAACS,SAAL,CAAeV,GAAf,CAAd,CAA9B;QACH;MACJ,CA3BD;IA4BH,CA7BD;EA8BH;;AAjCsB;;AAmC3B5B,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B"},"metadata":{},"sourceType":"script"}