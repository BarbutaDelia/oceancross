{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) 2015-present, Waysact Pty Ltd\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plugin = void 0;\n\nconst path_1 = require(\"path\");\n\nconst fs_1 = require(\"fs\");\n\nconst assert = __importStar(require(\"typed-assert\"));\n\nconst util_1 = require(\"./util\");\n\nconst assetTypeIntegrityKeys = [[\"js\", \"jsIntegrity\"], [\"css\", \"cssIntegrity\"]];\n\nclass Plugin {\n  constructor(compilation, options, reporter) {\n    /**\n     * @internal\n     */\n    this.assetIntegrity = new Map();\n    /**\n     * @internal\n     */\n\n    this.inverseAssetIntegrity = new Map();\n    /**\n     * @internal\n     */\n\n    this.hwpPublicPath = null;\n    /**\n     * @internal\n     */\n\n    this.sortedSccChunks = [];\n    /**\n     * @internal\n     */\n\n    this.chunkManifest = new Map();\n    /**\n     * @internal\n     */\n\n    this.hashByChunkId = new Map();\n    /**\n     * @internal\n     */\n\n    this.addMissingIntegrityHashes = assets => {\n      Object.keys(assets).forEach(assetKey => {\n        const asset = assets[assetKey];\n        let source;\n\n        try {\n          source = asset.source();\n        } catch (_) {\n          return;\n        }\n\n        this.updateAssetIntegrity(assetKey, util_1.computeIntegrity(this.options.hashFuncNames, source));\n      });\n    };\n    /**\n     * @internal\n     */\n\n\n    this.replaceAsset = (compiler, assets, hashByChunkId, chunkFile) => {\n      const oldSource = assets[chunkFile].source();\n      const hashFuncNames = this.options.hashFuncNames;\n      const newAsset = new compiler.webpack.sources.ReplaceSource(assets[chunkFile], chunkFile);\n      Array.from(hashByChunkId.entries()).forEach(idAndHash => {\n        const magicMarker = util_1.makePlaceholder(hashFuncNames, idAndHash[0]);\n        const magicMarkerPos = oldSource.indexOf(magicMarker);\n\n        if (magicMarkerPos >= 0) {\n          newAsset.replace(magicMarkerPos, magicMarkerPos + magicMarker.length - 1, idAndHash[1], chunkFile);\n        }\n      });\n      assets[chunkFile] = newAsset;\n      return newAsset;\n    };\n\n    this.warnAboutLongTermCaching = assetInfo => {\n      if ((assetInfo.fullhash || assetInfo.chunkhash || assetInfo.modulehash || assetInfo.contenthash) && !(assetInfo.contenthash && this.compilation.compiler.options.optimization.realContentHash)) {\n        this.reporter.warnOnce(\"Using [hash], [fullhash], [modulehash], or [chunkhash] is dangerous \\\nwith SRI. The same is true for [contenthash] when realContentHash is disabled. \\\nUse [contenthash] and ensure realContentHash is enabled. See the README for \\\nmore information.\");\n      }\n    };\n    /**\n     * @internal\n     */\n\n\n    this.processChunk = (chunk, assets) => {\n      Array.from(util_1.findChunks(chunk)).reverse().forEach(chunk => this.processChunkAssets(chunk, assets));\n    };\n\n    this.processChunkAssets = (childChunk, assets) => {\n      const files = Array.from(childChunk.files);\n      files.forEach(sourcePath => {\n        if (assets[sourcePath]) {\n          this.warnIfHotUpdate(assets[sourcePath].source());\n          const newAsset = this.replaceAsset(this.compilation.compiler, assets, this.hashByChunkId, sourcePath);\n          const integrity = util_1.computeIntegrity(this.options.hashFuncNames, newAsset.source());\n\n          if (childChunk.id !== null) {\n            this.hashByChunkId.set(childChunk.id, integrity);\n          }\n\n          this.updateAssetIntegrity(sourcePath, integrity);\n          this.compilation.updateAsset(sourcePath, x => x, assetInfo => {\n            if (!assetInfo) {\n              return undefined;\n            }\n\n            this.warnAboutLongTermCaching(assetInfo);\n            return { ...assetInfo,\n              contenthash: Array.isArray(assetInfo.contenthash) ? [...new Set([...assetInfo.contenthash, integrity])] : assetInfo.contenthash ? [assetInfo.contenthash, integrity] : integrity\n            };\n          });\n        } else {\n          this.reporter.warnOnce(`No asset found for source path '${sourcePath}', options are ${Object.keys(assets).join(\", \")}`);\n        }\n      });\n    };\n    /**\n     * @internal\n     */\n\n\n    this.addAttribute = (elName, source) => {\n      if (!this.compilation.outputOptions.crossOriginLoading) {\n        this.reporter.errorOnce(\"webpack option output.crossOriginLoading not set, code splitting will not work!\");\n      }\n\n      return this.compilation.compiler.webpack.Template.asString([source, elName + `.integrity = ${util_1.sriHashVariableReference}[chunkId];`, elName + \".crossOrigin = \" + JSON.stringify(this.compilation.outputOptions.crossOriginLoading) + \";\"]);\n    };\n    /**\n     * @internal\n     */\n\n\n    this.processAssets = assets => {\n      if (this.options.hashLoading === \"lazy\") {\n        for (const scc of this.sortedSccChunks) {\n          for (const chunk of scc.nodes) {\n            this.processChunkAssets(chunk, assets);\n          }\n        }\n      } else {\n        Array.from(this.compilation.chunks).filter(chunk => chunk.hasRuntime()).forEach(chunk => {\n          this.processChunk(chunk, assets);\n        });\n      }\n\n      this.addMissingIntegrityHashes(assets);\n    };\n    /**\n     * @internal\n     */\n\n\n    this.hwpAssetPath = src => {\n      assert.isNotNull(this.hwpPublicPath);\n      return path_1.relative(this.hwpPublicPath, src);\n    };\n    /**\n     * @internal\n     */\n\n\n    this.getIntegrityChecksumForAsset = (assets, src) => {\n      if (this.assetIntegrity.has(src)) {\n        return this.assetIntegrity.get(src);\n      }\n\n      const normalizedSrc = util_1.normalizePath(src);\n      const normalizedKey = Object.keys(assets).find(assetKey => util_1.normalizePath(assetKey) === normalizedSrc);\n\n      if (normalizedKey) {\n        return this.assetIntegrity.get(normalizedKey);\n      }\n\n      return undefined;\n    };\n    /**\n     * @internal\n     */\n\n\n    this.processTag = tag => {\n      if (tag.attributes && Object.prototype.hasOwnProperty.call(tag.attributes, \"integrity\")) {\n        return;\n      }\n\n      const tagSrc = util_1.getTagSrc(tag);\n\n      if (!tagSrc) {\n        return;\n      }\n\n      const src = this.hwpAssetPath(tagSrc);\n      tag.attributes.integrity = this.getIntegrityChecksumForAsset(this.compilation.assets, src) || util_1.computeIntegrity(this.options.hashFuncNames, fs_1.readFileSync(path_1.join(this.compilation.compiler.outputPath, src)));\n      tag.attributes.crossorigin = this.compilation.compiler.options.output.crossOriginLoading || \"anonymous\";\n    };\n    /**\n     * @internal\n     */\n\n\n    this.beforeRuntimeRequirements = () => {\n      if (this.options.hashLoading === \"lazy\") {\n        const [sortedSccChunks, chunkManifest] = util_1.getChunkToManifestMap(this.compilation.chunks);\n        this.sortedSccChunks = sortedSccChunks;\n        this.chunkManifest = chunkManifest;\n      }\n\n      this.hashByChunkId.clear();\n    };\n\n    this.handleHwpPluginArgs = ({\n      assets\n    }) => {\n      this.hwpPublicPath = assets.publicPath;\n      assetTypeIntegrityKeys.forEach(([a, b]) => {\n        if (b) {\n          assets[b] = assets[a].map(filePath => this.getIntegrityChecksumForAsset(this.compilation.assets, this.hwpAssetPath(filePath))).filter(util_1.notNil);\n        }\n      });\n    };\n\n    this.updateHash = (input, oldHash) => {\n      const assetKey = this.inverseAssetIntegrity.get(oldHash);\n\n      if (assetKey && input.length === 1) {\n        const newIntegrity = util_1.computeIntegrity(this.options.hashFuncNames, input[0]);\n        this.inverseAssetIntegrity.delete(oldHash);\n        this.assetIntegrity.delete(assetKey);\n        this.updateAssetIntegrity(assetKey, newIntegrity);\n        return newIntegrity;\n      }\n\n      return undefined;\n    };\n\n    this.handleHwpBodyTags = ({\n      headTags,\n      bodyTags\n    }) => {\n      this.addMissingIntegrityHashes(this.compilation.assets);\n      headTags.concat(bodyTags).forEach(tag => this.processTag(tag));\n    };\n\n    this.compilation = compilation;\n    this.options = options;\n    this.reporter = reporter;\n  }\n  /**\n   * @internal\n   */\n\n\n  warnIfHotUpdate(source) {\n    if (source.indexOf(\"webpackHotUpdate\") >= 0) {\n      this.reporter.warnOnce(\"webpack-subresource-integrity may interfere with hot reloading. \" + \"Consider disabling this plugin in development mode.\");\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  updateAssetIntegrity(assetKey, integrity) {\n    if (!this.assetIntegrity.has(assetKey)) {\n      this.assetIntegrity.set(assetKey, integrity);\n      this.inverseAssetIntegrity.set(integrity, assetKey);\n    }\n  }\n\n  getChildChunksToAddToChunkManifest(chunk) {\n    var _a;\n\n    return (_a = this.chunkManifest.get(chunk)) !== null && _a !== void 0 ? _a : new Set();\n  }\n\n}\n\nexports.Plugin = Plugin;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","Plugin","path_1","require","fs_1","assert","util_1","assetTypeIntegrityKeys","constructor","compilation","options","reporter","assetIntegrity","Map","inverseAssetIntegrity","hwpPublicPath","sortedSccChunks","chunkManifest","hashByChunkId","addMissingIntegrityHashes","assets","keys","forEach","assetKey","asset","source","_","updateAssetIntegrity","computeIntegrity","hashFuncNames","replaceAsset","compiler","chunkFile","oldSource","newAsset","webpack","sources","ReplaceSource","Array","from","entries","idAndHash","magicMarker","makePlaceholder","magicMarkerPos","indexOf","replace","length","warnAboutLongTermCaching","assetInfo","fullhash","chunkhash","modulehash","contenthash","optimization","realContentHash","warnOnce","processChunk","chunk","findChunks","reverse","processChunkAssets","childChunk","files","sourcePath","warnIfHotUpdate","integrity","id","set","updateAsset","x","isArray","Set","join","addAttribute","elName","outputOptions","crossOriginLoading","errorOnce","Template","asString","sriHashVariableReference","JSON","stringify","processAssets","hashLoading","scc","nodes","chunks","filter","hasRuntime","hwpAssetPath","src","isNotNull","relative","getIntegrityChecksumForAsset","has","normalizedSrc","normalizePath","normalizedKey","find","processTag","tag","attributes","tagSrc","getTagSrc","readFileSync","outputPath","crossorigin","output","beforeRuntimeRequirements","getChunkToManifestMap","clear","handleHwpPluginArgs","publicPath","a","b","map","filePath","notNil","updateHash","input","oldHash","newIntegrity","delete","handleHwpBodyTags","headTags","bodyTags","concat","getChildChunksToAddToChunkManifest","_a"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/webpack-subresource-integrity/plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) 2015-present, Waysact Pty Ltd\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugin = void 0;\nconst path_1 = require(\"path\");\nconst fs_1 = require(\"fs\");\nconst assert = __importStar(require(\"typed-assert\"));\nconst util_1 = require(\"./util\");\nconst assetTypeIntegrityKeys = [\n    [\"js\", \"jsIntegrity\"],\n    [\"css\", \"cssIntegrity\"],\n];\nclass Plugin {\n    constructor(compilation, options, reporter) {\n        /**\n         * @internal\n         */\n        this.assetIntegrity = new Map();\n        /**\n         * @internal\n         */\n        this.inverseAssetIntegrity = new Map();\n        /**\n         * @internal\n         */\n        this.hwpPublicPath = null;\n        /**\n         * @internal\n         */\n        this.sortedSccChunks = [];\n        /**\n         * @internal\n         */\n        this.chunkManifest = new Map();\n        /**\n         * @internal\n         */\n        this.hashByChunkId = new Map();\n        /**\n         * @internal\n         */\n        this.addMissingIntegrityHashes = (assets) => {\n            Object.keys(assets).forEach((assetKey) => {\n                const asset = assets[assetKey];\n                let source;\n                try {\n                    source = asset.source();\n                }\n                catch (_) {\n                    return;\n                }\n                this.updateAssetIntegrity(assetKey, util_1.computeIntegrity(this.options.hashFuncNames, source));\n            });\n        };\n        /**\n         * @internal\n         */\n        this.replaceAsset = (compiler, assets, hashByChunkId, chunkFile) => {\n            const oldSource = assets[chunkFile].source();\n            const hashFuncNames = this.options.hashFuncNames;\n            const newAsset = new compiler.webpack.sources.ReplaceSource(assets[chunkFile], chunkFile);\n            Array.from(hashByChunkId.entries()).forEach((idAndHash) => {\n                const magicMarker = util_1.makePlaceholder(hashFuncNames, idAndHash[0]);\n                const magicMarkerPos = oldSource.indexOf(magicMarker);\n                if (magicMarkerPos >= 0) {\n                    newAsset.replace(magicMarkerPos, magicMarkerPos + magicMarker.length - 1, idAndHash[1], chunkFile);\n                }\n            });\n            assets[chunkFile] = newAsset;\n            return newAsset;\n        };\n        this.warnAboutLongTermCaching = (assetInfo) => {\n            if ((assetInfo.fullhash ||\n                assetInfo.chunkhash ||\n                assetInfo.modulehash ||\n                assetInfo.contenthash) &&\n                !(assetInfo.contenthash &&\n                    this.compilation.compiler.options.optimization.realContentHash)) {\n                this.reporter.warnOnce(\"Using [hash], [fullhash], [modulehash], or [chunkhash] is dangerous \\\nwith SRI. The same is true for [contenthash] when realContentHash is disabled. \\\nUse [contenthash] and ensure realContentHash is enabled. See the README for \\\nmore information.\");\n            }\n        };\n        /**\n         * @internal\n         */\n        this.processChunk = (chunk, assets) => {\n            Array.from(util_1.findChunks(chunk))\n                .reverse()\n                .forEach((chunk) => this.processChunkAssets(chunk, assets));\n        };\n        this.processChunkAssets = (childChunk, assets) => {\n            const files = Array.from(childChunk.files);\n            files.forEach((sourcePath) => {\n                if (assets[sourcePath]) {\n                    this.warnIfHotUpdate(assets[sourcePath].source());\n                    const newAsset = this.replaceAsset(this.compilation.compiler, assets, this.hashByChunkId, sourcePath);\n                    const integrity = util_1.computeIntegrity(this.options.hashFuncNames, newAsset.source());\n                    if (childChunk.id !== null) {\n                        this.hashByChunkId.set(childChunk.id, integrity);\n                    }\n                    this.updateAssetIntegrity(sourcePath, integrity);\n                    this.compilation.updateAsset(sourcePath, (x) => x, (assetInfo) => {\n                        if (!assetInfo) {\n                            return undefined;\n                        }\n                        this.warnAboutLongTermCaching(assetInfo);\n                        return {\n                            ...assetInfo,\n                            contenthash: Array.isArray(assetInfo.contenthash)\n                                ? [...new Set([...assetInfo.contenthash, integrity])]\n                                : assetInfo.contenthash\n                                    ? [assetInfo.contenthash, integrity]\n                                    : integrity,\n                        };\n                    });\n                }\n                else {\n                    this.reporter.warnOnce(`No asset found for source path '${sourcePath}', options are ${Object.keys(assets).join(\", \")}`);\n                }\n            });\n        };\n        /**\n         * @internal\n         */\n        this.addAttribute = (elName, source) => {\n            if (!this.compilation.outputOptions.crossOriginLoading) {\n                this.reporter.errorOnce(\"webpack option output.crossOriginLoading not set, code splitting will not work!\");\n            }\n            return this.compilation.compiler.webpack.Template.asString([\n                source,\n                elName + `.integrity = ${util_1.sriHashVariableReference}[chunkId];`,\n                elName +\n                    \".crossOrigin = \" +\n                    JSON.stringify(this.compilation.outputOptions.crossOriginLoading) +\n                    \";\",\n            ]);\n        };\n        /**\n         * @internal\n         */\n        this.processAssets = (assets) => {\n            if (this.options.hashLoading === \"lazy\") {\n                for (const scc of this.sortedSccChunks) {\n                    for (const chunk of scc.nodes) {\n                        this.processChunkAssets(chunk, assets);\n                    }\n                }\n            }\n            else {\n                Array.from(this.compilation.chunks)\n                    .filter((chunk) => chunk.hasRuntime())\n                    .forEach((chunk) => {\n                    this.processChunk(chunk, assets);\n                });\n            }\n            this.addMissingIntegrityHashes(assets);\n        };\n        /**\n         * @internal\n         */\n        this.hwpAssetPath = (src) => {\n            assert.isNotNull(this.hwpPublicPath);\n            return path_1.relative(this.hwpPublicPath, src);\n        };\n        /**\n         * @internal\n         */\n        this.getIntegrityChecksumForAsset = (assets, src) => {\n            if (this.assetIntegrity.has(src)) {\n                return this.assetIntegrity.get(src);\n            }\n            const normalizedSrc = util_1.normalizePath(src);\n            const normalizedKey = Object.keys(assets).find((assetKey) => util_1.normalizePath(assetKey) === normalizedSrc);\n            if (normalizedKey) {\n                return this.assetIntegrity.get(normalizedKey);\n            }\n            return undefined;\n        };\n        /**\n         * @internal\n         */\n        this.processTag = (tag) => {\n            if (tag.attributes &&\n                Object.prototype.hasOwnProperty.call(tag.attributes, \"integrity\")) {\n                return;\n            }\n            const tagSrc = util_1.getTagSrc(tag);\n            if (!tagSrc) {\n                return;\n            }\n            const src = this.hwpAssetPath(tagSrc);\n            tag.attributes.integrity =\n                this.getIntegrityChecksumForAsset(this.compilation.assets, src) ||\n                    util_1.computeIntegrity(this.options.hashFuncNames, fs_1.readFileSync(path_1.join(this.compilation.compiler.outputPath, src)));\n            tag.attributes.crossorigin =\n                this.compilation.compiler.options.output.crossOriginLoading ||\n                    \"anonymous\";\n        };\n        /**\n         * @internal\n         */\n        this.beforeRuntimeRequirements = () => {\n            if (this.options.hashLoading === \"lazy\") {\n                const [sortedSccChunks, chunkManifest] = util_1.getChunkToManifestMap(this.compilation.chunks);\n                this.sortedSccChunks = sortedSccChunks;\n                this.chunkManifest = chunkManifest;\n            }\n            this.hashByChunkId.clear();\n        };\n        this.handleHwpPluginArgs = ({ assets }) => {\n            this.hwpPublicPath = assets.publicPath;\n            assetTypeIntegrityKeys.forEach(([a, b]) => {\n                if (b) {\n                    assets[b] = assets[a]\n                        .map((filePath) => this.getIntegrityChecksumForAsset(this.compilation.assets, this.hwpAssetPath(filePath)))\n                        .filter(util_1.notNil);\n                }\n            });\n        };\n        this.updateHash = (input, oldHash) => {\n            const assetKey = this.inverseAssetIntegrity.get(oldHash);\n            if (assetKey && input.length === 1) {\n                const newIntegrity = util_1.computeIntegrity(this.options.hashFuncNames, input[0]);\n                this.inverseAssetIntegrity.delete(oldHash);\n                this.assetIntegrity.delete(assetKey);\n                this.updateAssetIntegrity(assetKey, newIntegrity);\n                return newIntegrity;\n            }\n            return undefined;\n        };\n        this.handleHwpBodyTags = ({ headTags, bodyTags, }) => {\n            this.addMissingIntegrityHashes(this.compilation.assets);\n            headTags\n                .concat(bodyTags)\n                .forEach((tag) => this.processTag(tag));\n        };\n        this.compilation = compilation;\n        this.options = options;\n        this.reporter = reporter;\n    }\n    /**\n     * @internal\n     */\n    warnIfHotUpdate(source) {\n        if (source.indexOf(\"webpackHotUpdate\") >= 0) {\n            this.reporter.warnOnce(\"webpack-subresource-integrity may interfere with hot reloading. \" +\n                \"Consider disabling this plugin in development mode.\");\n        }\n    }\n    /**\n     * @internal\n     */\n    updateAssetIntegrity(assetKey, integrity) {\n        if (!this.assetIntegrity.has(assetKey)) {\n            this.assetIntegrity.set(assetKey, integrity);\n            this.inverseAssetIntegrity.set(integrity, assetKey);\n        }\n    }\n    getChildChunksToAddToChunkManifest(chunk) {\n        var _a;\n        return (_a = this.chunkManifest.get(chunk)) !== null && _a !== void 0 ? _a : new Set();\n    }\n}\nexports.Plugin = Plugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}