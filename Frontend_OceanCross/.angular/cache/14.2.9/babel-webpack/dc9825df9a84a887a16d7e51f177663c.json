{"ast":null,"code":"const http = require('http');\n\nconst cfg = require('./config');\n\nconst logger = require('./logger');\n\nconst helper = require('./helper');\n\nconst {\n  lookup\n} = require('./utils/dns-utils');\n\nexports.stop = function (cliOptionsOrConfig, done) {\n  cliOptionsOrConfig = cliOptionsOrConfig || {};\n  const log = logger.create('stopper');\n  done = helper.isFunction(done) ? done : process.exit;\n  let config;\n\n  if (cliOptionsOrConfig instanceof cfg.Config) {\n    config = cliOptionsOrConfig;\n  } else {\n    logger.setupFromConfig({\n      colors: cliOptionsOrConfig.colors,\n      logLevel: cliOptionsOrConfig.logLevel\n    });\n    const deprecatedCliOptionsMessage = 'Passing raw CLI options to `stopper(config, done)` is deprecated. Use ' + '`parseConfig(configFilePath, cliOptions, {promiseConfig: true, throwErrors: true})` ' + 'to prepare a processed `Config` instance and pass that as the ' + '`config` argument instead.';\n    log.warn(deprecatedCliOptionsMessage);\n\n    try {\n      config = cfg.parseConfig(cliOptionsOrConfig.configFile, cliOptionsOrConfig, {\n        promiseConfig: false,\n        throwErrors: true\n      });\n    } catch (parseConfigError) {\n      // TODO: change how `done` falls back to exit in next major version\n      //  SEE: https://github.com/karma-runner/karma/pull/3635#discussion_r565399378\n      done(1);\n    }\n  }\n\n  const request = http.request({\n    hostname: config.hostname,\n    path: config.urlRoot + 'stop',\n    port: config.port,\n    method: 'GET',\n    lookup\n  });\n  request.on('response', function (response) {\n    if (response.statusCode === 200) {\n      log.info('Server stopped.');\n      done(0);\n    } else {\n      log.error(`Server returned status code: ${response.statusCode}`);\n      done(1);\n    }\n  });\n  request.on('error', function (e) {\n    if (e.code === 'ECONNREFUSED') {\n      log.error(`There is no server listening on port ${config.port}`);\n      done(1, e.code);\n    } else {\n      throw e;\n    }\n  });\n  request.end();\n};","map":{"version":3,"names":["http","require","cfg","logger","helper","lookup","exports","stop","cliOptionsOrConfig","done","log","create","isFunction","process","exit","config","Config","setupFromConfig","colors","logLevel","deprecatedCliOptionsMessage","warn","parseConfig","configFile","promiseConfig","throwErrors","parseConfigError","request","hostname","path","urlRoot","port","method","on","response","statusCode","info","error","e","code","end"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/stopper.js"],"sourcesContent":["const http = require('http')\nconst cfg = require('./config')\nconst logger = require('./logger')\nconst helper = require('./helper')\nconst { lookup } = require('./utils/dns-utils')\n\nexports.stop = function (cliOptionsOrConfig, done) {\n  cliOptionsOrConfig = cliOptionsOrConfig || {}\n  const log = logger.create('stopper')\n  done = helper.isFunction(done) ? done : process.exit\n\n  let config\n  if (cliOptionsOrConfig instanceof cfg.Config) {\n    config = cliOptionsOrConfig\n  } else {\n    logger.setupFromConfig({\n      colors: cliOptionsOrConfig.colors,\n      logLevel: cliOptionsOrConfig.logLevel\n    })\n    const deprecatedCliOptionsMessage =\n      'Passing raw CLI options to `stopper(config, done)` is deprecated. Use ' +\n      '`parseConfig(configFilePath, cliOptions, {promiseConfig: true, throwErrors: true})` ' +\n      'to prepare a processed `Config` instance and pass that as the ' +\n      '`config` argument instead.'\n    log.warn(deprecatedCliOptionsMessage)\n    try {\n      config = cfg.parseConfig(\n        cliOptionsOrConfig.configFile,\n        cliOptionsOrConfig,\n        {\n          promiseConfig: false,\n          throwErrors: true\n        }\n      )\n    } catch (parseConfigError) {\n      // TODO: change how `done` falls back to exit in next major version\n      //  SEE: https://github.com/karma-runner/karma/pull/3635#discussion_r565399378\n      done(1)\n    }\n  }\n\n  const request = http.request({\n    hostname: config.hostname,\n    path: config.urlRoot + 'stop',\n    port: config.port,\n    method: 'GET',\n    lookup\n  })\n\n  request.on('response', function (response) {\n    if (response.statusCode === 200) {\n      log.info('Server stopped.')\n      done(0)\n    } else {\n      log.error(`Server returned status code: ${response.statusCode}`)\n      done(1)\n    }\n  })\n\n  request.on('error', function (e) {\n    if (e.code === 'ECONNREFUSED') {\n      log.error(`There is no server listening on port ${config.port}`)\n      done(1, e.code)\n    } else {\n      throw e\n    }\n  })\n  request.end()\n}\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,UAAD,CAAnB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;EAAEI;AAAF,IAAaJ,OAAO,CAAC,mBAAD,CAA1B;;AAEAK,OAAO,CAACC,IAAR,GAAe,UAAUC,kBAAV,EAA8BC,IAA9B,EAAoC;EACjDD,kBAAkB,GAAGA,kBAAkB,IAAI,EAA3C;EACA,MAAME,GAAG,GAAGP,MAAM,CAACQ,MAAP,CAAc,SAAd,CAAZ;EACAF,IAAI,GAAGL,MAAM,CAACQ,UAAP,CAAkBH,IAAlB,IAA0BA,IAA1B,GAAiCI,OAAO,CAACC,IAAhD;EAEA,IAAIC,MAAJ;;EACA,IAAIP,kBAAkB,YAAYN,GAAG,CAACc,MAAtC,EAA8C;IAC5CD,MAAM,GAAGP,kBAAT;EACD,CAFD,MAEO;IACLL,MAAM,CAACc,eAAP,CAAuB;MACrBC,MAAM,EAAEV,kBAAkB,CAACU,MADN;MAErBC,QAAQ,EAAEX,kBAAkB,CAACW;IAFR,CAAvB;IAIA,MAAMC,2BAA2B,GAC/B,2EACA,sFADA,GAEA,gEAFA,GAGA,4BAJF;IAKAV,GAAG,CAACW,IAAJ,CAASD,2BAAT;;IACA,IAAI;MACFL,MAAM,GAAGb,GAAG,CAACoB,WAAJ,CACPd,kBAAkB,CAACe,UADZ,EAEPf,kBAFO,EAGP;QACEgB,aAAa,EAAE,KADjB;QAEEC,WAAW,EAAE;MAFf,CAHO,CAAT;IAQD,CATD,CASE,OAAOC,gBAAP,EAAyB;MACzB;MACA;MACAjB,IAAI,CAAC,CAAD,CAAJ;IACD;EACF;;EAED,MAAMkB,OAAO,GAAG3B,IAAI,CAAC2B,OAAL,CAAa;IAC3BC,QAAQ,EAAEb,MAAM,CAACa,QADU;IAE3BC,IAAI,EAAEd,MAAM,CAACe,OAAP,GAAiB,MAFI;IAG3BC,IAAI,EAAEhB,MAAM,CAACgB,IAHc;IAI3BC,MAAM,EAAE,KAJmB;IAK3B3B;EAL2B,CAAb,CAAhB;EAQAsB,OAAO,CAACM,EAAR,CAAW,UAAX,EAAuB,UAAUC,QAAV,EAAoB;IACzC,IAAIA,QAAQ,CAACC,UAAT,KAAwB,GAA5B,EAAiC;MAC/BzB,GAAG,CAAC0B,IAAJ,CAAS,iBAAT;MACA3B,IAAI,CAAC,CAAD,CAAJ;IACD,CAHD,MAGO;MACLC,GAAG,CAAC2B,KAAJ,CAAW,gCAA+BH,QAAQ,CAACC,UAAW,EAA9D;MACA1B,IAAI,CAAC,CAAD,CAAJ;IACD;EACF,CARD;EAUAkB,OAAO,CAACM,EAAR,CAAW,OAAX,EAAoB,UAAUK,CAAV,EAAa;IAC/B,IAAIA,CAAC,CAACC,IAAF,KAAW,cAAf,EAA+B;MAC7B7B,GAAG,CAAC2B,KAAJ,CAAW,wCAAuCtB,MAAM,CAACgB,IAAK,EAA9D;MACAtB,IAAI,CAAC,CAAD,EAAI6B,CAAC,CAACC,IAAN,CAAJ;IACD,CAHD,MAGO;MACL,MAAMD,CAAN;IACD;EACF,CAPD;EAQAX,OAAO,CAACa,GAAR;AACD,CA9DD"},"metadata":{},"sourceType":"script"}