{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureOutputPaths = void 0;\n\nconst fs_1 = require(\"fs\");\n\nconst path_1 = require(\"path\");\n\nfunction ensureOutputPaths(baseOutputPath, i18n) {\n  const outputPaths = i18n.shouldInline ? [...i18n.inlineLocales].map(l => [l, i18n.flatOutput ? baseOutputPath : (0, path_1.join)(baseOutputPath, l)]) : [['', baseOutputPath]];\n\n  for (const [, outputPath] of outputPaths) {\n    if (!(0, fs_1.existsSync)(outputPath)) {\n      (0, fs_1.mkdirSync)(outputPath, {\n        recursive: true\n      });\n    }\n  }\n\n  return new Map(outputPaths);\n}\n\nexports.ensureOutputPaths = ensureOutputPaths;","map":{"version":3,"names":["Object","defineProperty","exports","value","ensureOutputPaths","fs_1","require","path_1","baseOutputPath","i18n","outputPaths","shouldInline","inlineLocales","map","l","flatOutput","join","outputPath","existsSync","mkdirSync","recursive","Map"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@angular-devkit/build-angular/src/utils/output-paths.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureOutputPaths = void 0;\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nfunction ensureOutputPaths(baseOutputPath, i18n) {\n    const outputPaths = i18n.shouldInline\n        ? [...i18n.inlineLocales].map((l) => [\n            l,\n            i18n.flatOutput ? baseOutputPath : (0, path_1.join)(baseOutputPath, l),\n        ])\n        : [['', baseOutputPath]];\n    for (const [, outputPath] of outputPaths) {\n        if (!(0, fs_1.existsSync)(outputPath)) {\n            (0, fs_1.mkdirSync)(outputPath, { recursive: true });\n        }\n    }\n    return new Map(outputPaths);\n}\nexports.ensureOutputPaths = ensureOutputPaths;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,IAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAD,CAAtB;;AACA,SAASF,iBAAT,CAA2BI,cAA3B,EAA2CC,IAA3C,EAAiD;EAC7C,MAAMC,WAAW,GAAGD,IAAI,CAACE,YAAL,GACd,CAAC,GAAGF,IAAI,CAACG,aAAT,EAAwBC,GAAxB,CAA6BC,CAAD,IAAO,CACjCA,CADiC,EAEjCL,IAAI,CAACM,UAAL,GAAkBP,cAAlB,GAAmC,CAAC,GAAGD,MAAM,CAACS,IAAX,EAAiBR,cAAjB,EAAiCM,CAAjC,CAFF,CAAnC,CADc,GAKd,CAAC,CAAC,EAAD,EAAKN,cAAL,CAAD,CALN;;EAMA,KAAK,MAAM,GAAGS,UAAH,CAAX,IAA6BP,WAA7B,EAA0C;IACtC,IAAI,CAAC,CAAC,GAAGL,IAAI,CAACa,UAAT,EAAqBD,UAArB,CAAL,EAAuC;MACnC,CAAC,GAAGZ,IAAI,CAACc,SAAT,EAAoBF,UAApB,EAAgC;QAAEG,SAAS,EAAE;MAAb,CAAhC;IACH;EACJ;;EACD,OAAO,IAAIC,GAAJ,CAAQX,WAAR,CAAP;AACH;;AACDR,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B"},"metadata":{},"sourceType":"script"}