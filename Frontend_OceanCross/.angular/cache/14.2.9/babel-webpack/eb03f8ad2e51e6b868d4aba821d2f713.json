{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DnsTxt = void 0;\n\nclass DnsTxt {\n  constructor(opts = {}) {\n    this.binary = opts ? opts.binary : false;\n  }\n\n  encode(data = {}) {\n    return Object.entries(data).map(([key, value]) => {\n      let item = `${key}=${value}`;\n      return Buffer.from(item);\n    });\n  }\n\n  decode(buffer) {\n    var data = {};\n\n    try {\n      let format = buffer.toString();\n      let parts = format.split(/=(.+)/);\n      let key = parts[0];\n      let value = parts[1];\n      data[key] = value;\n    } catch (_) {}\n\n    return data;\n  }\n\n  decodeAll(buffer) {\n    return buffer.filter(i => i.length > 1).map(i => this.decode(i)).reduce((prev, curr) => {\n      var obj = prev;\n      let [key] = Object.keys(curr);\n      let [value] = Object.values(curr);\n      obj[key] = value;\n      return obj;\n    }, {});\n  }\n\n}\n\nexports.DnsTxt = DnsTxt;\nexports.default = DnsTxt;","map":{"version":3,"names":["Object","defineProperty","exports","value","DnsTxt","constructor","opts","binary","encode","data","entries","map","key","item","Buffer","from","decode","buffer","format","toString","parts","split","_","decodeAll","filter","i","length","reduce","prev","curr","obj","keys","values","default"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/bonjour-service/dist/lib/dns-txt.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DnsTxt = void 0;\nclass DnsTxt {\n    constructor(opts = {}) {\n        this.binary = opts ? opts.binary : false;\n    }\n    encode(data = {}) {\n        return Object.entries(data)\n            .map(([key, value]) => {\n            let item = `${key}=${value}`;\n            return Buffer.from(item);\n        });\n    }\n    decode(buffer) {\n        var data = {};\n        try {\n            let format = buffer.toString();\n            let parts = format.split(/=(.+)/);\n            let key = parts[0];\n            let value = parts[1];\n            data[key] = value;\n        }\n        catch (_) { }\n        return data;\n    }\n    decodeAll(buffer) {\n        return buffer\n            .filter(i => i.length > 1)\n            .map(i => this.decode(i))\n            .reduce((prev, curr) => {\n            var obj = prev;\n            let [key] = Object.keys(curr);\n            let [value] = Object.values(curr);\n            obj[key] = value;\n            return obj;\n        }, {});\n    }\n}\nexports.DnsTxt = DnsTxt;\nexports.default = DnsTxt;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiB,KAAK,CAAtB;;AACA,MAAMA,MAAN,CAAa;EACTC,WAAW,CAACC,IAAI,GAAG,EAAR,EAAY;IACnB,KAAKC,MAAL,GAAcD,IAAI,GAAGA,IAAI,CAACC,MAAR,GAAiB,KAAnC;EACH;;EACDC,MAAM,CAACC,IAAI,GAAG,EAAR,EAAY;IACd,OAAOT,MAAM,CAACU,OAAP,CAAeD,IAAf,EACFE,GADE,CACE,CAAC,CAACC,GAAD,EAAMT,KAAN,CAAD,KAAkB;MACvB,IAAIU,IAAI,GAAI,GAAED,GAAI,IAAGT,KAAM,EAA3B;MACA,OAAOW,MAAM,CAACC,IAAP,CAAYF,IAAZ,CAAP;IACH,CAJM,CAAP;EAKH;;EACDG,MAAM,CAACC,MAAD,EAAS;IACX,IAAIR,IAAI,GAAG,EAAX;;IACA,IAAI;MACA,IAAIS,MAAM,GAAGD,MAAM,CAACE,QAAP,EAAb;MACA,IAAIC,KAAK,GAAGF,MAAM,CAACG,KAAP,CAAa,OAAb,CAAZ;MACA,IAAIT,GAAG,GAAGQ,KAAK,CAAC,CAAD,CAAf;MACA,IAAIjB,KAAK,GAAGiB,KAAK,CAAC,CAAD,CAAjB;MACAX,IAAI,CAACG,GAAD,CAAJ,GAAYT,KAAZ;IACH,CAND,CAOA,OAAOmB,CAAP,EAAU,CAAG;;IACb,OAAOb,IAAP;EACH;;EACDc,SAAS,CAACN,MAAD,EAAS;IACd,OAAOA,MAAM,CACRO,MADE,CACKC,CAAC,IAAIA,CAAC,CAACC,MAAF,GAAW,CADrB,EAEFf,GAFE,CAEEc,CAAC,IAAI,KAAKT,MAAL,CAAYS,CAAZ,CAFP,EAGFE,MAHE,CAGK,CAACC,IAAD,EAAOC,IAAP,KAAgB;MACxB,IAAIC,GAAG,GAAGF,IAAV;MACA,IAAI,CAAChB,GAAD,IAAQZ,MAAM,CAAC+B,IAAP,CAAYF,IAAZ,CAAZ;MACA,IAAI,CAAC1B,KAAD,IAAUH,MAAM,CAACgC,MAAP,CAAcH,IAAd,CAAd;MACAC,GAAG,CAAClB,GAAD,CAAH,GAAWT,KAAX;MACA,OAAO2B,GAAP;IACH,CATM,EASJ,EATI,CAAP;EAUH;;AAlCQ;;AAoCb5B,OAAO,CAACE,MAAR,GAAiBA,MAAjB;AACAF,OAAO,CAAC+B,OAAR,GAAkB7B,MAAlB"},"metadata":{},"sourceType":"script"}