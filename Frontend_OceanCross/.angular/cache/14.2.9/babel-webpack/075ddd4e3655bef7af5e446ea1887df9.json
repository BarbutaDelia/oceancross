{"ast":null,"code":"var _asyncToGenerator = require(\"/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\n/**\n * Runner middleware is responsible for communication with `karma run`.\n *\n * It basically triggers a test run and streams stdout back.\n */\nconst _ = require('lodash');\n\nconst path = require('path');\n\nconst helper = require('../helper');\n\nconst log = require('../logger').create();\n\nconst constant = require('../constants');\n\nconst json = require('body-parser').json(); // TODO(vojta): disable when single-run mode\n\n\nfunction createRunnerMiddleware(emitter, fileList, capturedBrowsers, reporter, executor,\n/* config.protocol */\nprotocol,\n/* config.hostname */\nhostname,\n/* config.port */\nport,\n/* config.urlRoot */\nurlRoot, config) {\n  helper.saveOriginalArgs(config);\n  return function (request, response, next) {\n    if (request.url !== '/__run__' && request.url !== urlRoot + 'run') {\n      return next();\n    }\n\n    log.debug('Execution (fired by runner)');\n    response.writeHead(200);\n\n    if (!capturedBrowsers.length) {\n      const url = `${protocol}//${hostname}:${port}${urlRoot}`;\n      return response.end(`No captured browser, open ${url}\\n`);\n    }\n\n    json(request, response, function () {\n      if (!capturedBrowsers.areAllReady([])) {\n        response.write('Waiting for previous execution...\\n');\n      }\n\n      const data = request.body;\n      updateClientArgs(data);\n      handleRun(data);\n      refreshFileList(data).then(() => {\n        executor.schedule();\n      }).catch(error => {\n        const errorMessage = `Error during refresh file list. ${error.stack || error}`;\n        executor.scheduleError(errorMessage);\n      });\n    });\n\n    function updateClientArgs(data) {\n      helper.restoreOriginalArgs(config);\n\n      if (_.isEmpty(data.args)) {\n        log.debug('Ignoring empty client.args from run command');\n      } else if (_.isArray(data.args) && _.isArray(config.client.args) || _.isPlainObject(data.args) && _.isPlainObject(config.client.args)) {\n        log.debug('Merging client.args with ', data.args);\n        config.client.args = _.merge(config.client.args, data.args);\n      } else {\n        log.warn('Replacing client.args with ', data.args, ' as their types do not match.');\n        config.client.args = data.args;\n      }\n    }\n\n    function refreshFileList(_x) {\n      return _refreshFileList.apply(this, arguments);\n    }\n\n    function _refreshFileList() {\n      _refreshFileList = _asyncToGenerator(function* (data) {\n        let fullRefresh = true;\n\n        if (helper.isArray(data.changedFiles)) {\n          yield Promise.all(data.changedFiles.map( /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator(function* (filepath) {\n              yield fileList.changeFile(path.resolve(config.basePath, filepath));\n              fullRefresh = false;\n            });\n\n            return function (_x2) {\n              return _ref.apply(this, arguments);\n            };\n          }()));\n        }\n\n        if (helper.isArray(data.addedFiles)) {\n          yield Promise.all(data.addedFiles.map( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator(function* (filepath) {\n              yield fileList.addFile(path.resolve(config.basePath, filepath));\n              fullRefresh = false;\n            });\n\n            return function (_x3) {\n              return _ref2.apply(this, arguments);\n            };\n          }()));\n        }\n\n        if (helper.isArray(data.removedFiles)) {\n          yield Promise.all(data.removedFiles.map( /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator(function* (filepath) {\n              yield fileList.removeFile(path.resolve(config.basePath, filepath));\n              fullRefresh = false;\n            });\n\n            return function (_x4) {\n              return _ref3.apply(this, arguments);\n            };\n          }()));\n        }\n\n        if (fullRefresh && data.refresh !== false) {\n          log.debug('Refreshing all the files / patterns');\n          yield fileList.refresh();\n        }\n      });\n      return _refreshFileList.apply(this, arguments);\n    }\n\n    function handleRun(data) {\n      emitter.once('run_start', function () {\n        const responseWrite = response.write.bind(response);\n        responseWrite.colors = data.colors;\n        reporter.addAdapter(responseWrite); // clean up, close runner response\n\n        emitter.once('run_complete', function (_browsers, results) {\n          reporter.removeAdapter(responseWrite);\n          const emptyTestSuite = results.failed + results.success === 0 ? 0 : 1;\n          response.end(constant.EXIT_CODE + emptyTestSuite + results.exitCode);\n        });\n      });\n    }\n  };\n}\n\ncreateRunnerMiddleware.$inject = ['emitter', 'fileList', 'capturedBrowsers', 'reporter', 'executor', 'config.protocol', 'config.hostname', 'config.port', 'config.urlRoot', 'config']; // PUBLIC API\n\nexports.create = createRunnerMiddleware;","map":{"version":3,"names":["_","require","path","helper","log","create","constant","json","createRunnerMiddleware","emitter","fileList","capturedBrowsers","reporter","executor","protocol","hostname","port","urlRoot","config","saveOriginalArgs","request","response","next","url","debug","writeHead","length","end","areAllReady","write","data","body","updateClientArgs","handleRun","refreshFileList","then","schedule","catch","error","errorMessage","stack","scheduleError","restoreOriginalArgs","isEmpty","args","isArray","client","isPlainObject","merge","warn","fullRefresh","changedFiles","Promise","all","map","filepath","changeFile","resolve","basePath","addedFiles","addFile","removedFiles","removeFile","refresh","once","responseWrite","bind","colors","addAdapter","_browsers","results","removeAdapter","emptyTestSuite","failed","success","EXIT_CODE","exitCode","$inject","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/middleware/runner.js"],"sourcesContent":["/**\n * Runner middleware is responsible for communication with `karma run`.\n *\n * It basically triggers a test run and streams stdout back.\n */\n\nconst _ = require('lodash')\nconst path = require('path')\nconst helper = require('../helper')\nconst log = require('../logger').create()\nconst constant = require('../constants')\nconst json = require('body-parser').json()\n\n// TODO(vojta): disable when single-run mode\nfunction createRunnerMiddleware (emitter, fileList, capturedBrowsers, reporter, executor,\n  /* config.protocol */ protocol, /* config.hostname */ hostname, /* config.port */\n  port, /* config.urlRoot */ urlRoot, config) {\n  helper.saveOriginalArgs(config)\n  return function (request, response, next) {\n    if (request.url !== '/__run__' && request.url !== urlRoot + 'run') {\n      return next()\n    }\n\n    log.debug('Execution (fired by runner)')\n    response.writeHead(200)\n\n    if (!capturedBrowsers.length) {\n      const url = `${protocol}//${hostname}:${port}${urlRoot}`\n      return response.end(`No captured browser, open ${url}\\n`)\n    }\n\n    json(request, response, function () {\n      if (!capturedBrowsers.areAllReady([])) {\n        response.write('Waiting for previous execution...\\n')\n      }\n\n      const data = request.body\n\n      updateClientArgs(data)\n      handleRun(data)\n      refreshFileList(data).then(() => {\n        executor.schedule()\n      }).catch((error) => {\n        const errorMessage = `Error during refresh file list. ${error.stack || error}`\n        executor.scheduleError(errorMessage)\n      })\n    })\n\n    function updateClientArgs (data) {\n      helper.restoreOriginalArgs(config)\n      if (_.isEmpty(data.args)) {\n        log.debug('Ignoring empty client.args from run command')\n      } else if ((_.isArray(data.args) && _.isArray(config.client.args)) ||\n        (_.isPlainObject(data.args) && _.isPlainObject(config.client.args))) {\n        log.debug('Merging client.args with ', data.args)\n        config.client.args = _.merge(config.client.args, data.args)\n      } else {\n        log.warn('Replacing client.args with ', data.args, ' as their types do not match.')\n        config.client.args = data.args\n      }\n    }\n\n    async function refreshFileList (data) {\n      let fullRefresh = true\n\n      if (helper.isArray(data.changedFiles)) {\n        await Promise.all(data.changedFiles.map(async function (filepath) {\n          await fileList.changeFile(path.resolve(config.basePath, filepath))\n          fullRefresh = false\n        }))\n      }\n\n      if (helper.isArray(data.addedFiles)) {\n        await Promise.all(data.addedFiles.map(async function (filepath) {\n          await fileList.addFile(path.resolve(config.basePath, filepath))\n          fullRefresh = false\n        }))\n      }\n\n      if (helper.isArray(data.removedFiles)) {\n        await Promise.all(data.removedFiles.map(async function (filepath) {\n          await fileList.removeFile(path.resolve(config.basePath, filepath))\n          fullRefresh = false\n        }))\n      }\n\n      if (fullRefresh && data.refresh !== false) {\n        log.debug('Refreshing all the files / patterns')\n        await fileList.refresh()\n      }\n    }\n\n    function handleRun (data) {\n      emitter.once('run_start', function () {\n        const responseWrite = response.write.bind(response)\n        responseWrite.colors = data.colors\n        reporter.addAdapter(responseWrite)\n\n        // clean up, close runner response\n        emitter.once('run_complete', function (_browsers, results) {\n          reporter.removeAdapter(responseWrite)\n          const emptyTestSuite = (results.failed + results.success) === 0 ? 0 : 1\n          response.end(constant.EXIT_CODE + emptyTestSuite + results.exitCode)\n        })\n      })\n    }\n  }\n}\n\ncreateRunnerMiddleware.$inject = ['emitter', 'fileList', 'capturedBrowsers', 'reporter', 'executor',\n  'config.protocol', 'config.hostname', 'config.port', 'config.urlRoot', 'config']\n\n// PUBLIC API\nexports.create = createRunnerMiddleware\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}