{"ast":null,"code":"\"use strict\";\n\nconst path = require(\"path\");\n\nconst {\n  parse\n} = require(\"url\");\n\nconst querystring = require(\"querystring\");\n\nconst getPaths = require(\"./getPaths\");\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n\nconst cacheStore = new WeakMap();\n/**\n * @param {Function} fn\n * @param {{ cache?: Map<any, any> }} [cache]\n * @returns {any}\n */\n\nconst mem = (fn, {\n  cache = new Map()\n} = {}) => {\n  /**\n   * @param {any} arguments_\n   * @return {any}\n   */\n  const memoized = (...arguments_) => {\n    const [key] = arguments_;\n    const cacheItem = cache.get(key);\n\n    if (cacheItem) {\n      return cacheItem.data;\n    }\n\n    const result = fn.apply(void 0, arguments_);\n    cache.set(key, {\n      data: result\n    });\n    return result;\n  };\n\n  cacheStore.set(memoized, cache);\n  return memoized;\n};\n\nconst memoizedParse = mem(parse);\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n * @param {string} url\n * @returns {string | undefined}\n */\n\nfunction getFilenameFromUrl(context, url) {\n  const {\n    options\n  } = context;\n  const paths = getPaths(context);\n  let foundFilename;\n  let urlObject;\n\n  try {\n    // The `url` property of the `request` is contains only  `pathname`, `search` and `hash`\n    urlObject = memoizedParse(url, false, true);\n  } catch (_ignoreError) {\n    return;\n  }\n\n  for (const {\n    publicPath,\n    outputPath\n  } of paths) {\n    let filename;\n    let publicPathObject;\n\n    try {\n      publicPathObject = memoizedParse(publicPath !== \"auto\" && publicPath ? publicPath : \"/\", false, true);\n    } catch (_ignoreError) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (urlObject.pathname && urlObject.pathname.startsWith(publicPathObject.pathname)) {\n      filename = outputPath; // Strip the `pathname` property from the `publicPath` option from the start of requested url\n      // `/complex/foo.js` => `foo.js`\n\n      const pathname = urlObject.pathname.slice(publicPathObject.pathname.length);\n\n      if (pathname) {\n        filename = path.join(outputPath, querystring.unescape(pathname));\n      }\n\n      let fsStats;\n\n      try {\n        fsStats =\n        /** @type {import(\"fs\").statSync} */\n        context.outputFileSystem.statSync(filename);\n      } catch (_ignoreError) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (fsStats.isFile()) {\n        foundFilename = filename;\n        break;\n      } else if (fsStats.isDirectory() && (typeof options.index === \"undefined\" || options.index)) {\n        const indexValue = typeof options.index === \"undefined\" || typeof options.index === \"boolean\" ? \"index.html\" : options.index;\n        filename = path.join(filename, indexValue);\n\n        try {\n          fsStats =\n          /** @type {import(\"fs\").statSync} */\n          context.outputFileSystem.statSync(filename);\n        } catch (__ignoreError) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        if (fsStats.isFile()) {\n          foundFilename = filename;\n          break;\n        }\n      }\n    }\n  } // eslint-disable-next-line consistent-return\n\n\n  return foundFilename;\n}\n\nmodule.exports = getFilenameFromUrl;","map":{"version":3,"names":["path","require","parse","querystring","getPaths","cacheStore","WeakMap","mem","fn","cache","Map","memoized","arguments_","key","cacheItem","get","data","result","apply","set","memoizedParse","getFilenameFromUrl","context","url","options","paths","foundFilename","urlObject","_ignoreError","publicPath","outputPath","filename","publicPathObject","pathname","startsWith","slice","length","join","unescape","fsStats","outputFileSystem","statSync","isFile","isDirectory","index","indexValue","__ignoreError","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/webpack-dev-middleware/dist/utils/getFilenameFromUrl.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\n\nconst {\n  parse\n} = require(\"url\");\n\nconst querystring = require(\"querystring\");\n\nconst getPaths = require(\"./getPaths\");\n/** @typedef {import(\"../index.js\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"../index.js\").ServerResponse} ServerResponse */\n\n\nconst cacheStore = new WeakMap();\n/**\n * @param {Function} fn\n * @param {{ cache?: Map<any, any> }} [cache]\n * @returns {any}\n */\n\nconst mem = (fn, {\n  cache = new Map()\n} = {}) => {\n  /**\n   * @param {any} arguments_\n   * @return {any}\n   */\n  const memoized = (...arguments_) => {\n    const [key] = arguments_;\n    const cacheItem = cache.get(key);\n\n    if (cacheItem) {\n      return cacheItem.data;\n    }\n\n    const result = fn.apply(void 0, arguments_);\n    cache.set(key, {\n      data: result\n    });\n    return result;\n  };\n\n  cacheStore.set(memoized, cache);\n  return memoized;\n};\n\nconst memoizedParse = mem(parse);\n/**\n * @template {IncomingMessage} Request\n * @template {ServerResponse} Response\n * @param {import(\"../index.js\").Context<Request, Response>} context\n * @param {string} url\n * @returns {string | undefined}\n */\n\nfunction getFilenameFromUrl(context, url) {\n  const {\n    options\n  } = context;\n  const paths = getPaths(context);\n  let foundFilename;\n  let urlObject;\n\n  try {\n    // The `url` property of the `request` is contains only  `pathname`, `search` and `hash`\n    urlObject = memoizedParse(url, false, true);\n  } catch (_ignoreError) {\n    return;\n  }\n\n  for (const {\n    publicPath,\n    outputPath\n  } of paths) {\n    let filename;\n    let publicPathObject;\n\n    try {\n      publicPathObject = memoizedParse(publicPath !== \"auto\" && publicPath ? publicPath : \"/\", false, true);\n    } catch (_ignoreError) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (urlObject.pathname && urlObject.pathname.startsWith(publicPathObject.pathname)) {\n      filename = outputPath; // Strip the `pathname` property from the `publicPath` option from the start of requested url\n      // `/complex/foo.js` => `foo.js`\n\n      const pathname = urlObject.pathname.slice(publicPathObject.pathname.length);\n\n      if (pathname) {\n        filename = path.join(outputPath, querystring.unescape(pathname));\n      }\n\n      let fsStats;\n\n      try {\n        fsStats =\n        /** @type {import(\"fs\").statSync} */\n        context.outputFileSystem.statSync(filename);\n      } catch (_ignoreError) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (fsStats.isFile()) {\n        foundFilename = filename;\n        break;\n      } else if (fsStats.isDirectory() && (typeof options.index === \"undefined\" || options.index)) {\n        const indexValue = typeof options.index === \"undefined\" || typeof options.index === \"boolean\" ? \"index.html\" : options.index;\n        filename = path.join(filename, indexValue);\n\n        try {\n          fsStats =\n          /** @type {import(\"fs\").statSync} */\n          context.outputFileSystem.statSync(filename);\n        } catch (__ignoreError) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        if (fsStats.isFile()) {\n          foundFilename = filename;\n          break;\n        }\n      }\n    }\n  } // eslint-disable-next-line consistent-return\n\n\n  return foundFilename;\n}\n\nmodule.exports = getFilenameFromUrl;"],"mappings":"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"},"metadata":{},"sourceType":"script"}