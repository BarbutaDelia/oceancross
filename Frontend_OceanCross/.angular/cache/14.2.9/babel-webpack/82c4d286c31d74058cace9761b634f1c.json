{"ast":null,"code":"/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"__statusCode\", \"_remoteAddress\", \"__headers\", \"_logging\"] }] */\nconst levels = require('./levels');\n\nconst DEFAULT_FORMAT = ':remote-addr - -' + ' \":method :url HTTP/:http-version\"' + ' :status :content-length \":referrer\"' + ' \":user-agent\"';\n/**\n * Return request url path,\n * adding this function prevents the Cyclomatic Complexity,\n * for the assemble_tokens function at low, to pass the tests.\n *\n * @param  {IncomingMessage} req\n * @return {string}\n * @api private\n */\n\nfunction getUrl(req) {\n  return req.originalUrl || req.url;\n}\n/**\n * Adds custom {token, replacement} objects to defaults,\n * overwriting the defaults if any tokens clash\n *\n * @param  {IncomingMessage} req\n * @param  {ServerResponse} res\n * @param  {Array} customTokens\n *    [{ token: string-or-regexp, replacement: string-or-replace-function }]\n * @return {Array}\n */\n\n\nfunction assembleTokens(req, res, customTokens) {\n  const arrayUniqueTokens = array => {\n    const a = array.concat();\n\n    for (let i = 0; i < a.length; ++i) {\n      for (let j = i + 1; j < a.length; ++j) {\n        // not === because token can be regexp object\n        // eslint-disable-next-line eqeqeq\n        if (a[i].token == a[j].token) {\n          a.splice(j--, 1); // eslint-disable-line no-plusplus\n        }\n      }\n    }\n\n    return a;\n  };\n\n  const defaultTokens = [];\n  defaultTokens.push({\n    token: ':url',\n    replacement: getUrl(req)\n  });\n  defaultTokens.push({\n    token: ':protocol',\n    replacement: req.protocol\n  });\n  defaultTokens.push({\n    token: ':hostname',\n    replacement: req.hostname\n  });\n  defaultTokens.push({\n    token: ':method',\n    replacement: req.method\n  });\n  defaultTokens.push({\n    token: ':status',\n    replacement: res.__statusCode || res.statusCode\n  });\n  defaultTokens.push({\n    token: ':response-time',\n    replacement: res.responseTime\n  });\n  defaultTokens.push({\n    token: ':date',\n    replacement: new Date().toUTCString()\n  });\n  defaultTokens.push({\n    token: ':referrer',\n    replacement: req.headers.referer || req.headers.referrer || ''\n  });\n  defaultTokens.push({\n    token: ':http-version',\n    replacement: `${req.httpVersionMajor}.${req.httpVersionMinor}`\n  });\n  defaultTokens.push({\n    token: ':remote-addr',\n    replacement: req.headers['x-forwarded-for'] || req.ip || req._remoteAddress || req.socket && (req.socket.remoteAddress || req.socket.socket && req.socket.socket.remoteAddress)\n  });\n  defaultTokens.push({\n    token: ':user-agent',\n    replacement: req.headers['user-agent']\n  });\n  defaultTokens.push({\n    token: ':content-length',\n    replacement: res.getHeader('content-length') || res.__headers && res.__headers['Content-Length'] || '-'\n  });\n  defaultTokens.push({\n    token: /:req\\[([^\\]]+)]/g,\n\n    replacement(_, field) {\n      return req.headers[field.toLowerCase()];\n    }\n\n  });\n  defaultTokens.push({\n    token: /:res\\[([^\\]]+)]/g,\n\n    replacement(_, field) {\n      return res.getHeader(field.toLowerCase()) || res.__headers && res.__headers[field];\n    }\n\n  });\n  return arrayUniqueTokens(customTokens.concat(defaultTokens));\n}\n/**\n * Return formatted log line.\n *\n * @param  {string} str\n * @param {Array} tokens\n * @return {string}\n * @api private\n */\n\n\nfunction format(str, tokens) {\n  for (let i = 0; i < tokens.length; i++) {\n    str = str.replace(tokens[i].token, tokens[i].replacement);\n  }\n\n  return str;\n}\n/**\n * Return RegExp Object about nolog\n *\n * @param  {(string|Array)} nolog\n * @return {RegExp}\n * @api private\n *\n * syntax\n *  1. String\n *   1.1 \"\\\\.gif\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.gif?fuga\n *         LOGGING http://example.com/hoge.agif\n *   1.2 in \"\\\\.gif|\\\\.jpg$\"\n *         NOT LOGGING http://example.com/hoge.gif and\n *           http://example.com/hoge.gif?fuga and http://example.com/hoge.jpg?fuga\n *         LOGGING http://example.com/hoge.agif,\n *           http://example.com/hoge.ajpg and http://example.com/hoge.jpg?hoge\n *   1.3 in \"\\\\.(gif|jpe?g|png)$\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.jpeg\n *         LOGGING http://example.com/hoge.gif?uid=2 and http://example.com/hoge.jpg?pid=3\n *  2. RegExp\n *   2.1 in /\\.(gif|jpe?g|png)$/\n *         SAME AS 1.3\n *  3. Array\n *   3.1 [\"\\\\.jpg$\", \"\\\\.png\", \"\\\\.gif\"]\n *         SAME AS \"\\\\.jpg|\\\\.png|\\\\.gif\"\n */\n\n\nfunction createNoLogCondition(nolog) {\n  let regexp = null;\n\n  if (nolog instanceof RegExp) {\n    regexp = nolog;\n  }\n\n  if (typeof nolog === 'string') {\n    regexp = new RegExp(nolog);\n  }\n\n  if (Array.isArray(nolog)) {\n    // convert to strings\n    const regexpsAsStrings = nolog.map(reg => reg.source ? reg.source : reg);\n    regexp = new RegExp(regexpsAsStrings.join('|'));\n  }\n\n  return regexp;\n}\n/**\n * Allows users to define rules around status codes to assign them to a specific\n * logging level.\n * There are two types of rules:\n *   - RANGE: matches a code within a certain range\n *     E.g. { 'from': 200, 'to': 299, 'level': 'info' }\n *   - CONTAINS: matches a code to a set of expected codes\n *     E.g. { 'codes': [200, 203], 'level': 'debug' }\n * Note*: Rules are respected only in order of prescendence.\n *\n * @param {Number} statusCode\n * @param {Level} currentLevel\n * @param {Object} ruleSet\n * @return {Level}\n * @api private\n */\n\n\nfunction matchRules(statusCode, currentLevel, ruleSet) {\n  let level = currentLevel;\n\n  if (ruleSet) {\n    const matchedRule = ruleSet.find(rule => {\n      let ruleMatched = false;\n\n      if (rule.from && rule.to) {\n        ruleMatched = statusCode >= rule.from && statusCode <= rule.to;\n      } else {\n        ruleMatched = rule.codes.indexOf(statusCode) !== -1;\n      }\n\n      return ruleMatched;\n    });\n\n    if (matchedRule) {\n      level = levels.getLevel(matchedRule.level, level);\n    }\n  }\n\n  return level;\n}\n/**\n * Log requests with the given `options` or a `format` string.\n *\n * Options:\n *\n *   - `format`        Format string, see below for tokens\n *   - `level`         A log4js levels instance. Supports also 'auto'\n *   - `nolog`         A string or RegExp to exclude target logs or function(req, res): boolean\n *   - `statusRules`   A array of rules for setting specific logging levels base on status codes\n *   - `context`       Whether to add a response of express to the context\n *\n * Tokens:\n *\n *   - `:req[header]` ex: `:req[Accept]`\n *   - `:res[header]` ex: `:res[Content-Length]`\n *   - `:http-version`\n *   - `:response-time`\n *   - `:remote-addr`\n *   - `:date`\n *   - `:method`\n *   - `:url`\n *   - `:referrer`\n *   - `:user-agent`\n *   - `:status`\n *\n * @return {Function}\n * @param logger4js\n * @param options\n * @api public\n */\n\n\nmodule.exports = function getLogger(logger4js, options) {\n  if (typeof options === 'string' || typeof options === 'function') {\n    options = {\n      format: options\n    };\n  } else {\n    options = options || {};\n  }\n\n  const thisLogger = logger4js;\n  let level = levels.getLevel(options.level, levels.INFO);\n  const fmt = options.format || DEFAULT_FORMAT;\n  return (req, res, next) => {\n    // mount safety\n    if (typeof req._logging !== 'undefined') return next(); // nologs\n\n    if (typeof options.nolog !== 'function') {\n      const nolog = createNoLogCondition(options.nolog);\n      if (nolog && nolog.test(req.originalUrl)) return next();\n    }\n\n    if (thisLogger.isLevelEnabled(level) || options.level === 'auto') {\n      const start = new Date();\n      const {\n        writeHead\n      } = res; // flag as logging\n\n      req._logging = true; // proxy for statusCode.\n\n      res.writeHead = (code, headers) => {\n        res.writeHead = writeHead;\n        res.writeHead(code, headers);\n        res.__statusCode = code;\n        res.__headers = headers || {};\n      }; // hook on end request to emit the log entry of the HTTP request.\n\n\n      let finished = false;\n\n      const handler = () => {\n        if (finished) {\n          return;\n        }\n\n        finished = true; // nologs\n\n        if (typeof options.nolog === 'function') {\n          if (options.nolog(req, res) === true) {\n            req._logging = false;\n            return;\n          }\n        }\n\n        res.responseTime = new Date() - start; // status code response level handling\n\n        if (res.statusCode && options.level === 'auto') {\n          level = levels.INFO;\n          if (res.statusCode >= 300) level = levels.WARN;\n          if (res.statusCode >= 400) level = levels.ERROR;\n        }\n\n        level = matchRules(res.statusCode, level, options.statusRules);\n        const combinedTokens = assembleTokens(req, res, options.tokens || []);\n        if (options.context) thisLogger.addContext('res', res);\n\n        if (typeof fmt === 'function') {\n          const line = fmt(req, res, str => format(str, combinedTokens));\n          if (line) thisLogger.log(level, line);\n        } else {\n          thisLogger.log(level, format(fmt, combinedTokens));\n        }\n\n        if (options.context) thisLogger.removeContext('res');\n      };\n\n      res.on('end', handler);\n      res.on('finish', handler);\n      res.on('error', handler);\n      res.on('close', handler);\n    } // ensure next gets always called\n\n\n    return next();\n  };\n};","map":{"version":3,"names":["levels","require","DEFAULT_FORMAT","getUrl","req","originalUrl","url","assembleTokens","res","customTokens","arrayUniqueTokens","array","a","concat","i","length","j","token","splice","defaultTokens","push","replacement","protocol","hostname","method","__statusCode","statusCode","responseTime","Date","toUTCString","headers","referer","referrer","httpVersionMajor","httpVersionMinor","ip","_remoteAddress","socket","remoteAddress","getHeader","__headers","_","field","toLowerCase","format","str","tokens","replace","createNoLogCondition","nolog","regexp","RegExp","Array","isArray","regexpsAsStrings","map","reg","source","join","matchRules","currentLevel","ruleSet","level","matchedRule","find","rule","ruleMatched","from","to","codes","indexOf","getLevel","module","exports","getLogger","logger4js","options","thisLogger","INFO","fmt","next","_logging","test","isLevelEnabled","start","writeHead","code","finished","handler","WARN","ERROR","statusRules","combinedTokens","context","addContext","line","log","removeContext","on"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/log4js/lib/connect-logger.js"],"sourcesContent":["/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"__statusCode\", \"_remoteAddress\", \"__headers\", \"_logging\"] }] */\n\nconst levels = require('./levels');\n\nconst DEFAULT_FORMAT =\n  ':remote-addr - -' +\n  ' \":method :url HTTP/:http-version\"' +\n  ' :status :content-length \":referrer\"' +\n  ' \":user-agent\"';\n\n/**\n * Return request url path,\n * adding this function prevents the Cyclomatic Complexity,\n * for the assemble_tokens function at low, to pass the tests.\n *\n * @param  {IncomingMessage} req\n * @return {string}\n * @api private\n */\nfunction getUrl(req) {\n  return req.originalUrl || req.url;\n}\n\n/**\n * Adds custom {token, replacement} objects to defaults,\n * overwriting the defaults if any tokens clash\n *\n * @param  {IncomingMessage} req\n * @param  {ServerResponse} res\n * @param  {Array} customTokens\n *    [{ token: string-or-regexp, replacement: string-or-replace-function }]\n * @return {Array}\n */\nfunction assembleTokens(req, res, customTokens) {\n  const arrayUniqueTokens = (array) => {\n    const a = array.concat();\n    for (let i = 0; i < a.length; ++i) {\n      for (let j = i + 1; j < a.length; ++j) {\n        // not === because token can be regexp object\n        // eslint-disable-next-line eqeqeq\n        if (a[i].token == a[j].token) {\n          a.splice(j--, 1); // eslint-disable-line no-plusplus\n        }\n      }\n    }\n    return a;\n  };\n\n  const defaultTokens = [];\n  defaultTokens.push({ token: ':url', replacement: getUrl(req) });\n  defaultTokens.push({ token: ':protocol', replacement: req.protocol });\n  defaultTokens.push({ token: ':hostname', replacement: req.hostname });\n  defaultTokens.push({ token: ':method', replacement: req.method });\n  defaultTokens.push({\n    token: ':status',\n    replacement: res.__statusCode || res.statusCode,\n  });\n  defaultTokens.push({\n    token: ':response-time',\n    replacement: res.responseTime,\n  });\n  defaultTokens.push({ token: ':date', replacement: new Date().toUTCString() });\n  defaultTokens.push({\n    token: ':referrer',\n    replacement: req.headers.referer || req.headers.referrer || '',\n  });\n  defaultTokens.push({\n    token: ':http-version',\n    replacement: `${req.httpVersionMajor}.${req.httpVersionMinor}`,\n  });\n  defaultTokens.push({\n    token: ':remote-addr',\n    replacement:\n      req.headers['x-forwarded-for'] ||\n      req.ip ||\n      req._remoteAddress ||\n      (req.socket &&\n        (req.socket.remoteAddress ||\n          (req.socket.socket && req.socket.socket.remoteAddress))),\n  });\n  defaultTokens.push({\n    token: ':user-agent',\n    replacement: req.headers['user-agent'],\n  });\n  defaultTokens.push({\n    token: ':content-length',\n    replacement:\n      res.getHeader('content-length') ||\n      (res.__headers && res.__headers['Content-Length']) ||\n      '-',\n  });\n  defaultTokens.push({\n    token: /:req\\[([^\\]]+)]/g,\n    replacement(_, field) {\n      return req.headers[field.toLowerCase()];\n    },\n  });\n  defaultTokens.push({\n    token: /:res\\[([^\\]]+)]/g,\n    replacement(_, field) {\n      return (\n        res.getHeader(field.toLowerCase()) ||\n        (res.__headers && res.__headers[field])\n      );\n    },\n  });\n\n  return arrayUniqueTokens(customTokens.concat(defaultTokens));\n}\n\n/**\n * Return formatted log line.\n *\n * @param  {string} str\n * @param {Array} tokens\n * @return {string}\n * @api private\n */\nfunction format(str, tokens) {\n  for (let i = 0; i < tokens.length; i++) {\n    str = str.replace(tokens[i].token, tokens[i].replacement);\n  }\n  return str;\n}\n\n/**\n * Return RegExp Object about nolog\n *\n * @param  {(string|Array)} nolog\n * @return {RegExp}\n * @api private\n *\n * syntax\n *  1. String\n *   1.1 \"\\\\.gif\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.gif?fuga\n *         LOGGING http://example.com/hoge.agif\n *   1.2 in \"\\\\.gif|\\\\.jpg$\"\n *         NOT LOGGING http://example.com/hoge.gif and\n *           http://example.com/hoge.gif?fuga and http://example.com/hoge.jpg?fuga\n *         LOGGING http://example.com/hoge.agif,\n *           http://example.com/hoge.ajpg and http://example.com/hoge.jpg?hoge\n *   1.3 in \"\\\\.(gif|jpe?g|png)$\"\n *         NOT LOGGING http://example.com/hoge.gif and http://example.com/hoge.jpeg\n *         LOGGING http://example.com/hoge.gif?uid=2 and http://example.com/hoge.jpg?pid=3\n *  2. RegExp\n *   2.1 in /\\.(gif|jpe?g|png)$/\n *         SAME AS 1.3\n *  3. Array\n *   3.1 [\"\\\\.jpg$\", \"\\\\.png\", \"\\\\.gif\"]\n *         SAME AS \"\\\\.jpg|\\\\.png|\\\\.gif\"\n */\nfunction createNoLogCondition(nolog) {\n  let regexp = null;\n\n  if (nolog instanceof RegExp) {\n    regexp = nolog;\n  }\n\n  if (typeof nolog === 'string') {\n    regexp = new RegExp(nolog);\n  }\n\n  if (Array.isArray(nolog)) {\n    // convert to strings\n    const regexpsAsStrings = nolog.map((reg) =>\n      reg.source ? reg.source : reg\n    );\n    regexp = new RegExp(regexpsAsStrings.join('|'));\n  }\n\n  return regexp;\n}\n\n/**\n * Allows users to define rules around status codes to assign them to a specific\n * logging level.\n * There are two types of rules:\n *   - RANGE: matches a code within a certain range\n *     E.g. { 'from': 200, 'to': 299, 'level': 'info' }\n *   - CONTAINS: matches a code to a set of expected codes\n *     E.g. { 'codes': [200, 203], 'level': 'debug' }\n * Note*: Rules are respected only in order of prescendence.\n *\n * @param {Number} statusCode\n * @param {Level} currentLevel\n * @param {Object} ruleSet\n * @return {Level}\n * @api private\n */\nfunction matchRules(statusCode, currentLevel, ruleSet) {\n  let level = currentLevel;\n\n  if (ruleSet) {\n    const matchedRule = ruleSet.find((rule) => {\n      let ruleMatched = false;\n      if (rule.from && rule.to) {\n        ruleMatched = statusCode >= rule.from && statusCode <= rule.to;\n      } else {\n        ruleMatched = rule.codes.indexOf(statusCode) !== -1;\n      }\n      return ruleMatched;\n    });\n    if (matchedRule) {\n      level = levels.getLevel(matchedRule.level, level);\n    }\n  }\n  return level;\n}\n\n/**\n * Log requests with the given `options` or a `format` string.\n *\n * Options:\n *\n *   - `format`        Format string, see below for tokens\n *   - `level`         A log4js levels instance. Supports also 'auto'\n *   - `nolog`         A string or RegExp to exclude target logs or function(req, res): boolean\n *   - `statusRules`   A array of rules for setting specific logging levels base on status codes\n *   - `context`       Whether to add a response of express to the context\n *\n * Tokens:\n *\n *   - `:req[header]` ex: `:req[Accept]`\n *   - `:res[header]` ex: `:res[Content-Length]`\n *   - `:http-version`\n *   - `:response-time`\n *   - `:remote-addr`\n *   - `:date`\n *   - `:method`\n *   - `:url`\n *   - `:referrer`\n *   - `:user-agent`\n *   - `:status`\n *\n * @return {Function}\n * @param logger4js\n * @param options\n * @api public\n */\nmodule.exports = function getLogger(logger4js, options) {\n  if (typeof options === 'string' || typeof options === 'function') {\n    options = { format: options };\n  } else {\n    options = options || {};\n  }\n\n  const thisLogger = logger4js;\n  let level = levels.getLevel(options.level, levels.INFO);\n  const fmt = options.format || DEFAULT_FORMAT;\n\n  return (req, res, next) => {\n    // mount safety\n    if (typeof req._logging !== 'undefined') return next();\n\n    // nologs\n    if (typeof options.nolog !== 'function') {\n      const nolog = createNoLogCondition(options.nolog);\n      if (nolog && nolog.test(req.originalUrl)) return next();\n    }\n\n    if (thisLogger.isLevelEnabled(level) || options.level === 'auto') {\n      const start = new Date();\n      const { writeHead } = res;\n\n      // flag as logging\n      req._logging = true;\n\n      // proxy for statusCode.\n      res.writeHead = (code, headers) => {\n        res.writeHead = writeHead;\n        res.writeHead(code, headers);\n\n        res.__statusCode = code;\n        res.__headers = headers || {};\n      };\n\n      // hook on end request to emit the log entry of the HTTP request.\n      let finished = false;\n      const handler = () => {\n        if (finished) {\n          return;\n        }\n        finished = true;\n\n        // nologs\n        if (typeof options.nolog === 'function') {\n          if (options.nolog(req, res) === true) {\n            req._logging = false;\n            return;\n          }\n        }\n\n        res.responseTime = new Date() - start;\n        // status code response level handling\n        if (res.statusCode && options.level === 'auto') {\n          level = levels.INFO;\n          if (res.statusCode >= 300) level = levels.WARN;\n          if (res.statusCode >= 400) level = levels.ERROR;\n        }\n        level = matchRules(res.statusCode, level, options.statusRules);\n\n        const combinedTokens = assembleTokens(req, res, options.tokens || []);\n\n        if (options.context) thisLogger.addContext('res', res);\n        if (typeof fmt === 'function') {\n          const line = fmt(req, res, (str) => format(str, combinedTokens));\n          if (line) thisLogger.log(level, line);\n        } else {\n          thisLogger.log(level, format(fmt, combinedTokens));\n        }\n        if (options.context) thisLogger.removeContext('res');\n      };\n      res.on('end', handler);\n      res.on('finish', handler);\n      res.on('error', handler);\n      res.on('close', handler);\n    }\n\n    // ensure next gets always called\n    return next();\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}