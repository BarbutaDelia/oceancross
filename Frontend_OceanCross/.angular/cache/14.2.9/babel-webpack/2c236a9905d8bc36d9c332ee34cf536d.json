{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WatchFilesLogsPlugin = void 0;\nconst PLUGIN_NAME = 'angular.watch-files-logs-plugin';\n\nclass WatchFilesLogsPlugin {\n  apply(compiler) {\n    compiler.hooks.watchRun.tap(PLUGIN_NAME, ({\n      modifiedFiles,\n      removedFiles\n    }) => {\n      compiler.hooks.compilation.tap(PLUGIN_NAME, compilation => {\n        const logger = compilation.getLogger(PLUGIN_NAME);\n\n        if (modifiedFiles === null || modifiedFiles === void 0 ? void 0 : modifiedFiles.size) {\n          logger.log(`Modified files:\\n${[...modifiedFiles].join('\\n')}\\n`);\n        }\n\n        if (removedFiles === null || removedFiles === void 0 ? void 0 : removedFiles.size) {\n          logger.log(`Removed files:\\n${[...removedFiles].join('\\n')}\\n`);\n        }\n      });\n    });\n  }\n\n}\n\nexports.WatchFilesLogsPlugin = WatchFilesLogsPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","WatchFilesLogsPlugin","PLUGIN_NAME","apply","compiler","hooks","watchRun","tap","modifiedFiles","removedFiles","compilation","logger","getLogger","size","log","join"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@angular-devkit/build-angular/src/webpack/plugins/watch-files-logs-plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WatchFilesLogsPlugin = void 0;\nconst PLUGIN_NAME = 'angular.watch-files-logs-plugin';\nclass WatchFilesLogsPlugin {\n    apply(compiler) {\n        compiler.hooks.watchRun.tap(PLUGIN_NAME, ({ modifiedFiles, removedFiles }) => {\n            compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {\n                const logger = compilation.getLogger(PLUGIN_NAME);\n                if (modifiedFiles === null || modifiedFiles === void 0 ? void 0 : modifiedFiles.size) {\n                    logger.log(`Modified files:\\n${[...modifiedFiles].join('\\n')}\\n`);\n                }\n                if (removedFiles === null || removedFiles === void 0 ? void 0 : removedFiles.size) {\n                    logger.log(`Removed files:\\n${[...removedFiles].join('\\n')}\\n`);\n                }\n            });\n        });\n    }\n}\nexports.WatchFilesLogsPlugin = WatchFilesLogsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;AACA,MAAMC,WAAW,GAAG,iCAApB;;AACA,MAAMD,oBAAN,CAA2B;EACvBE,KAAK,CAACC,QAAD,EAAW;IACZA,QAAQ,CAACC,KAAT,CAAeC,QAAf,CAAwBC,GAAxB,CAA4BL,WAA5B,EAAyC,CAAC;MAAEM,aAAF;MAAiBC;IAAjB,CAAD,KAAqC;MAC1EL,QAAQ,CAACC,KAAT,CAAeK,WAAf,CAA2BH,GAA3B,CAA+BL,WAA/B,EAA6CQ,WAAD,IAAiB;QACzD,MAAMC,MAAM,GAAGD,WAAW,CAACE,SAAZ,CAAsBV,WAAtB,CAAf;;QACA,IAAIM,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACK,IAAhF,EAAsF;UAClFF,MAAM,CAACG,GAAP,CAAY,oBAAmB,CAAC,GAAGN,aAAJ,EAAmBO,IAAnB,CAAwB,IAAxB,CAA8B,IAA7D;QACH;;QACD,IAAIN,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACI,IAA7E,EAAmF;UAC/EF,MAAM,CAACG,GAAP,CAAY,mBAAkB,CAAC,GAAGL,YAAJ,EAAkBM,IAAlB,CAAuB,IAAvB,CAA6B,IAA3D;QACH;MACJ,CARD;IASH,CAVD;EAWH;;AAbsB;;AAe3BhB,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B"},"metadata":{},"sourceType":"script"}