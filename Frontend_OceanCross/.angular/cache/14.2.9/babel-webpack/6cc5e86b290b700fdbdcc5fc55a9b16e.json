{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst path = require('path');\n\nconst helper = require('./helper');\n\nconst log = require('./logger').create('plugin');\n\nconst IGNORED_PACKAGES = ['karma-cli', 'karma-runner.github.com'];\n\nfunction resolve(plugins, emitter) {\n  const modules = [];\n\n  function requirePlugin(name) {\n    log.debug(`Loading plugin ${name}.`);\n\n    try {\n      modules.push(require(name));\n    } catch (e) {\n      if (e.code === 'MODULE_NOT_FOUND' && e.message.includes(name)) {\n        log.error(`Cannot find plugin \"${name}\".\\n  Did you forget to install it?\\n  npm install ${name} --save-dev`);\n      } else {\n        log.error(`Error during loading \"${name}\" plugin:\\n  ${e.message}`);\n      }\n\n      emitter.emit('load_error', 'plug_in', name);\n    }\n  }\n\n  plugins.forEach(function (plugin) {\n    if (helper.isString(plugin)) {\n      if (!plugin.includes('*')) {\n        requirePlugin(plugin);\n        return;\n      }\n\n      const pluginDirectory = path.normalize(path.join(__dirname, '/../..'));\n      const regexp = new RegExp(`^${plugin.replace(/\\*/g, '.*').replace(/\\//g, '[/\\\\\\\\]')}`);\n      log.debug(`Loading ${plugin} from ${pluginDirectory}`);\n      fs.readdirSync(pluginDirectory).map(e => {\n        const modulePath = path.join(pluginDirectory, e);\n\n        if (e[0] === '@') {\n          return fs.readdirSync(modulePath).map(e => path.join(modulePath, e));\n        }\n\n        return modulePath;\n      }).reduce((a, x) => a.concat(x), []).map(modulePath => path.relative(pluginDirectory, modulePath)).filter(moduleName => !IGNORED_PACKAGES.includes(moduleName) && regexp.test(moduleName)).forEach(pluginName => requirePlugin(path.join(pluginDirectory, pluginName)));\n    } else if (helper.isObject(plugin)) {\n      log.debug(`Loading inline plugin defining ${Object.keys(plugin).join(', ')}.`);\n      modules.push(plugin);\n    } else {\n      log.error(`Invalid plugin ${plugin}`);\n      emitter.emit('load_error', 'plug_in', plugin);\n    }\n  });\n  return modules;\n}\n/**\n  Create a function to handle errors in plugin loading.\n  @param {Object} injector, the dict of dependency injection objects.\n  @return function closed over injector, which reports errors.\n*/\n\n\nfunction createInstantiatePlugin(injector) {\n  const emitter = injector.get('emitter'); // Cache to avoid report errors multiple times per plugin.\n\n  const pluginInstances = new Map();\n  return function instantiatePlugin(kind, name) {\n    if (pluginInstances.has(name)) {\n      return pluginInstances.get(name);\n    }\n\n    let p;\n\n    try {\n      p = injector.get(`${kind}:${name}`);\n\n      if (!p) {\n        log.error(`Failed to instantiate ${kind} ${name}`);\n        emitter.emit('load_error', kind, name);\n      }\n    } catch (e) {\n      if (e.message.includes(`No provider for \"${kind}:${name}\"`)) {\n        log.error(`Cannot load \"${name}\", it is not registered!\\n  Perhaps you are missing some plugin?`);\n      } else {\n        log.error(`Cannot load \"${name}\"!\\n  ` + e.stack);\n      }\n\n      emitter.emit('load_error', kind, name);\n    }\n\n    pluginInstances.set(name, p, `${kind}:${name}`);\n    return p;\n  };\n}\n\ncreateInstantiatePlugin.$inject = ['injector'];\nmodule.exports = {\n  resolve,\n  createInstantiatePlugin\n};","map":{"version":3,"names":["fs","require","path","helper","log","create","IGNORED_PACKAGES","resolve","plugins","emitter","modules","requirePlugin","name","debug","push","e","code","message","includes","error","emit","forEach","plugin","isString","pluginDirectory","normalize","join","__dirname","regexp","RegExp","replace","readdirSync","map","modulePath","reduce","a","x","concat","relative","filter","moduleName","test","pluginName","isObject","Object","keys","createInstantiatePlugin","injector","get","pluginInstances","Map","instantiatePlugin","kind","has","p","stack","set","$inject","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/plugin.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst helper = require('./helper')\n\nconst log = require('./logger').create('plugin')\n\nconst IGNORED_PACKAGES = ['karma-cli', 'karma-runner.github.com']\n\nfunction resolve (plugins, emitter) {\n  const modules = []\n\n  function requirePlugin (name) {\n    log.debug(`Loading plugin ${name}.`)\n    try {\n      modules.push(require(name))\n    } catch (e) {\n      if (e.code === 'MODULE_NOT_FOUND' && e.message.includes(name)) {\n        log.error(`Cannot find plugin \"${name}\".\\n  Did you forget to install it?\\n  npm install ${name} --save-dev`)\n      } else {\n        log.error(`Error during loading \"${name}\" plugin:\\n  ${e.message}`)\n      }\n      emitter.emit('load_error', 'plug_in', name)\n    }\n  }\n\n  plugins.forEach(function (plugin) {\n    if (helper.isString(plugin)) {\n      if (!plugin.includes('*')) {\n        requirePlugin(plugin)\n        return\n      }\n      const pluginDirectory = path.normalize(path.join(__dirname, '/../..'))\n      const regexp = new RegExp(`^${plugin.replace(/\\*/g, '.*').replace(/\\//g, '[/\\\\\\\\]')}`)\n\n      log.debug(`Loading ${plugin} from ${pluginDirectory}`)\n      fs.readdirSync(pluginDirectory)\n        .map((e) => {\n          const modulePath = path.join(pluginDirectory, e)\n          if (e[0] === '@') {\n            return fs.readdirSync(modulePath).map((e) => path.join(modulePath, e))\n          }\n          return modulePath\n        })\n        .reduce((a, x) => a.concat(x), [])\n        .map((modulePath) => path.relative(pluginDirectory, modulePath))\n        .filter((moduleName) => !IGNORED_PACKAGES.includes(moduleName) && regexp.test(moduleName))\n        .forEach((pluginName) => requirePlugin(path.join(pluginDirectory, pluginName)))\n    } else if (helper.isObject(plugin)) {\n      log.debug(`Loading inline plugin defining ${Object.keys(plugin).join(', ')}.`)\n      modules.push(plugin)\n    } else {\n      log.error(`Invalid plugin ${plugin}`)\n      emitter.emit('load_error', 'plug_in', plugin)\n    }\n  })\n\n  return modules\n}\n\n/**\n  Create a function to handle errors in plugin loading.\n  @param {Object} injector, the dict of dependency injection objects.\n  @return function closed over injector, which reports errors.\n*/\nfunction createInstantiatePlugin (injector) {\n  const emitter = injector.get('emitter')\n  // Cache to avoid report errors multiple times per plugin.\n  const pluginInstances = new Map()\n  return function instantiatePlugin (kind, name) {\n    if (pluginInstances.has(name)) {\n      return pluginInstances.get(name)\n    }\n\n    let p\n    try {\n      p = injector.get(`${kind}:${name}`)\n      if (!p) {\n        log.error(`Failed to instantiate ${kind} ${name}`)\n        emitter.emit('load_error', kind, name)\n      }\n    } catch (e) {\n      if (e.message.includes(`No provider for \"${kind}:${name}\"`)) {\n        log.error(`Cannot load \"${name}\", it is not registered!\\n  Perhaps you are missing some plugin?`)\n      } else {\n        log.error(`Cannot load \"${name}\"!\\n  ` + e.stack)\n      }\n      emitter.emit('load_error', kind, name)\n    }\n    pluginInstances.set(name, p, `${kind}:${name}`)\n    return p\n  }\n}\n\ncreateInstantiatePlugin.$inject = ['injector']\n\nmodule.exports = { resolve, createInstantiatePlugin }\n"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMG,GAAG,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBI,MAApB,CAA2B,QAA3B,CAAZ;;AAEA,MAAMC,gBAAgB,GAAG,CAAC,WAAD,EAAc,yBAAd,CAAzB;;AAEA,SAASC,OAAT,CAAkBC,OAAlB,EAA2BC,OAA3B,EAAoC;EAClC,MAAMC,OAAO,GAAG,EAAhB;;EAEA,SAASC,aAAT,CAAwBC,IAAxB,EAA8B;IAC5BR,GAAG,CAACS,KAAJ,CAAW,kBAAiBD,IAAK,GAAjC;;IACA,IAAI;MACFF,OAAO,CAACI,IAAR,CAAab,OAAO,CAACW,IAAD,CAApB;IACD,CAFD,CAEE,OAAOG,CAAP,EAAU;MACV,IAAIA,CAAC,CAACC,IAAF,KAAW,kBAAX,IAAiCD,CAAC,CAACE,OAAF,CAAUC,QAAV,CAAmBN,IAAnB,CAArC,EAA+D;QAC7DR,GAAG,CAACe,KAAJ,CAAW,uBAAsBP,IAAK,sDAAqDA,IAAK,aAAhG;MACD,CAFD,MAEO;QACLR,GAAG,CAACe,KAAJ,CAAW,yBAAwBP,IAAK,gBAAeG,CAAC,CAACE,OAAQ,EAAjE;MACD;;MACDR,OAAO,CAACW,IAAR,CAAa,YAAb,EAA2B,SAA3B,EAAsCR,IAAtC;IACD;EACF;;EAEDJ,OAAO,CAACa,OAAR,CAAgB,UAAUC,MAAV,EAAkB;IAChC,IAAInB,MAAM,CAACoB,QAAP,CAAgBD,MAAhB,CAAJ,EAA6B;MAC3B,IAAI,CAACA,MAAM,CAACJ,QAAP,CAAgB,GAAhB,CAAL,EAA2B;QACzBP,aAAa,CAACW,MAAD,CAAb;QACA;MACD;;MACD,MAAME,eAAe,GAAGtB,IAAI,CAACuB,SAAL,CAAevB,IAAI,CAACwB,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAxB;MACA,MAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAY,IAAGP,MAAM,CAACQ,OAAP,CAAe,KAAf,EAAsB,IAAtB,EAA4BA,OAA5B,CAAoC,KAApC,EAA2C,SAA3C,CAAsD,EAArE,CAAf;MAEA1B,GAAG,CAACS,KAAJ,CAAW,WAAUS,MAAO,SAAQE,eAAgB,EAApD;MACAxB,EAAE,CAAC+B,WAAH,CAAeP,eAAf,EACGQ,GADH,CACQjB,CAAD,IAAO;QACV,MAAMkB,UAAU,GAAG/B,IAAI,CAACwB,IAAL,CAAUF,eAAV,EAA2BT,CAA3B,CAAnB;;QACA,IAAIA,CAAC,CAAC,CAAD,CAAD,KAAS,GAAb,EAAkB;UAChB,OAAOf,EAAE,CAAC+B,WAAH,CAAeE,UAAf,EAA2BD,GAA3B,CAAgCjB,CAAD,IAAOb,IAAI,CAACwB,IAAL,CAAUO,UAAV,EAAsBlB,CAAtB,CAAtC,CAAP;QACD;;QACD,OAAOkB,UAAP;MACD,CAPH,EAQGC,MARH,CAQU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,MAAF,CAASD,CAAT,CARpB,EAQiC,EARjC,EASGJ,GATH,CASQC,UAAD,IAAgB/B,IAAI,CAACoC,QAAL,CAAcd,eAAd,EAA+BS,UAA/B,CATvB,EAUGM,MAVH,CAUWC,UAAD,IAAgB,CAAClC,gBAAgB,CAACY,QAAjB,CAA0BsB,UAA1B,CAAD,IAA0CZ,MAAM,CAACa,IAAP,CAAYD,UAAZ,CAVpE,EAWGnB,OAXH,CAWYqB,UAAD,IAAgB/B,aAAa,CAACT,IAAI,CAACwB,IAAL,CAAUF,eAAV,EAA2BkB,UAA3B,CAAD,CAXxC;IAYD,CArBD,MAqBO,IAAIvC,MAAM,CAACwC,QAAP,CAAgBrB,MAAhB,CAAJ,EAA6B;MAClClB,GAAG,CAACS,KAAJ,CAAW,kCAAiC+B,MAAM,CAACC,IAAP,CAAYvB,MAAZ,EAAoBI,IAApB,CAAyB,IAAzB,CAA+B,GAA3E;MACAhB,OAAO,CAACI,IAAR,CAAaQ,MAAb;IACD,CAHM,MAGA;MACLlB,GAAG,CAACe,KAAJ,CAAW,kBAAiBG,MAAO,EAAnC;MACAb,OAAO,CAACW,IAAR,CAAa,YAAb,EAA2B,SAA3B,EAAsCE,MAAtC;IACD;EACF,CA7BD;EA+BA,OAAOZ,OAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASoC,uBAAT,CAAkCC,QAAlC,EAA4C;EAC1C,MAAMtC,OAAO,GAAGsC,QAAQ,CAACC,GAAT,CAAa,SAAb,CAAhB,CAD0C,CAE1C;;EACA,MAAMC,eAAe,GAAG,IAAIC,GAAJ,EAAxB;EACA,OAAO,SAASC,iBAAT,CAA4BC,IAA5B,EAAkCxC,IAAlC,EAAwC;IAC7C,IAAIqC,eAAe,CAACI,GAAhB,CAAoBzC,IAApB,CAAJ,EAA+B;MAC7B,OAAOqC,eAAe,CAACD,GAAhB,CAAoBpC,IAApB,CAAP;IACD;;IAED,IAAI0C,CAAJ;;IACA,IAAI;MACFA,CAAC,GAAGP,QAAQ,CAACC,GAAT,CAAc,GAAEI,IAAK,IAAGxC,IAAK,EAA7B,CAAJ;;MACA,IAAI,CAAC0C,CAAL,EAAQ;QACNlD,GAAG,CAACe,KAAJ,CAAW,yBAAwBiC,IAAK,IAAGxC,IAAK,EAAhD;QACAH,OAAO,CAACW,IAAR,CAAa,YAAb,EAA2BgC,IAA3B,EAAiCxC,IAAjC;MACD;IACF,CAND,CAME,OAAOG,CAAP,EAAU;MACV,IAAIA,CAAC,CAACE,OAAF,CAAUC,QAAV,CAAoB,oBAAmBkC,IAAK,IAAGxC,IAAK,GAApD,CAAJ,EAA6D;QAC3DR,GAAG,CAACe,KAAJ,CAAW,gBAAeP,IAAK,kEAA/B;MACD,CAFD,MAEO;QACLR,GAAG,CAACe,KAAJ,CAAW,gBAAeP,IAAK,QAArB,GAA+BG,CAAC,CAACwC,KAA3C;MACD;;MACD9C,OAAO,CAACW,IAAR,CAAa,YAAb,EAA2BgC,IAA3B,EAAiCxC,IAAjC;IACD;;IACDqC,eAAe,CAACO,GAAhB,CAAoB5C,IAApB,EAA0B0C,CAA1B,EAA8B,GAAEF,IAAK,IAAGxC,IAAK,EAA7C;IACA,OAAO0C,CAAP;EACD,CAtBD;AAuBD;;AAEDR,uBAAuB,CAACW,OAAxB,GAAkC,CAAC,UAAD,CAAlC;AAEAC,MAAM,CAACC,OAAP,GAAiB;EAAEpD,OAAF;EAAWuC;AAAX,CAAjB"},"metadata":{},"sourceType":"script"}