{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findTests = void 0;\n\nconst fs_1 = require(\"fs\");\n\nconst glob_1 = __importStar(require(\"glob\"));\n\nconst path_1 = require(\"path\");\n\nconst util_1 = require(\"util\");\n\nconst globPromise = (0, util_1.promisify)(glob_1.default); // go through all patterns and find unique list of files\n\nfunction findTests(_x, _x2, _x3) {\n  return _findTests.apply(this, arguments);\n}\n\nfunction _findTests() {\n  _findTests = _asyncToGenerator(function* (patterns, workspaceRoot, projectSourceRoot) {\n    const matchingTestsPromises = patterns.map(pattern => findMatchingTests(pattern, workspaceRoot, projectSourceRoot));\n    const files = yield Promise.all(matchingTestsPromises); // Unique file names\n\n    return [...new Set(files.flat())];\n  });\n  return _findTests.apply(this, arguments);\n}\n\nexports.findTests = findTests;\n\nconst normalizePath = path => path.replace(/\\\\/g, '/');\n\nfunction findMatchingTests(_x4, _x5, _x6) {\n  return _findMatchingTests.apply(this, arguments);\n}\n\nfunction _findMatchingTests() {\n  _findMatchingTests = _asyncToGenerator(function* (pattern, workspaceRoot, projectSourceRoot) {\n    // normalize pattern, glob lib only accepts forward slashes\n    let normalizedPattern = normalizePath(pattern);\n    const relativeProjectRoot = normalizePath((0, path_1.relative)(workspaceRoot, projectSourceRoot) + '/'); // remove relativeProjectRoot to support relative paths from root\n    // such paths are easy to get when running scripts via IDEs\n\n    if (normalizedPattern.startsWith(relativeProjectRoot)) {\n      normalizedPattern = normalizedPattern.substring(relativeProjectRoot.length);\n    } // special logic when pattern does not look like a glob\n\n\n    if (!(0, glob_1.hasMagic)(normalizedPattern)) {\n      if (yield isDirectory((0, path_1.join)(projectSourceRoot, normalizedPattern))) {\n        normalizedPattern = `${normalizedPattern}/**/*.spec.@(ts|tsx)`;\n      } else {\n        // see if matching spec file exists\n        const fileExt = (0, path_1.extname)(normalizedPattern); // Replace extension to `.spec.ext`. Example: `src/app/app.component.ts`-> `src/app/app.component.spec.ts`\n\n        const potentialSpec = (0, path_1.join)((0, path_1.dirname)(normalizedPattern), `${(0, path_1.basename)(normalizedPattern, fileExt)}.spec${fileExt}`);\n\n        if (yield exists((0, path_1.join)(projectSourceRoot, potentialSpec))) {\n          return [normalizePath(potentialSpec)];\n        }\n      }\n    }\n\n    return globPromise(normalizedPattern, {\n      cwd: projectSourceRoot,\n      root: projectSourceRoot,\n      nomount: true\n    });\n  });\n  return _findMatchingTests.apply(this, arguments);\n}\n\nfunction isDirectory(_x7) {\n  return _isDirectory.apply(this, arguments);\n}\n\nfunction _isDirectory() {\n  _isDirectory = _asyncToGenerator(function* (path) {\n    try {\n      const stats = yield fs_1.promises.stat(path);\n      return stats.isDirectory();\n    } catch {\n      return false;\n    }\n  });\n  return _isDirectory.apply(this, arguments);\n}\n\nfunction exists(_x8) {\n  return _exists.apply(this, arguments);\n}\n\nfunction _exists() {\n  _exists = _asyncToGenerator(function* (path) {\n    try {\n      yield fs_1.promises.access(path, fs_1.constants.F_OK);\n      return true;\n    } catch {\n      return false;\n    }\n  });\n  return _exists.apply(this, arguments);\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","findTests","fs_1","require","glob_1","path_1","util_1","globPromise","promisify","default","patterns","workspaceRoot","projectSourceRoot","matchingTestsPromises","map","pattern","findMatchingTests","files","Promise","all","Set","flat","normalizePath","path","replace","normalizedPattern","relativeProjectRoot","relative","startsWith","substring","length","hasMagic","isDirectory","join","fileExt","extname","potentialSpec","dirname","basename","exists","cwd","root","nomount","stats","promises","stat","access","constants","F_OK"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@angular-devkit/build-angular/src/builders/karma/find-tests.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findTests = void 0;\nconst fs_1 = require(\"fs\");\nconst glob_1 = __importStar(require(\"glob\"));\nconst path_1 = require(\"path\");\nconst util_1 = require(\"util\");\nconst globPromise = (0, util_1.promisify)(glob_1.default);\n// go through all patterns and find unique list of files\nasync function findTests(patterns, workspaceRoot, projectSourceRoot) {\n    const matchingTestsPromises = patterns.map((pattern) => findMatchingTests(pattern, workspaceRoot, projectSourceRoot));\n    const files = await Promise.all(matchingTestsPromises);\n    // Unique file names\n    return [...new Set(files.flat())];\n}\nexports.findTests = findTests;\nconst normalizePath = (path) => path.replace(/\\\\/g, '/');\nasync function findMatchingTests(pattern, workspaceRoot, projectSourceRoot) {\n    // normalize pattern, glob lib only accepts forward slashes\n    let normalizedPattern = normalizePath(pattern);\n    const relativeProjectRoot = normalizePath((0, path_1.relative)(workspaceRoot, projectSourceRoot) + '/');\n    // remove relativeProjectRoot to support relative paths from root\n    // such paths are easy to get when running scripts via IDEs\n    if (normalizedPattern.startsWith(relativeProjectRoot)) {\n        normalizedPattern = normalizedPattern.substring(relativeProjectRoot.length);\n    }\n    // special logic when pattern does not look like a glob\n    if (!(0, glob_1.hasMagic)(normalizedPattern)) {\n        if (await isDirectory((0, path_1.join)(projectSourceRoot, normalizedPattern))) {\n            normalizedPattern = `${normalizedPattern}/**/*.spec.@(ts|tsx)`;\n        }\n        else {\n            // see if matching spec file exists\n            const fileExt = (0, path_1.extname)(normalizedPattern);\n            // Replace extension to `.spec.ext`. Example: `src/app/app.component.ts`-> `src/app/app.component.spec.ts`\n            const potentialSpec = (0, path_1.join)((0, path_1.dirname)(normalizedPattern), `${(0, path_1.basename)(normalizedPattern, fileExt)}.spec${fileExt}`);\n            if (await exists((0, path_1.join)(projectSourceRoot, potentialSpec))) {\n                return [normalizePath(potentialSpec)];\n            }\n        }\n    }\n    return globPromise(normalizedPattern, {\n        cwd: projectSourceRoot,\n        root: projectSourceRoot,\n        nomount: true,\n    });\n}\nasync function isDirectory(path) {\n    try {\n        const stats = await fs_1.promises.stat(path);\n        return stats.isDirectory();\n    }\n    catch {\n        return false;\n    }\n}\nasync function exists(path) {\n    try {\n        await fs_1.promises.access(path, fs_1.constants.F_OK);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}