{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loader;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _semver = require(\"semver\");\n\nvar _package = _interopRequireDefault(require(\"postcss/package.json\"));\n\nvar _Warning = _interopRequireDefault(require(\"./Warning\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nlet hasExplicitDependencyOnPostCSS = false;\n/**\n * **PostCSS Loader**\n *\n * Loads && processes CSS with [PostCSS](https://github.com/postcss/postcss)\n *\n * @method loader\n *\n * @param {String} content Source\n * @param {Object} sourceMap Source Map\n * @param {Object} meta Meta\n *\n * @return {callback} callback Result\n */\n\nfunction loader(_x, _x2, _x3) {\n  return _loader.apply(this, arguments);\n}\n\nfunction _loader() {\n  _loader = _asyncToGenerator(function* (content, sourceMap, meta) {\n    const options = this.getOptions(_options.default);\n    const callback = this.async();\n    const configOption = typeof options.postcssOptions === \"undefined\" || typeof options.postcssOptions.config === \"undefined\" ? true : options.postcssOptions.config;\n    const postcssFactory = (0, _utils.getPostcssImplementation)(this, options.implementation);\n\n    if (!postcssFactory) {\n      callback(new Error(`The Postcss implementation \"${options.implementation}\" not found`));\n      return;\n    }\n\n    let loadedConfig;\n\n    if (configOption) {\n      try {\n        loadedConfig = yield (0, _utils.loadConfig)(this, configOption, options.postcssOptions);\n      } catch (error) {\n        callback(error);\n        return;\n      }\n    }\n\n    const useSourceMap = typeof options.sourceMap !== \"undefined\" ? options.sourceMap : this.sourceMap;\n    const {\n      plugins,\n      processOptions\n    } = yield (0, _utils.getPostcssOptions)(this, loadedConfig, options.postcssOptions);\n\n    if (useSourceMap) {\n      processOptions.map = {\n        inline: false,\n        annotation: false,\n        ...processOptions.map\n      };\n    }\n\n    if (sourceMap && processOptions.map) {\n      processOptions.map.prev = (0, _utils.normalizeSourceMap)(sourceMap, this.context);\n    }\n\n    let root; // Reuse PostCSS AST from other loaders\n\n    if (meta && meta.ast && meta.ast.type === \"postcss\" && (0, _semver.satisfies)(meta.ast.version, `^${_package.default.version}`)) {\n      ({\n        root\n      } = meta.ast);\n    }\n\n    if (!root && options.execute) {\n      // eslint-disable-next-line no-param-reassign\n      content = (0, _utils.exec)(content, this);\n    }\n\n    let result;\n    let processor;\n\n    try {\n      processor = postcssFactory(plugins);\n      result = yield processor.process(root || content, processOptions);\n    } catch (error) {\n      // Check postcss versions to avoid using PostCSS 7.\n      // For caching reasons, we use the readFileSync and existsSync functions from the context,\n      // not the functions from the `fs` module.\n      if (!hasExplicitDependencyOnPostCSS && processor && processor.version && processor.version.startsWith(\"7.\")) {\n        // The `findPackageJsonDir` function returns `string` or `null`.\n        // This is used to do for caching, that is, an explicit comparison with `undefined`\n        // is used to make the condition body run once.\n        const packageJSONDir = (0, _utils.findPackageJSONDir)(process.cwd(), this.fs.statSync);\n\n        if (packageJSONDir) {\n          let bufferOfPackageJSON;\n\n          try {\n            bufferOfPackageJSON = this.fs.readFileSync(_path.default.resolve(packageJSONDir, \"package.json\"), \"utf8\");\n          } catch (_error) {// Nothing\n          }\n\n          if (bufferOfPackageJSON) {\n            let pkg;\n\n            try {\n              pkg = JSON.parse(bufferOfPackageJSON);\n            } catch (_error) {// Nothing\n            }\n\n            if (pkg) {\n              if (!pkg.dependencies.postcss && !pkg.devDependencies.postcss) {\n                this.emitWarning(new Error(\"Add postcss as project dependency. postcss is not a peer dependency for postcss-loader. \" + \"Use `npm install postcss` or `yarn add postcss`\"));\n              } else {\n                hasExplicitDependencyOnPostCSS = true;\n              }\n            }\n          }\n        }\n      }\n\n      (0, _utils.reportError)(this, callback, error);\n      return;\n    }\n\n    for (const warning of result.warnings()) {\n      this.emitWarning(new _Warning.default(warning));\n    }\n\n    for (const message of result.messages) {\n      // eslint-disable-next-line default-case\n      switch (message.type) {\n        case \"dependency\":\n          this.addDependency(message.file);\n          break;\n\n        case \"build-dependency\":\n          this.addBuildDependency(message.file);\n          break;\n\n        case \"missing-dependency\":\n          this.addMissingDependency(message.file);\n          break;\n\n        case \"context-dependency\":\n          this.addContextDependency(message.file);\n          break;\n\n        case \"dir-dependency\":\n          this.addContextDependency(message.dir);\n          break;\n\n        case \"asset\":\n          if (message.content && message.file) {\n            this.emitFile(message.file, message.content, message.sourceMap, message.info);\n          }\n\n      }\n    } // eslint-disable-next-line no-undefined\n\n\n    let map = result.map ? result.map.toJSON() : undefined;\n\n    if (map && useSourceMap) {\n      map = (0, _utils.normalizeSourceMapAfterPostcss)(map, this.context);\n    }\n\n    let ast;\n\n    try {\n      ast = {\n        type: \"postcss\",\n        version: result.processor.version,\n        root: result.root\n      };\n    } catch (error) {\n      (0, _utils.reportError)(this, callback, error);\n      return;\n    }\n\n    callback(null, result.css, map, {\n      ast\n    });\n  });\n  return _loader.apply(this, arguments);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","loader","_path","_interopRequireDefault","require","_semver","_package","_Warning","_options","_utils","obj","__esModule","hasExplicitDependencyOnPostCSS","content","sourceMap","meta","options","getOptions","callback","async","configOption","postcssOptions","config","postcssFactory","getPostcssImplementation","implementation","Error","loadedConfig","loadConfig","error","useSourceMap","plugins","processOptions","getPostcssOptions","map","inline","annotation","prev","normalizeSourceMap","context","root","ast","type","satisfies","version","execute","exec","result","processor","process","startsWith","packageJSONDir","findPackageJSONDir","cwd","fs","statSync","bufferOfPackageJSON","readFileSync","resolve","_error","pkg","JSON","parse","dependencies","postcss","devDependencies","emitWarning","reportError","warning","warnings","message","messages","addDependency","file","addBuildDependency","addMissingDependency","addContextDependency","dir","emitFile","info","toJSON","undefined","normalizeSourceMapAfterPostcss","css"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/postcss-loader/dist/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loader;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _semver = require(\"semver\");\n\nvar _package = _interopRequireDefault(require(\"postcss/package.json\"));\n\nvar _Warning = _interopRequireDefault(require(\"./Warning\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet hasExplicitDependencyOnPostCSS = false;\n/**\n * **PostCSS Loader**\n *\n * Loads && processes CSS with [PostCSS](https://github.com/postcss/postcss)\n *\n * @method loader\n *\n * @param {String} content Source\n * @param {Object} sourceMap Source Map\n * @param {Object} meta Meta\n *\n * @return {callback} callback Result\n */\n\nasync function loader(content, sourceMap, meta) {\n  const options = this.getOptions(_options.default);\n  const callback = this.async();\n  const configOption = typeof options.postcssOptions === \"undefined\" || typeof options.postcssOptions.config === \"undefined\" ? true : options.postcssOptions.config;\n  const postcssFactory = (0, _utils.getPostcssImplementation)(this, options.implementation);\n\n  if (!postcssFactory) {\n    callback(new Error(`The Postcss implementation \"${options.implementation}\" not found`));\n    return;\n  }\n\n  let loadedConfig;\n\n  if (configOption) {\n    try {\n      loadedConfig = await (0, _utils.loadConfig)(this, configOption, options.postcssOptions);\n    } catch (error) {\n      callback(error);\n      return;\n    }\n  }\n\n  const useSourceMap = typeof options.sourceMap !== \"undefined\" ? options.sourceMap : this.sourceMap;\n  const {\n    plugins,\n    processOptions\n  } = await (0, _utils.getPostcssOptions)(this, loadedConfig, options.postcssOptions);\n\n  if (useSourceMap) {\n    processOptions.map = {\n      inline: false,\n      annotation: false,\n      ...processOptions.map\n    };\n  }\n\n  if (sourceMap && processOptions.map) {\n    processOptions.map.prev = (0, _utils.normalizeSourceMap)(sourceMap, this.context);\n  }\n\n  let root; // Reuse PostCSS AST from other loaders\n\n  if (meta && meta.ast && meta.ast.type === \"postcss\" && (0, _semver.satisfies)(meta.ast.version, `^${_package.default.version}`)) {\n    ({\n      root\n    } = meta.ast);\n  }\n\n  if (!root && options.execute) {\n    // eslint-disable-next-line no-param-reassign\n    content = (0, _utils.exec)(content, this);\n  }\n\n  let result;\n  let processor;\n\n  try {\n    processor = postcssFactory(plugins);\n    result = await processor.process(root || content, processOptions);\n  } catch (error) {\n    // Check postcss versions to avoid using PostCSS 7.\n    // For caching reasons, we use the readFileSync and existsSync functions from the context,\n    // not the functions from the `fs` module.\n    if (!hasExplicitDependencyOnPostCSS && processor && processor.version && processor.version.startsWith(\"7.\")) {\n      // The `findPackageJsonDir` function returns `string` or `null`.\n      // This is used to do for caching, that is, an explicit comparison with `undefined`\n      // is used to make the condition body run once.\n      const packageJSONDir = (0, _utils.findPackageJSONDir)(process.cwd(), this.fs.statSync);\n\n      if (packageJSONDir) {\n        let bufferOfPackageJSON;\n\n        try {\n          bufferOfPackageJSON = this.fs.readFileSync(_path.default.resolve(packageJSONDir, \"package.json\"), \"utf8\");\n        } catch (_error) {// Nothing\n        }\n\n        if (bufferOfPackageJSON) {\n          let pkg;\n\n          try {\n            pkg = JSON.parse(bufferOfPackageJSON);\n          } catch (_error) {// Nothing\n          }\n\n          if (pkg) {\n            if (!pkg.dependencies.postcss && !pkg.devDependencies.postcss) {\n              this.emitWarning(new Error(\"Add postcss as project dependency. postcss is not a peer dependency for postcss-loader. \" + \"Use `npm install postcss` or `yarn add postcss`\"));\n            } else {\n              hasExplicitDependencyOnPostCSS = true;\n            }\n          }\n        }\n      }\n    }\n\n    (0, _utils.reportError)(this, callback, error);\n    return;\n  }\n\n  for (const warning of result.warnings()) {\n    this.emitWarning(new _Warning.default(warning));\n  }\n\n  for (const message of result.messages) {\n    // eslint-disable-next-line default-case\n    switch (message.type) {\n      case \"dependency\":\n        this.addDependency(message.file);\n        break;\n\n      case \"build-dependency\":\n        this.addBuildDependency(message.file);\n        break;\n\n      case \"missing-dependency\":\n        this.addMissingDependency(message.file);\n        break;\n\n      case \"context-dependency\":\n        this.addContextDependency(message.file);\n        break;\n\n      case \"dir-dependency\":\n        this.addContextDependency(message.dir);\n        break;\n\n      case \"asset\":\n        if (message.content && message.file) {\n          this.emitFile(message.file, message.content, message.sourceMap, message.info);\n        }\n\n    }\n  } // eslint-disable-next-line no-undefined\n\n\n  let map = result.map ? result.map.toJSON() : undefined;\n\n  if (map && useSourceMap) {\n    map = (0, _utils.normalizeSourceMapAfterPostcss)(map, this.context);\n  }\n\n  let ast;\n\n  try {\n    ast = {\n      type: \"postcss\",\n      version: result.processor.version,\n      root: result.root\n    };\n  } catch (error) {\n    (0, _utils.reportError)(this, callback, error);\n    return;\n  }\n\n  callback(null, result.css, map, {\n    ast\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}