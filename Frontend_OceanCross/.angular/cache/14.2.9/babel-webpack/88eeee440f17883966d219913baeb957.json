{"ast":null,"code":"\"use strict\";\n\nfunction e(e) {\n  return e && \"object\" == typeof e && \"default\" in e ? e : {\n    default: e\n  };\n}\n\nvar s = e(require(\"postcss-selector-parser\"));\n\nconst t = e => {\n  e = Object(e);\n  const t = Boolean(!(\"preserve\" in e) || e.preserve),\n        r = String(e.replaceWith || \".focus-visible\"),\n        o = s.default().astSync(r);\n  return {\n    postcssPlugin: \"postcss-focus-visible\",\n\n    Rule(e, {\n      result: r\n    }) {\n      if (!e.selector.includes(\":focus-visible\")) return;\n      let c;\n\n      try {\n        const t = s.default(e => {\n          e.walkPseudos(e => {\n            \":focus-visible\" === e.value && (e.nodes && e.nodes.length || e.replaceWith(o.clone({})));\n          });\n        }).processSync(e.selector);\n        c = String(t);\n      } catch (s) {\n        return void e.warn(r, `Failed to parse selector : ${e.selector}`);\n      }\n\n      if (void 0 === c) return;\n      if (c === e.selector) return;\n      const l = e.clone({\n        selector: c\n      });\n      t ? e.before(l) : e.replaceWith(l);\n    }\n\n  };\n};\n\nt.postcss = !0, module.exports = t;","map":{"version":3,"names":["e","default","s","require","t","Object","Boolean","preserve","r","String","replaceWith","o","astSync","postcssPlugin","Rule","result","selector","includes","c","walkPseudos","value","nodes","length","clone","processSync","warn","l","before","postcss","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/postcss-focus-visible/dist/index.cjs"],"sourcesContent":["\"use strict\";function e(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var s=e(require(\"postcss-selector-parser\"));const t=e=>{e=Object(e);const t=Boolean(!(\"preserve\"in e)||e.preserve),r=String(e.replaceWith||\".focus-visible\"),o=s.default().astSync(r);return{postcssPlugin:\"postcss-focus-visible\",Rule(e,{result:r}){if(!e.selector.includes(\":focus-visible\"))return;let c;try{const t=s.default((e=>{e.walkPseudos((e=>{\":focus-visible\"===e.value&&(e.nodes&&e.nodes.length||e.replaceWith(o.clone({})))}))})).processSync(e.selector);c=String(t)}catch(s){return void e.warn(r,`Failed to parse selector : ${e.selector}`)}if(void 0===c)return;if(c===e.selector)return;const l=e.clone({selector:c});t?e.before(l):e.replaceWith(l)}}};t.postcss=!0,module.exports=t;\n"],"mappings":"AAAA;;AAAa,SAASA,CAAT,CAAWA,CAAX,EAAa;EAAC,OAAOA,CAAC,IAAE,YAAU,OAAOA,CAApB,IAAuB,aAAYA,CAAnC,GAAqCA,CAArC,GAAuC;IAACC,OAAO,EAACD;EAAT,CAA9C;AAA0D;;AAAA,IAAIE,CAAC,GAACF,CAAC,CAACG,OAAO,CAAC,yBAAD,CAAR,CAAP;;AAA4C,MAAMC,CAAC,GAACJ,CAAC,IAAE;EAACA,CAAC,GAACK,MAAM,CAACL,CAAD,CAAR;EAAY,MAAMI,CAAC,GAACE,OAAO,CAAC,EAAE,cAAaN,CAAf,KAAmBA,CAAC,CAACO,QAAtB,CAAf;EAAA,MAA+CC,CAAC,GAACC,MAAM,CAACT,CAAC,CAACU,WAAF,IAAe,gBAAhB,CAAvD;EAAA,MAAyFC,CAAC,GAACT,CAAC,CAACD,OAAF,GAAYW,OAAZ,CAAoBJ,CAApB,CAA3F;EAAkH,OAAM;IAACK,aAAa,EAAC,uBAAf;;IAAuCC,IAAI,CAACd,CAAD,EAAG;MAACe,MAAM,EAACP;IAAR,CAAH,EAAc;MAAC,IAAG,CAACR,CAAC,CAACgB,QAAF,CAAWC,QAAX,CAAoB,gBAApB,CAAJ,EAA0C;MAAO,IAAIC,CAAJ;;MAAM,IAAG;QAAC,MAAMd,CAAC,GAACF,CAAC,CAACD,OAAF,CAAWD,CAAC,IAAE;UAACA,CAAC,CAACmB,WAAF,CAAenB,CAAC,IAAE;YAAC,qBAAmBA,CAAC,CAACoB,KAArB,KAA6BpB,CAAC,CAACqB,KAAF,IAASrB,CAAC,CAACqB,KAAF,CAAQC,MAAjB,IAAyBtB,CAAC,CAACU,WAAF,CAAcC,CAAC,CAACY,KAAF,CAAQ,EAAR,CAAd,CAAtD;UAAkF,CAArG;QAAwG,CAAvH,EAA0HC,WAA1H,CAAsIxB,CAAC,CAACgB,QAAxI,CAAR;QAA0JE,CAAC,GAACT,MAAM,CAACL,CAAD,CAAR;MAAY,CAA1K,CAA0K,OAAMF,CAAN,EAAQ;QAAC,OAAO,KAAKF,CAAC,CAACyB,IAAF,CAAOjB,CAAP,EAAU,8BAA6BR,CAAC,CAACgB,QAAS,EAAlD,CAAZ;MAAiE;;MAAA,IAAG,KAAK,CAAL,KAASE,CAAZ,EAAc;MAAO,IAAGA,CAAC,KAAGlB,CAAC,CAACgB,QAAT,EAAkB;MAAO,MAAMU,CAAC,GAAC1B,CAAC,CAACuB,KAAF,CAAQ;QAACP,QAAQ,EAACE;MAAV,CAAR,CAAR;MAA8Bd,CAAC,GAACJ,CAAC,CAAC2B,MAAF,CAASD,CAAT,CAAD,GAAa1B,CAAC,CAACU,WAAF,CAAcgB,CAAd,CAAd;IAA+B;;EAAhd,CAAN;AAAwd,CAAlmB;;AAAmmBtB,CAAC,CAACwB,OAAF,GAAU,CAAC,CAAX,EAAaC,MAAM,CAACC,OAAP,GAAe1B,CAA5B"},"metadata":{},"sourceType":"script"}