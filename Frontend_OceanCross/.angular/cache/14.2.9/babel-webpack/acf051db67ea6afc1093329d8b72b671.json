{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst http = require('http');\n\nconst https = require('https');\n\nconst path = require('path');\n\nconst connect = require('connect');\n\nconst mimeType = require('mime');\n\nconst common = require('./middleware/common');\n\nconst runnerMiddleware = require('./middleware/runner');\n\nconst stopperMiddleware = require('./middleware/stopper');\n\nconst karmaMiddleware = require('./middleware/karma');\n\nconst sourceFilesMiddleware = require('./middleware/source_files');\n\nconst proxyMiddleware = require('./middleware/proxy');\n\nconst log = require('./logger').create('web-server');\n\nfunction createCustomHandler(customFileHandlers, config) {\n  let warningDone = false;\n  return function (request, response, next) {\n    const handler = customFileHandlers.find(handler => handler.urlRegex.test(request.url));\n\n    if (customFileHandlers.length > 0 && !warningDone) {\n      warningDone = true;\n      log.warn('The `customFileHandlers` is deprecated and will be removed in Karma 7. Please upgrade plugins relying on this provider.');\n    }\n\n    return handler ? handler.handler(request, response, 'fake/static', 'fake/adapter', config.basePath, 'fake/root') : next();\n  };\n}\n\ncreateCustomHandler.$inject = ['customFileHandlers', 'config'];\n\nfunction createFilesPromise(emitter, fileList) {\n  // Set an empty list of files to avoid race issues with\n  // file_list_modified not having been emitted yet\n  let files = fileList.files;\n  emitter.on('file_list_modified', filesParam => {\n    files = filesParam;\n  });\n  return {\n    then(...args) {\n      return Promise.resolve(files).then(...args);\n    }\n\n  };\n}\n\nfunction createServeStaticFile(config) {\n  return common.createServeFile(fs, path.normalize(path.join(__dirname, '/../static')), config);\n}\n\ncreateServeStaticFile.$inject = ['config'];\n\nfunction createServeFile(config) {\n  return common.createServeFile(fs, null, config);\n}\n\ncreateServeFile.$inject = ['config'];\n\nfunction createWebServer(injector, config) {\n  const {\n    mime = {}\n  } = config;\n  mimeType.define({ ...mime\n  }, true);\n  const proxyMiddlewareInstance = injector.invoke(proxyMiddleware.create);\n  log.debug('Instantiating middleware');\n  const handler = connect();\n\n  if (config.beforeMiddleware) {\n    config.beforeMiddleware.forEach(middleware => handler.use(injector.get('middleware:' + middleware)));\n  }\n\n  handler.use(injector.invoke(runnerMiddleware.create));\n  handler.use(injector.invoke(stopperMiddleware.create));\n  handler.use(injector.invoke(karmaMiddleware.create));\n  handler.use(injector.invoke(sourceFilesMiddleware.create)); // TODO(vojta): extract the proxy into a plugin\n\n  handler.use(proxyMiddlewareInstance); // TODO: Deprecated. Remove in the next major\n\n  handler.use(injector.invoke(createCustomHandler));\n\n  if (config.middleware) {\n    config.middleware.forEach(middleware => handler.use(injector.get('middleware:' + middleware)));\n  }\n\n  handler.use((request, response) => common.serve404(response, request.url));\n  let serverClass = http;\n  const serverArguments = [handler];\n\n  if (config.protocol === 'https:') {\n    serverClass = https;\n    serverArguments.unshift(config.httpsServerOptions || {});\n  }\n\n  if (config.httpModule) {\n    serverClass = config.httpModule;\n  }\n\n  const server = serverClass.createServer.apply(null, serverArguments);\n  server.on('upgrade', function (req, socket, head) {\n    log.debug(`upgrade ${req.url}`);\n    proxyMiddlewareInstance.upgrade(req, socket, head);\n  });\n  return server;\n}\n\ncreateWebServer.$inject = ['injector', 'config'];\nmodule.exports = {\n  createWebServer,\n  createServeFile,\n  createServeStaticFile,\n  createFilesPromise\n};","map":{"version":3,"names":["fs","require","http","https","path","connect","mimeType","common","runnerMiddleware","stopperMiddleware","karmaMiddleware","sourceFilesMiddleware","proxyMiddleware","log","create","createCustomHandler","customFileHandlers","config","warningDone","request","response","next","handler","find","urlRegex","test","url","length","warn","basePath","$inject","createFilesPromise","emitter","fileList","files","on","filesParam","then","args","Promise","resolve","createServeStaticFile","createServeFile","normalize","join","__dirname","createWebServer","injector","mime","define","proxyMiddlewareInstance","invoke","debug","beforeMiddleware","forEach","middleware","use","get","serve404","serverClass","serverArguments","protocol","unshift","httpsServerOptions","httpModule","server","createServer","apply","req","socket","head","upgrade","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/web-server.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst http = require('http')\nconst https = require('https')\nconst path = require('path')\nconst connect = require('connect')\nconst mimeType = require('mime')\n\nconst common = require('./middleware/common')\nconst runnerMiddleware = require('./middleware/runner')\nconst stopperMiddleware = require('./middleware/stopper')\nconst karmaMiddleware = require('./middleware/karma')\nconst sourceFilesMiddleware = require('./middleware/source_files')\nconst proxyMiddleware = require('./middleware/proxy')\n\nconst log = require('./logger').create('web-server')\n\nfunction createCustomHandler (customFileHandlers, config) {\n  let warningDone = false\n\n  return function (request, response, next) {\n    const handler = customFileHandlers.find((handler) => handler.urlRegex.test(request.url))\n\n    if (customFileHandlers.length > 0 && !warningDone) {\n      warningDone = true\n      log.warn('The `customFileHandlers` is deprecated and will be removed in Karma 7. Please upgrade plugins relying on this provider.')\n    }\n\n    return handler\n      ? handler.handler(request, response, 'fake/static', 'fake/adapter', config.basePath, 'fake/root')\n      : next()\n  }\n}\n\ncreateCustomHandler.$inject = ['customFileHandlers', 'config']\n\nfunction createFilesPromise (emitter, fileList) {\n  // Set an empty list of files to avoid race issues with\n  // file_list_modified not having been emitted yet\n  let files = fileList.files\n  emitter.on('file_list_modified', (filesParam) => { files = filesParam })\n\n  return {\n    then (...args) {\n      return Promise.resolve(files).then(...args)\n    }\n  }\n}\n\nfunction createServeStaticFile (config) {\n  return common.createServeFile(fs, path.normalize(path.join(__dirname, '/../static')), config)\n}\ncreateServeStaticFile.$inject = ['config']\n\nfunction createServeFile (config) {\n  return common.createServeFile(fs, null, config)\n}\ncreateServeFile.$inject = ['config']\n\nfunction createWebServer (injector, config) {\n  const { mime = {} } = config\n  mimeType.define({ ...mime }, true)\n\n  const proxyMiddlewareInstance = injector.invoke(proxyMiddleware.create)\n\n  log.debug('Instantiating middleware')\n  const handler = connect()\n\n  if (config.beforeMiddleware) {\n    config.beforeMiddleware.forEach((middleware) => handler.use(injector.get('middleware:' + middleware)))\n  }\n\n  handler.use(injector.invoke(runnerMiddleware.create))\n  handler.use(injector.invoke(stopperMiddleware.create))\n  handler.use(injector.invoke(karmaMiddleware.create))\n  handler.use(injector.invoke(sourceFilesMiddleware.create))\n  // TODO(vojta): extract the proxy into a plugin\n  handler.use(proxyMiddlewareInstance)\n  // TODO: Deprecated. Remove in the next major\n  handler.use(injector.invoke(createCustomHandler))\n\n  if (config.middleware) {\n    config.middleware.forEach((middleware) => handler.use(injector.get('middleware:' + middleware)))\n  }\n\n  handler.use((request, response) => common.serve404(response, request.url))\n\n  let serverClass = http\n  const serverArguments = [handler]\n\n  if (config.protocol === 'https:') {\n    serverClass = https\n    serverArguments.unshift(config.httpsServerOptions || {})\n  }\n\n  if (config.httpModule) {\n    serverClass = config.httpModule\n  }\n\n  const server = serverClass.createServer.apply(null, serverArguments)\n\n  server.on('upgrade', function (req, socket, head) {\n    log.debug(`upgrade ${req.url}`)\n    proxyMiddlewareInstance.upgrade(req, socket, head)\n  })\n\n  return server\n}\n\ncreateWebServer.$inject = ['injector', 'config']\n\nmodule.exports = {\n  createWebServer,\n  createServeFile,\n  createServeStaticFile,\n  createFilesPromise\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}