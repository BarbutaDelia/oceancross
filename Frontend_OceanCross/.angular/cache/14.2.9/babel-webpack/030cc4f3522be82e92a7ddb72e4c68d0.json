{"ast":null,"code":"'use strict';\n\nconst SAXParser = require('parse5-sax-parser');\n\nconst {\n  escapeString\n} = require('parse5/lib/serializer');\n\nclass RewritingStream extends SAXParser {\n  constructor() {\n    super({\n      sourceCodeLocationInfo: true\n    });\n    this.posTracker = this.locInfoMixin.posTracker;\n  }\n\n  _transformChunk(chunk) {\n    // NOTE: ignore upstream return value as we want to push to\n    // the Writable part of Transform stream ourselves.\n    super._transformChunk(chunk);\n  }\n\n  _getRawHtml(location) {\n    const droppedBufferSize = this.posTracker.droppedBufferSize;\n    const start = location.startOffset - droppedBufferSize;\n    const end = location.endOffset - droppedBufferSize;\n    return this.tokenizer.preprocessor.html.slice(start, end);\n  } // Events\n\n\n  _handleToken(token) {\n    if (!super._handleToken(token)) {\n      this.emitRaw(this._getRawHtml(token.location));\n    } // NOTE: don't skip new lines after <pre> and other tags,\n    // otherwise we'll have incorrect raw data.\n\n\n    this.parserFeedbackSimulator.skipNextNewLine = false;\n  } // Emitter API\n\n\n  _emitToken(eventName, token) {\n    this.emit(eventName, token, this._getRawHtml(token.sourceCodeLocation));\n  }\n\n  emitDoctype(token) {\n    let res = `<!DOCTYPE ${token.name}`;\n\n    if (token.publicId !== null) {\n      res += ` PUBLIC \"${token.publicId}\"`;\n    } else if (token.systemId !== null) {\n      res += ' SYSTEM';\n    }\n\n    if (token.systemId !== null) {\n      res += ` \"${token.systemId}\"`;\n    }\n\n    res += '>';\n    this.push(res);\n  }\n\n  emitStartTag(token) {\n    let res = `<${token.tagName}`;\n    const attrs = token.attrs;\n\n    for (let i = 0; i < attrs.length; i++) {\n      res += ` ${attrs[i].name}=\"${escapeString(attrs[i].value, true)}\"`;\n    }\n\n    res += token.selfClosing ? '/>' : '>';\n    this.push(res);\n  }\n\n  emitEndTag(token) {\n    this.push(`</${token.tagName}>`);\n  }\n\n  emitText({\n    text\n  }) {\n    this.push(escapeString(text, false));\n  }\n\n  emitComment(token) {\n    this.push(`<!--${token.text}-->`);\n  }\n\n  emitRaw(html) {\n    this.push(html);\n  }\n\n}\n\nmodule.exports = RewritingStream;","map":{"version":3,"names":["SAXParser","require","escapeString","RewritingStream","constructor","sourceCodeLocationInfo","posTracker","locInfoMixin","_transformChunk","chunk","_getRawHtml","location","droppedBufferSize","start","startOffset","end","endOffset","tokenizer","preprocessor","html","slice","_handleToken","token","emitRaw","parserFeedbackSimulator","skipNextNewLine","_emitToken","eventName","emit","sourceCodeLocation","emitDoctype","res","name","publicId","systemId","push","emitStartTag","tagName","attrs","i","length","value","selfClosing","emitEndTag","emitText","text","emitComment","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/parse5-html-rewriting-stream/lib/index.js"],"sourcesContent":["'use strict';\n\nconst SAXParser = require('parse5-sax-parser');\nconst { escapeString } = require('parse5/lib/serializer');\n\nclass RewritingStream extends SAXParser {\n    constructor() {\n        super({ sourceCodeLocationInfo: true });\n\n        this.posTracker = this.locInfoMixin.posTracker;\n    }\n\n    _transformChunk(chunk) {\n        // NOTE: ignore upstream return value as we want to push to\n        // the Writable part of Transform stream ourselves.\n        super._transformChunk(chunk);\n    }\n\n    _getRawHtml(location) {\n        const droppedBufferSize = this.posTracker.droppedBufferSize;\n        const start = location.startOffset - droppedBufferSize;\n        const end = location.endOffset - droppedBufferSize;\n\n        return this.tokenizer.preprocessor.html.slice(start, end);\n    }\n\n    // Events\n    _handleToken(token) {\n        if (!super._handleToken(token)) {\n            this.emitRaw(this._getRawHtml(token.location));\n        }\n\n        // NOTE: don't skip new lines after <pre> and other tags,\n        // otherwise we'll have incorrect raw data.\n        this.parserFeedbackSimulator.skipNextNewLine = false;\n    }\n\n    // Emitter API\n    _emitToken(eventName, token) {\n        this.emit(eventName, token, this._getRawHtml(token.sourceCodeLocation));\n    }\n\n    emitDoctype(token) {\n        let res = `<!DOCTYPE ${token.name}`;\n\n        if (token.publicId !== null) {\n            res += ` PUBLIC \"${token.publicId}\"`;\n        } else if (token.systemId !== null) {\n            res += ' SYSTEM';\n        }\n\n        if (token.systemId !== null) {\n            res += ` \"${token.systemId}\"`;\n        }\n\n        res += '>';\n\n        this.push(res);\n    }\n\n    emitStartTag(token) {\n        let res = `<${token.tagName}`;\n\n        const attrs = token.attrs;\n\n        for (let i = 0; i < attrs.length; i++) {\n            res += ` ${attrs[i].name}=\"${escapeString(attrs[i].value, true)}\"`;\n        }\n\n        res += token.selfClosing ? '/>' : '>';\n\n        this.push(res);\n    }\n\n    emitEndTag(token) {\n        this.push(`</${token.tagName}>`);\n    }\n\n    emitText({ text }) {\n        this.push(escapeString(text, false));\n    }\n\n    emitComment(token) {\n        this.push(`<!--${token.text}-->`);\n    }\n\n    emitRaw(html) {\n        this.push(html);\n    }\n}\n\nmodule.exports = RewritingStream;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}