{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst assert = require('assert');\n\nconst logger = require('./logger');\n\nconst log = logger.create('config');\n\nconst helper = require('./helper');\n\nconst constant = require('./constants');\n\nconst _ = require('lodash');\n\nlet COFFEE_SCRIPT_AVAILABLE = false;\nlet LIVE_SCRIPT_AVAILABLE = false;\nlet TYPE_SCRIPT_AVAILABLE = false;\n\ntry {\n  require('coffeescript').register();\n\n  COFFEE_SCRIPT_AVAILABLE = true;\n} catch {} // LiveScript is required here to enable config files written in LiveScript.\n// It's not directly used in this file.\n\n\ntry {\n  require('LiveScript');\n\n  LIVE_SCRIPT_AVAILABLE = true;\n} catch {}\n\ntry {\n  require('ts-node');\n\n  TYPE_SCRIPT_AVAILABLE = true;\n} catch {}\n\nclass Pattern {\n  constructor(pattern, served, included, watched, nocache, type, isBinary, integrity) {\n    this.pattern = pattern;\n    this.served = helper.isDefined(served) ? served : true;\n    this.included = helper.isDefined(included) ? included : true;\n    this.watched = helper.isDefined(watched) ? watched : true;\n    this.nocache = helper.isDefined(nocache) ? nocache : false;\n    this.weight = helper.mmPatternWeight(pattern);\n    this.type = type;\n    this.isBinary = isBinary;\n    this.integrity = integrity;\n  }\n\n  compare(other) {\n    return helper.mmComparePatternWeights(this.weight, other.weight);\n  }\n\n}\n\nclass UrlPattern extends Pattern {\n  constructor(url, type, integrity) {\n    super(url, false, true, false, false, type, undefined, integrity);\n  }\n\n}\n\nfunction createPatternObject(pattern) {\n  if (pattern && helper.isString(pattern)) {\n    return helper.isUrlAbsolute(pattern) ? new UrlPattern(pattern) : new Pattern(pattern);\n  } else if (helper.isObject(pattern) && pattern.pattern && helper.isString(pattern.pattern)) {\n    return helper.isUrlAbsolute(pattern.pattern) ? new UrlPattern(pattern.pattern, pattern.type, pattern.integrity) : new Pattern(pattern.pattern, pattern.served, pattern.included, pattern.watched, pattern.nocache, pattern.type);\n  } else {\n    log.warn(`Invalid pattern ${pattern}!\\n\\tExpected string or object with \"pattern\" property.`);\n    return new Pattern(null, false, false, false, false);\n  }\n}\n\nfunction normalizeUrl(url) {\n  if (!url.startsWith('/')) {\n    url = `/${url}`;\n  }\n\n  if (!url.endsWith('/')) {\n    url = url + '/';\n  }\n\n  return url;\n}\n\nfunction normalizeUrlRoot(urlRoot) {\n  const normalizedUrlRoot = normalizeUrl(urlRoot);\n\n  if (normalizedUrlRoot !== urlRoot) {\n    log.warn(`urlRoot normalized to \"${normalizedUrlRoot}\"`);\n  }\n\n  return normalizedUrlRoot;\n}\n\nfunction normalizeProxyPath(proxyPath) {\n  const normalizedProxyPath = normalizeUrl(proxyPath);\n\n  if (normalizedProxyPath !== proxyPath) {\n    log.warn(`proxyPath normalized to \"${normalizedProxyPath}\"`);\n  }\n\n  return normalizedProxyPath;\n}\n\nfunction normalizeConfig(config, configFilePath) {\n  function basePathResolve(relativePath) {\n    if (helper.isUrlAbsolute(relativePath)) {\n      return relativePath;\n    } else if (helper.isDefined(config.basePath) && helper.isDefined(relativePath)) {\n      return path.resolve(config.basePath, relativePath);\n    } else {\n      return '';\n    }\n  }\n\n  function createPatternMapper(resolve) {\n    return objectPattern => Object.assign(objectPattern, {\n      pattern: resolve(objectPattern.pattern)\n    });\n  }\n\n  if (helper.isString(configFilePath)) {\n    config.basePath = path.resolve(path.dirname(configFilePath), config.basePath); // resolve basePath\n\n    config.exclude.push(configFilePath); // always ignore the config file itself\n  } else {\n    config.basePath = path.resolve(config.basePath || '.');\n  }\n\n  config.files = config.files.map(createPatternObject).map(createPatternMapper(basePathResolve));\n  config.exclude = config.exclude.map(basePathResolve);\n  config.customContextFile = config.customContextFile && basePathResolve(config.customContextFile);\n  config.customDebugFile = config.customDebugFile && basePathResolve(config.customDebugFile);\n  config.customClientContextFile = config.customClientContextFile && basePathResolve(config.customClientContextFile); // normalize paths on windows\n\n  config.basePath = helper.normalizeWinPath(config.basePath);\n  config.files = config.files.map(createPatternMapper(helper.normalizeWinPath));\n  config.exclude = config.exclude.map(helper.normalizeWinPath);\n  config.customContextFile = helper.normalizeWinPath(config.customContextFile);\n  config.customDebugFile = helper.normalizeWinPath(config.customDebugFile);\n  config.customClientContextFile = helper.normalizeWinPath(config.customClientContextFile); // normalize urlRoot\n\n  config.urlRoot = normalizeUrlRoot(config.urlRoot); // normalize and default upstream proxy settings if given\n\n  if (config.upstreamProxy) {\n    const proxy = config.upstreamProxy;\n    proxy.path = helper.isDefined(proxy.path) ? normalizeProxyPath(proxy.path) : '/';\n    proxy.hostname = helper.isDefined(proxy.hostname) ? proxy.hostname : 'localhost';\n    proxy.port = helper.isDefined(proxy.port) ? proxy.port : 9875; // force protocol to end with ':'\n\n    proxy.protocol = (proxy.protocol || 'http').split(':')[0] + ':';\n\n    if (proxy.protocol.match(/https?:/) === null) {\n      log.warn(`\"${proxy.protocol}\" is not a supported upstream proxy protocol, defaulting to \"http:\"`);\n      proxy.protocol = 'http:';\n    }\n  } // force protocol to end with ':'\n\n\n  config.protocol = (config.protocol || 'http').split(':')[0] + ':';\n\n  if (config.protocol.match(/https?:/) === null) {\n    log.warn(`\"${config.protocol}\" is not a supported protocol, defaulting to \"http:\"`);\n    config.protocol = 'http:';\n  }\n\n  if (config.proxies && Object.prototype.hasOwnProperty.call(config.proxies, config.urlRoot)) {\n    log.warn(`\"${config.urlRoot}\" is proxied, you should probably change urlRoot to avoid conflicts`);\n  }\n\n  if (config.singleRun && config.autoWatch) {\n    log.debug('autoWatch set to false, because of singleRun');\n    config.autoWatch = false;\n  }\n\n  if (config.runInParent) {\n    log.debug('useIframe set to false, because using runInParent');\n    config.useIframe = false;\n  }\n\n  if (!config.singleRun && !config.useIframe && config.runInParent) {\n    log.debug('singleRun set to true, because using runInParent');\n    config.singleRun = true;\n  }\n\n  if (helper.isString(config.reporters)) {\n    config.reporters = config.reporters.split(',');\n  }\n\n  if (config.client && config.client.args) {\n    assert(Array.isArray(config.client.args), 'Invalid configuration: client.args must be an array of strings');\n  }\n\n  if (config.browsers) {\n    assert(Array.isArray(config.browsers), 'Invalid configuration: browsers option must be an array');\n  }\n\n  if (config.formatError) {\n    assert(helper.isFunction(config.formatError), 'Invalid configuration: formatError option must be a function.');\n  }\n\n  if (config.processKillTimeout) {\n    assert(helper.isNumber(config.processKillTimeout), 'Invalid configuration: processKillTimeout option must be a number.');\n  }\n\n  if (config.browserSocketTimeout) {\n    assert(helper.isNumber(config.browserSocketTimeout), 'Invalid configuration: browserSocketTimeout option must be a number.');\n  }\n\n  if (config.pingTimeout) {\n    assert(helper.isNumber(config.pingTimeout), 'Invalid configuration: pingTimeout option must be a number.');\n  }\n\n  const defaultClient = config.defaultClient || {};\n  Object.keys(defaultClient).forEach(function (key) {\n    const option = config.client[key];\n    config.client[key] = helper.isDefined(option) ? option : defaultClient[key];\n  }); // normalize preprocessors\n\n  const preprocessors = config.preprocessors || {};\n  const normalizedPreprocessors = config.preprocessors = Object.create(null);\n  Object.keys(preprocessors).forEach(function (pattern) {\n    const normalizedPattern = helper.normalizeWinPath(basePathResolve(pattern));\n    normalizedPreprocessors[normalizedPattern] = helper.isString(preprocessors[pattern]) ? [preprocessors[pattern]] : preprocessors[pattern];\n  }); // define custom launchers/preprocessors/reporters - create a new plugin\n\n  const module = Object.create(null);\n  let hasSomeInlinedPlugin = false;\n  const types = ['launcher', 'preprocessor', 'reporter'];\n  types.forEach(function (type) {\n    const definitions = config[`custom${helper.ucFirst(type)}s`] || {};\n    Object.keys(definitions).forEach(function (name) {\n      const definition = definitions[name];\n\n      if (!helper.isObject(definition)) {\n        return log.warn(`Can not define ${type} ${name}. Definition has to be an object.`);\n      }\n\n      if (!helper.isString(definition.base)) {\n        return log.warn(`Can not define ${type} ${name}. Missing base ${type}.`);\n      }\n\n      const token = type + ':' + definition.base;\n      const locals = {\n        args: ['value', definition]\n      };\n      module[type + ':' + name] = ['factory', function (injector) {\n        const plugin = injector.createChild([locals], [token]).get(token);\n\n        if (type === 'launcher' && helper.isDefined(definition.displayName)) {\n          plugin.displayName = definition.displayName;\n        }\n\n        return plugin;\n      }];\n      hasSomeInlinedPlugin = true;\n    });\n  });\n\n  if (hasSomeInlinedPlugin) {\n    config.plugins.push(module);\n  }\n\n  return config;\n}\n/**\n * @class\n */\n\n\nclass Config {\n  constructor() {\n    this.LOG_DISABLE = constant.LOG_DISABLE;\n    this.LOG_ERROR = constant.LOG_ERROR;\n    this.LOG_WARN = constant.LOG_WARN;\n    this.LOG_INFO = constant.LOG_INFO;\n    this.LOG_DEBUG = constant.LOG_DEBUG; // DEFAULT CONFIG\n\n    this.frameworks = [];\n    this.protocol = 'http:';\n    this.port = constant.DEFAULT_PORT;\n    this.listenAddress = constant.DEFAULT_LISTEN_ADDR;\n    this.hostname = constant.DEFAULT_HOSTNAME;\n    this.httpsServerConfig = {};\n    this.basePath = '';\n    this.files = [];\n    this.browserConsoleLogOptions = {\n      level: 'debug',\n      format: '%b %T: %m',\n      terminal: true\n    };\n    this.customContextFile = null;\n    this.customDebugFile = null;\n    this.customClientContextFile = null;\n    this.exclude = [];\n    this.logLevel = constant.LOG_INFO;\n    this.colors = true;\n    this.autoWatch = true;\n    this.autoWatchBatchDelay = 250;\n    this.restartOnFileChange = false;\n    this.usePolling = process.platform === 'linux';\n    this.reporters = ['progress'];\n    this.singleRun = false;\n    this.browsers = [];\n    this.captureTimeout = 60000;\n    this.pingTimeout = 5000;\n    this.proxies = {};\n    this.proxyValidateSSL = true;\n    this.preprocessors = {};\n    this.preprocessor_priority = {};\n    this.urlRoot = '/';\n    this.upstreamProxy = undefined;\n    this.reportSlowerThan = 0;\n    this.loggers = [constant.CONSOLE_APPENDER];\n    this.transports = ['polling', 'websocket'];\n    this.forceJSONP = false;\n    this.plugins = ['karma-*'];\n    this.defaultClient = this.client = {\n      args: [],\n      useIframe: true,\n      runInParent: false,\n      captureConsole: true,\n      clearContext: true,\n      allowedReturnUrlPatterns: ['^https?://']\n    };\n    this.browserDisconnectTimeout = 2000;\n    this.browserDisconnectTolerance = 0;\n    this.browserNoActivityTimeout = 30000;\n    this.processKillTimeout = 2000;\n    this.concurrency = Infinity;\n    this.failOnEmptyTestSuite = true;\n    this.retryLimit = 2;\n    this.detached = false;\n    this.crossOriginAttribute = true;\n    this.browserSocketTimeout = 20000;\n  }\n\n  set(newConfig) {\n    _.mergeWith(this, newConfig, (obj, src) => {\n      // Overwrite arrays to keep consistent with #283\n      if (Array.isArray(src)) {\n        return src;\n      }\n    });\n  }\n\n}\n\nconst CONFIG_SYNTAX_HELP = '  module.exports = function(config) {\\n' + '    config.set({\\n' + '      // your config\\n' + '    });\\n' + '  };\\n';\n/**\n * Retrieve a parsed and finalized Karma `Config` instance. This `karmaConfig`\n * object may be used to configure public API methods such a `Server`,\n * `runner.run`, and `stopper.stop`.\n *\n * @param {?string} [configFilePath=null]\n *     A string representing a file system path pointing to the config file\n *     whose default export is a function that will be used to set Karma\n *     configuration options. This function will be passed an instance of the\n *     `Config` class as its first argument. If this option is not provided,\n *     then only the options provided by the `cliOptions` argument will be\n *     set.\n * @param {Object} cliOptions\n *     An object whose values will take priority over options set in the\n *     config file. The config object passed to function exported by the\n *     config file will already have these options applied. Any changes the\n *     config file makes to these options will effectively be ignored in the\n *     final configuration.\n *\n *     `cliOptions` all the same options as the config file and is applied\n *     using the same `config.set()` method.\n * @param {Object} parseOptions\n * @param {boolean} [parseOptions.promiseConfig=false]\n *     When `true`, a promise that resolves to a `Config` object will be\n *     returned. This also allows the function exported by config files (if\n *     provided) to be asynchronous by returning a promise. Resolving this\n *     promise indicates that all async activity has completed. The resolution\n *     value itself is ignored, all configuration must be done with\n *     `config.set`.\n * @param {boolean} [parseOptions.throwErrors=false]\n *     When `true`, process exiting on critical failures will be disabled. In\n *     The error will be thrown as an exception. If\n *     `parseOptions.promiseConfig` is also `true`, then the error will\n *     instead be used as the promise's reject reason.\n * @returns {Config|Promise<Config>}\n */\n\nfunction parseConfig(configFilePath, cliOptions, parseOptions) {\n  const promiseConfig = parseOptions && parseOptions.promiseConfig === true;\n  const throwErrors = parseOptions && parseOptions.throwErrors === true;\n  const shouldSetupLoggerEarly = promiseConfig;\n\n  if (shouldSetupLoggerEarly) {\n    // `setupFromConfig` provides defaults for `colors` and `logLevel`.\n    // `setup` provides defaults for `appenders`\n    // The first argument MUST BE an object\n    logger.setupFromConfig({});\n  }\n\n  function fail() {\n    log.error(...arguments);\n\n    if (throwErrors) {\n      const errorMessage = Array.from(arguments).join(' ');\n      const err = new Error(errorMessage);\n\n      if (promiseConfig) {\n        return Promise.reject(err);\n      }\n\n      throw err;\n    } else {\n      const warningMessage = 'The `parseConfig()` function historically called `process.exit(1)`' + ' when it failed. This behavior is now deprecated and function will' + ' throw an error in the next major release. To suppress this warning' + ' pass `throwErrors: true` as a third argument to opt-in into the new' + ' behavior and adjust your code to respond to the exception' + ' accordingly.' + ' Example: `parseConfig(path, cliOptions, { throwErrors: true })`';\n      log.warn(warningMessage);\n      process.exit(1);\n    }\n  }\n\n  let configModule;\n\n  if (configFilePath) {\n    try {\n      if (path.extname(configFilePath) === '.ts' && TYPE_SCRIPT_AVAILABLE) {\n        require('ts-node').register();\n      }\n\n      configModule = require(configFilePath);\n\n      if (typeof configModule === 'object' && typeof configModule.default !== 'undefined') {\n        configModule = configModule.default;\n      }\n    } catch (e) {\n      const extension = path.extname(configFilePath);\n\n      if (extension === '.coffee' && !COFFEE_SCRIPT_AVAILABLE) {\n        log.error('You need to install CoffeeScript.\\n  npm install coffeescript --save-dev');\n      } else if (extension === '.ls' && !LIVE_SCRIPT_AVAILABLE) {\n        log.error('You need to install LiveScript.\\n  npm install LiveScript --save-dev');\n      } else if (extension === '.ts' && !TYPE_SCRIPT_AVAILABLE) {\n        log.error('You need to install TypeScript.\\n  npm install typescript ts-node --save-dev');\n      }\n\n      return fail('Error in config file!\\n  ' + e.stack || e);\n    }\n\n    if (!helper.isFunction(configModule)) {\n      return fail('Config file must export a function!\\n' + CONFIG_SYNTAX_HELP);\n    }\n  } else {\n    configModule = () => {}; // if no config file path is passed, we define a dummy config module.\n\n  }\n\n  const config = new Config(); // save and reset hostname and listenAddress so we can detect if the user\n  // changed them\n\n  const defaultHostname = config.hostname;\n  config.hostname = null;\n  const defaultListenAddress = config.listenAddress;\n  config.listenAddress = null; // add the user's configuration in\n\n  config.set(cliOptions);\n  let configModuleReturn;\n\n  try {\n    configModuleReturn = configModule(config);\n  } catch (e) {\n    return fail('Error in config file!\\n', e);\n  }\n\n  function finalizeConfig(config) {\n    // merge the config from config file and cliOptions (precedence)\n    config.set(cliOptions); // if the user changed listenAddress, but didn't set a hostname, warn them\n\n    if (config.hostname === null && config.listenAddress !== null) {\n      log.warn(`ListenAddress was set to ${config.listenAddress} but hostname was left as the default: ` + `${defaultHostname}. If your browsers fail to connect, consider changing the hostname option.`);\n    } // restore values that weren't overwritten by the user\n\n\n    if (config.hostname === null) {\n      config.hostname = defaultHostname;\n    }\n\n    if (config.listenAddress === null) {\n      config.listenAddress = defaultListenAddress;\n    } // configure the logger as soon as we can\n\n\n    logger.setup(config.logLevel, config.colors, config.loggers);\n    log.debug(configFilePath ? `Loading config ${configFilePath}` : 'No config file specified.');\n    return normalizeConfig(config, configFilePath);\n  }\n  /**\n   * Return value is a function or (non-null) object that has a `then` method.\n   *\n   * @type {boolean}\n   * @see {@link https://promisesaplus.com/}\n   */\n\n\n  const returnIsThenable = (configModuleReturn != null && typeof configModuleReturn === 'object' || typeof configModuleReturn === 'function') && typeof configModuleReturn.then === 'function';\n\n  if (returnIsThenable) {\n    if (promiseConfig !== true) {\n      const errorMessage = 'The `parseOptions.promiseConfig` option must be set to `true` to ' + 'enable promise return values from configuration files. ' + 'Example: `parseConfig(path, cliOptions, { promiseConfig: true })`';\n      return fail(errorMessage);\n    }\n\n    return configModuleReturn.then(function\n      /* ignoredResolutionValue */\n    onKarmaConfigModuleFulfilled() {\n      return finalizeConfig(config);\n    }, function onKarmaConfigModuleRejected(reason) {\n      return fail('Error in config file!\\n', reason);\n    });\n  } else {\n    if (promiseConfig) {\n      try {\n        return Promise.resolve(finalizeConfig(config));\n      } catch (exception) {\n        return Promise.reject(exception);\n      }\n    } else {\n      return finalizeConfig(config);\n    }\n  }\n} // PUBLIC API\n\n\nexports.parseConfig = parseConfig;\nexports.Pattern = Pattern;\nexports.createPatternObject = createPatternObject;\nexports.Config = Config;","map":{"version":3,"names":["path","require","assert","logger","log","create","helper","constant","_","COFFEE_SCRIPT_AVAILABLE","LIVE_SCRIPT_AVAILABLE","TYPE_SCRIPT_AVAILABLE","register","Pattern","constructor","pattern","served","included","watched","nocache","type","isBinary","integrity","isDefined","weight","mmPatternWeight","compare","other","mmComparePatternWeights","UrlPattern","url","undefined","createPatternObject","isString","isUrlAbsolute","isObject","warn","normalizeUrl","startsWith","endsWith","normalizeUrlRoot","urlRoot","normalizedUrlRoot","normalizeProxyPath","proxyPath","normalizedProxyPath","normalizeConfig","config","configFilePath","basePathResolve","relativePath","basePath","resolve","createPatternMapper","objectPattern","Object","assign","dirname","exclude","push","files","map","customContextFile","customDebugFile","customClientContextFile","normalizeWinPath","upstreamProxy","proxy","hostname","port","protocol","split","match","proxies","prototype","hasOwnProperty","call","singleRun","autoWatch","debug","runInParent","useIframe","reporters","client","args","Array","isArray","browsers","formatError","isFunction","processKillTimeout","isNumber","browserSocketTimeout","pingTimeout","defaultClient","keys","forEach","key","option","preprocessors","normalizedPreprocessors","normalizedPattern","module","hasSomeInlinedPlugin","types","definitions","ucFirst","name","definition","base","token","locals","injector","plugin","createChild","get","displayName","plugins","Config","LOG_DISABLE","LOG_ERROR","LOG_WARN","LOG_INFO","LOG_DEBUG","frameworks","DEFAULT_PORT","listenAddress","DEFAULT_LISTEN_ADDR","DEFAULT_HOSTNAME","httpsServerConfig","browserConsoleLogOptions","level","format","terminal","logLevel","colors","autoWatchBatchDelay","restartOnFileChange","usePolling","process","platform","captureTimeout","proxyValidateSSL","preprocessor_priority","reportSlowerThan","loggers","CONSOLE_APPENDER","transports","forceJSONP","captureConsole","clearContext","allowedReturnUrlPatterns","browserDisconnectTimeout","browserDisconnectTolerance","browserNoActivityTimeout","concurrency","Infinity","failOnEmptyTestSuite","retryLimit","detached","crossOriginAttribute","set","newConfig","mergeWith","obj","src","CONFIG_SYNTAX_HELP","parseConfig","cliOptions","parseOptions","promiseConfig","throwErrors","shouldSetupLoggerEarly","setupFromConfig","fail","error","arguments","errorMessage","from","join","err","Error","Promise","reject","warningMessage","exit","configModule","extname","default","e","extension","stack","defaultHostname","defaultListenAddress","configModuleReturn","finalizeConfig","setup","returnIsThenable","then","onKarmaConfigModuleFulfilled","onKarmaConfigModuleRejected","reason","exception","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/config.js"],"sourcesContent":["'use strict'\n\nconst path = require('path')\nconst assert = require('assert')\n\nconst logger = require('./logger')\nconst log = logger.create('config')\nconst helper = require('./helper')\nconst constant = require('./constants')\n\nconst _ = require('lodash')\n\nlet COFFEE_SCRIPT_AVAILABLE = false\nlet LIVE_SCRIPT_AVAILABLE = false\nlet TYPE_SCRIPT_AVAILABLE = false\n\ntry {\n  require('coffeescript').register()\n  COFFEE_SCRIPT_AVAILABLE = true\n} catch {}\n\n// LiveScript is required here to enable config files written in LiveScript.\n// It's not directly used in this file.\ntry {\n  require('LiveScript')\n  LIVE_SCRIPT_AVAILABLE = true\n} catch {}\n\ntry {\n  require('ts-node')\n  TYPE_SCRIPT_AVAILABLE = true\n} catch {}\n\nclass Pattern {\n  constructor (pattern, served, included, watched, nocache, type, isBinary, integrity) {\n    this.pattern = pattern\n    this.served = helper.isDefined(served) ? served : true\n    this.included = helper.isDefined(included) ? included : true\n    this.watched = helper.isDefined(watched) ? watched : true\n    this.nocache = helper.isDefined(nocache) ? nocache : false\n    this.weight = helper.mmPatternWeight(pattern)\n    this.type = type\n    this.isBinary = isBinary\n    this.integrity = integrity\n  }\n\n  compare (other) {\n    return helper.mmComparePatternWeights(this.weight, other.weight)\n  }\n}\n\nclass UrlPattern extends Pattern {\n  constructor (url, type, integrity) {\n    super(url, false, true, false, false, type, undefined, integrity)\n  }\n}\n\nfunction createPatternObject (pattern) {\n  if (pattern && helper.isString(pattern)) {\n    return helper.isUrlAbsolute(pattern)\n      ? new UrlPattern(pattern)\n      : new Pattern(pattern)\n  } else if (helper.isObject(pattern) && pattern.pattern && helper.isString(pattern.pattern)) {\n    return helper.isUrlAbsolute(pattern.pattern)\n      ? new UrlPattern(pattern.pattern, pattern.type, pattern.integrity)\n      : new Pattern(pattern.pattern, pattern.served, pattern.included, pattern.watched, pattern.nocache, pattern.type)\n  } else {\n    log.warn(`Invalid pattern ${pattern}!\\n\\tExpected string or object with \"pattern\" property.`)\n    return new Pattern(null, false, false, false, false)\n  }\n}\n\nfunction normalizeUrl (url) {\n  if (!url.startsWith('/')) {\n    url = `/${url}`\n  }\n\n  if (!url.endsWith('/')) {\n    url = url + '/'\n  }\n\n  return url\n}\n\nfunction normalizeUrlRoot (urlRoot) {\n  const normalizedUrlRoot = normalizeUrl(urlRoot)\n\n  if (normalizedUrlRoot !== urlRoot) {\n    log.warn(`urlRoot normalized to \"${normalizedUrlRoot}\"`)\n  }\n\n  return normalizedUrlRoot\n}\n\nfunction normalizeProxyPath (proxyPath) {\n  const normalizedProxyPath = normalizeUrl(proxyPath)\n\n  if (normalizedProxyPath !== proxyPath) {\n    log.warn(`proxyPath normalized to \"${normalizedProxyPath}\"`)\n  }\n\n  return normalizedProxyPath\n}\n\nfunction normalizeConfig (config, configFilePath) {\n  function basePathResolve (relativePath) {\n    if (helper.isUrlAbsolute(relativePath)) {\n      return relativePath\n    } else if (helper.isDefined(config.basePath) && helper.isDefined(relativePath)) {\n      return path.resolve(config.basePath, relativePath)\n    } else {\n      return ''\n    }\n  }\n\n  function createPatternMapper (resolve) {\n    return (objectPattern) => Object.assign(objectPattern, { pattern: resolve(objectPattern.pattern) })\n  }\n\n  if (helper.isString(configFilePath)) {\n    config.basePath = path.resolve(path.dirname(configFilePath), config.basePath) // resolve basePath\n    config.exclude.push(configFilePath) // always ignore the config file itself\n  } else {\n    config.basePath = path.resolve(config.basePath || '.')\n  }\n\n  config.files = config.files.map(createPatternObject).map(createPatternMapper(basePathResolve))\n  config.exclude = config.exclude.map(basePathResolve)\n  config.customContextFile = config.customContextFile && basePathResolve(config.customContextFile)\n  config.customDebugFile = config.customDebugFile && basePathResolve(config.customDebugFile)\n  config.customClientContextFile = config.customClientContextFile && basePathResolve(config.customClientContextFile)\n\n  // normalize paths on windows\n  config.basePath = helper.normalizeWinPath(config.basePath)\n  config.files = config.files.map(createPatternMapper(helper.normalizeWinPath))\n  config.exclude = config.exclude.map(helper.normalizeWinPath)\n  config.customContextFile = helper.normalizeWinPath(config.customContextFile)\n  config.customDebugFile = helper.normalizeWinPath(config.customDebugFile)\n  config.customClientContextFile = helper.normalizeWinPath(config.customClientContextFile)\n\n  // normalize urlRoot\n  config.urlRoot = normalizeUrlRoot(config.urlRoot)\n\n  // normalize and default upstream proxy settings if given\n  if (config.upstreamProxy) {\n    const proxy = config.upstreamProxy\n    proxy.path = helper.isDefined(proxy.path) ? normalizeProxyPath(proxy.path) : '/'\n    proxy.hostname = helper.isDefined(proxy.hostname) ? proxy.hostname : 'localhost'\n    proxy.port = helper.isDefined(proxy.port) ? proxy.port : 9875\n\n    // force protocol to end with ':'\n    proxy.protocol = (proxy.protocol || 'http').split(':')[0] + ':'\n    if (proxy.protocol.match(/https?:/) === null) {\n      log.warn(`\"${proxy.protocol}\" is not a supported upstream proxy protocol, defaulting to \"http:\"`)\n      proxy.protocol = 'http:'\n    }\n  }\n\n  // force protocol to end with ':'\n  config.protocol = (config.protocol || 'http').split(':')[0] + ':'\n  if (config.protocol.match(/https?:/) === null) {\n    log.warn(`\"${config.protocol}\" is not a supported protocol, defaulting to \"http:\"`)\n    config.protocol = 'http:'\n  }\n\n  if (config.proxies && Object.prototype.hasOwnProperty.call(config.proxies, config.urlRoot)) {\n    log.warn(`\"${config.urlRoot}\" is proxied, you should probably change urlRoot to avoid conflicts`)\n  }\n\n  if (config.singleRun && config.autoWatch) {\n    log.debug('autoWatch set to false, because of singleRun')\n    config.autoWatch = false\n  }\n\n  if (config.runInParent) {\n    log.debug('useIframe set to false, because using runInParent')\n    config.useIframe = false\n  }\n\n  if (!config.singleRun && !config.useIframe && config.runInParent) {\n    log.debug('singleRun set to true, because using runInParent')\n    config.singleRun = true\n  }\n\n  if (helper.isString(config.reporters)) {\n    config.reporters = config.reporters.split(',')\n  }\n\n  if (config.client && config.client.args) {\n    assert(Array.isArray(config.client.args), 'Invalid configuration: client.args must be an array of strings')\n  }\n\n  if (config.browsers) {\n    assert(Array.isArray(config.browsers), 'Invalid configuration: browsers option must be an array')\n  }\n\n  if (config.formatError) {\n    assert(helper.isFunction(config.formatError), 'Invalid configuration: formatError option must be a function.')\n  }\n\n  if (config.processKillTimeout) {\n    assert(helper.isNumber(config.processKillTimeout), 'Invalid configuration: processKillTimeout option must be a number.')\n  }\n\n  if (config.browserSocketTimeout) {\n    assert(helper.isNumber(config.browserSocketTimeout), 'Invalid configuration: browserSocketTimeout option must be a number.')\n  }\n\n  if (config.pingTimeout) {\n    assert(helper.isNumber(config.pingTimeout), 'Invalid configuration: pingTimeout option must be a number.')\n  }\n\n  const defaultClient = config.defaultClient || {}\n  Object.keys(defaultClient).forEach(function (key) {\n    const option = config.client[key]\n    config.client[key] = helper.isDefined(option) ? option : defaultClient[key]\n  })\n\n  // normalize preprocessors\n  const preprocessors = config.preprocessors || {}\n  const normalizedPreprocessors = config.preprocessors = Object.create(null)\n\n  Object.keys(preprocessors).forEach(function (pattern) {\n    const normalizedPattern = helper.normalizeWinPath(basePathResolve(pattern))\n\n    normalizedPreprocessors[normalizedPattern] = helper.isString(preprocessors[pattern])\n      ? [preprocessors[pattern]] : preprocessors[pattern]\n  })\n\n  // define custom launchers/preprocessors/reporters - create a new plugin\n  const module = Object.create(null)\n  let hasSomeInlinedPlugin = false\n  const types = ['launcher', 'preprocessor', 'reporter']\n\n  types.forEach(function (type) {\n    const definitions = config[`custom${helper.ucFirst(type)}s`] || {}\n\n    Object.keys(definitions).forEach(function (name) {\n      const definition = definitions[name]\n\n      if (!helper.isObject(definition)) {\n        return log.warn(`Can not define ${type} ${name}. Definition has to be an object.`)\n      }\n\n      if (!helper.isString(definition.base)) {\n        return log.warn(`Can not define ${type} ${name}. Missing base ${type}.`)\n      }\n\n      const token = type + ':' + definition.base\n      const locals = {\n        args: ['value', definition]\n      }\n\n      module[type + ':' + name] = ['factory', function (injector) {\n        const plugin = injector.createChild([locals], [token]).get(token)\n        if (type === 'launcher' && helper.isDefined(definition.displayName)) {\n          plugin.displayName = definition.displayName\n        }\n        return plugin\n      }]\n      hasSomeInlinedPlugin = true\n    })\n  })\n\n  if (hasSomeInlinedPlugin) {\n    config.plugins.push(module)\n  }\n\n  return config\n}\n\n/**\n * @class\n */\nclass Config {\n  constructor () {\n    this.LOG_DISABLE = constant.LOG_DISABLE\n    this.LOG_ERROR = constant.LOG_ERROR\n    this.LOG_WARN = constant.LOG_WARN\n    this.LOG_INFO = constant.LOG_INFO\n    this.LOG_DEBUG = constant.LOG_DEBUG\n\n    // DEFAULT CONFIG\n    this.frameworks = []\n    this.protocol = 'http:'\n    this.port = constant.DEFAULT_PORT\n    this.listenAddress = constant.DEFAULT_LISTEN_ADDR\n    this.hostname = constant.DEFAULT_HOSTNAME\n    this.httpsServerConfig = {}\n    this.basePath = ''\n    this.files = []\n    this.browserConsoleLogOptions = {\n      level: 'debug',\n      format: '%b %T: %m',\n      terminal: true\n    }\n    this.customContextFile = null\n    this.customDebugFile = null\n    this.customClientContextFile = null\n    this.exclude = []\n    this.logLevel = constant.LOG_INFO\n    this.colors = true\n    this.autoWatch = true\n    this.autoWatchBatchDelay = 250\n    this.restartOnFileChange = false\n    this.usePolling = process.platform === 'linux'\n    this.reporters = ['progress']\n    this.singleRun = false\n    this.browsers = []\n    this.captureTimeout = 60000\n    this.pingTimeout = 5000\n    this.proxies = {}\n    this.proxyValidateSSL = true\n    this.preprocessors = {}\n    this.preprocessor_priority = {}\n    this.urlRoot = '/'\n    this.upstreamProxy = undefined\n    this.reportSlowerThan = 0\n    this.loggers = [constant.CONSOLE_APPENDER]\n    this.transports = ['polling', 'websocket']\n    this.forceJSONP = false\n    this.plugins = ['karma-*']\n    this.defaultClient = this.client = {\n      args: [],\n      useIframe: true,\n      runInParent: false,\n      captureConsole: true,\n      clearContext: true,\n      allowedReturnUrlPatterns: ['^https?://']\n    }\n    this.browserDisconnectTimeout = 2000\n    this.browserDisconnectTolerance = 0\n    this.browserNoActivityTimeout = 30000\n    this.processKillTimeout = 2000\n    this.concurrency = Infinity\n    this.failOnEmptyTestSuite = true\n    this.retryLimit = 2\n    this.detached = false\n    this.crossOriginAttribute = true\n    this.browserSocketTimeout = 20000\n  }\n\n  set (newConfig) {\n    _.mergeWith(this, newConfig, (obj, src) => {\n      // Overwrite arrays to keep consistent with #283\n      if (Array.isArray(src)) {\n        return src\n      }\n    })\n  }\n}\n\nconst CONFIG_SYNTAX_HELP = '  module.exports = function(config) {\\n' +\n  '    config.set({\\n' +\n  '      // your config\\n' +\n  '    });\\n' +\n  '  };\\n'\n\n/**\n * Retrieve a parsed and finalized Karma `Config` instance. This `karmaConfig`\n * object may be used to configure public API methods such a `Server`,\n * `runner.run`, and `stopper.stop`.\n *\n * @param {?string} [configFilePath=null]\n *     A string representing a file system path pointing to the config file\n *     whose default export is a function that will be used to set Karma\n *     configuration options. This function will be passed an instance of the\n *     `Config` class as its first argument. If this option is not provided,\n *     then only the options provided by the `cliOptions` argument will be\n *     set.\n * @param {Object} cliOptions\n *     An object whose values will take priority over options set in the\n *     config file. The config object passed to function exported by the\n *     config file will already have these options applied. Any changes the\n *     config file makes to these options will effectively be ignored in the\n *     final configuration.\n *\n *     `cliOptions` all the same options as the config file and is applied\n *     using the same `config.set()` method.\n * @param {Object} parseOptions\n * @param {boolean} [parseOptions.promiseConfig=false]\n *     When `true`, a promise that resolves to a `Config` object will be\n *     returned. This also allows the function exported by config files (if\n *     provided) to be asynchronous by returning a promise. Resolving this\n *     promise indicates that all async activity has completed. The resolution\n *     value itself is ignored, all configuration must be done with\n *     `config.set`.\n * @param {boolean} [parseOptions.throwErrors=false]\n *     When `true`, process exiting on critical failures will be disabled. In\n *     The error will be thrown as an exception. If\n *     `parseOptions.promiseConfig` is also `true`, then the error will\n *     instead be used as the promise's reject reason.\n * @returns {Config|Promise<Config>}\n */\nfunction parseConfig (configFilePath, cliOptions, parseOptions) {\n  const promiseConfig = parseOptions && parseOptions.promiseConfig === true\n  const throwErrors = parseOptions && parseOptions.throwErrors === true\n  const shouldSetupLoggerEarly = promiseConfig\n  if (shouldSetupLoggerEarly) {\n    // `setupFromConfig` provides defaults for `colors` and `logLevel`.\n    // `setup` provides defaults for `appenders`\n    // The first argument MUST BE an object\n    logger.setupFromConfig({})\n  }\n  function fail () {\n    log.error(...arguments)\n    if (throwErrors) {\n      const errorMessage = Array.from(arguments).join(' ')\n      const err = new Error(errorMessage)\n      if (promiseConfig) {\n        return Promise.reject(err)\n      }\n      throw err\n    } else {\n      const warningMessage =\n        'The `parseConfig()` function historically called `process.exit(1)`' +\n        ' when it failed. This behavior is now deprecated and function will' +\n        ' throw an error in the next major release. To suppress this warning' +\n        ' pass `throwErrors: true` as a third argument to opt-in into the new' +\n        ' behavior and adjust your code to respond to the exception' +\n        ' accordingly.' +\n        ' Example: `parseConfig(path, cliOptions, { throwErrors: true })`'\n      log.warn(warningMessage)\n      process.exit(1)\n    }\n  }\n\n  let configModule\n  if (configFilePath) {\n    try {\n      if (path.extname(configFilePath) === '.ts' && TYPE_SCRIPT_AVAILABLE) {\n        require('ts-node').register()\n      }\n      configModule = require(configFilePath)\n      if (typeof configModule === 'object' && typeof configModule.default !== 'undefined') {\n        configModule = configModule.default\n      }\n    } catch (e) {\n      const extension = path.extname(configFilePath)\n      if (extension === '.coffee' && !COFFEE_SCRIPT_AVAILABLE) {\n        log.error('You need to install CoffeeScript.\\n  npm install coffeescript --save-dev')\n      } else if (extension === '.ls' && !LIVE_SCRIPT_AVAILABLE) {\n        log.error('You need to install LiveScript.\\n  npm install LiveScript --save-dev')\n      } else if (extension === '.ts' && !TYPE_SCRIPT_AVAILABLE) {\n        log.error('You need to install TypeScript.\\n  npm install typescript ts-node --save-dev')\n      }\n      return fail('Error in config file!\\n  ' + e.stack || e)\n    }\n    if (!helper.isFunction(configModule)) {\n      return fail('Config file must export a function!\\n' + CONFIG_SYNTAX_HELP)\n    }\n  } else {\n    configModule = () => {} // if no config file path is passed, we define a dummy config module.\n  }\n\n  const config = new Config()\n\n  // save and reset hostname and listenAddress so we can detect if the user\n  // changed them\n  const defaultHostname = config.hostname\n  config.hostname = null\n  const defaultListenAddress = config.listenAddress\n  config.listenAddress = null\n\n  // add the user's configuration in\n  config.set(cliOptions)\n\n  let configModuleReturn\n  try {\n    configModuleReturn = configModule(config)\n  } catch (e) {\n    return fail('Error in config file!\\n', e)\n  }\n  function finalizeConfig (config) {\n    // merge the config from config file and cliOptions (precedence)\n    config.set(cliOptions)\n\n    // if the user changed listenAddress, but didn't set a hostname, warn them\n    if (config.hostname === null && config.listenAddress !== null) {\n      log.warn(`ListenAddress was set to ${config.listenAddress} but hostname was left as the default: ` +\n      `${defaultHostname}. If your browsers fail to connect, consider changing the hostname option.`)\n    }\n    // restore values that weren't overwritten by the user\n    if (config.hostname === null) {\n      config.hostname = defaultHostname\n    }\n    if (config.listenAddress === null) {\n      config.listenAddress = defaultListenAddress\n    }\n\n    // configure the logger as soon as we can\n    logger.setup(config.logLevel, config.colors, config.loggers)\n\n    log.debug(configFilePath ? `Loading config ${configFilePath}` : 'No config file specified.')\n\n    return normalizeConfig(config, configFilePath)\n  }\n\n  /**\n   * Return value is a function or (non-null) object that has a `then` method.\n   *\n   * @type {boolean}\n   * @see {@link https://promisesaplus.com/}\n   */\n  const returnIsThenable = (\n    (\n      (configModuleReturn != null && typeof configModuleReturn === 'object') ||\n      typeof configModuleReturn === 'function'\n    ) && typeof configModuleReturn.then === 'function'\n  )\n  if (returnIsThenable) {\n    if (promiseConfig !== true) {\n      const errorMessage =\n        'The `parseOptions.promiseConfig` option must be set to `true` to ' +\n        'enable promise return values from configuration files. ' +\n        'Example: `parseConfig(path, cliOptions, { promiseConfig: true })`'\n      return fail(errorMessage)\n    }\n    return configModuleReturn.then(\n      function onKarmaConfigModuleFulfilled (/* ignoredResolutionValue */) {\n        return finalizeConfig(config)\n      },\n      function onKarmaConfigModuleRejected (reason) {\n        return fail('Error in config file!\\n', reason)\n      }\n    )\n  } else {\n    if (promiseConfig) {\n      try {\n        return Promise.resolve(finalizeConfig(config))\n      } catch (exception) {\n        return Promise.reject(exception)\n      }\n    } else {\n      return finalizeConfig(config)\n    }\n  }\n}\n\n// PUBLIC API\nexports.parseConfig = parseConfig\nexports.Pattern = Pattern\nexports.createPatternObject = createPatternObject\nexports.Config = Config\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}