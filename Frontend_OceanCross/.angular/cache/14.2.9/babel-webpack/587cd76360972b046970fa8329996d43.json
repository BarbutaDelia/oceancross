{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getKeywords = void 0;\n\nconst core_1 = require(\"@babel/core\");\n/**\n * The name of the Angular class metadata function created by the Angular compiler.\n */\n\n\nconst SET_CLASS_METADATA_NAME = 'ɵsetClassMetadata';\n/**\n * Provides one or more keywords that if found within the content of a source file indicate\n * that this plugin should be used with a source file.\n *\n * @returns An a string iterable containing one or more keywords.\n */\n\nfunction getKeywords() {\n  return [SET_CLASS_METADATA_NAME];\n}\n\nexports.getKeywords = getKeywords;\n/**\n * A babel plugin factory function for eliding the Angular class metadata function (`ɵsetClassMetadata`).\n *\n * @returns A babel plugin object instance.\n */\n\nfunction default_1() {\n  return {\n    visitor: {\n      CallExpression(path) {\n        var _a;\n\n        const callee = path.node.callee; // The function being called must be the metadata function name\n\n        let calleeName;\n\n        if (core_1.types.isMemberExpression(callee) && core_1.types.isIdentifier(callee.property)) {\n          calleeName = callee.property.name;\n        } else if (core_1.types.isIdentifier(callee)) {\n          calleeName = callee.name;\n        }\n\n        if (calleeName !== SET_CLASS_METADATA_NAME) {\n          return;\n        } // There must be four arguments that meet the following criteria:\n        // * First must be an identifier\n        // * Second must be an array literal\n\n\n        const callArguments = path.node.arguments;\n\n        if (callArguments.length !== 4 || !core_1.types.isIdentifier(callArguments[0]) || !core_1.types.isArrayExpression(callArguments[1])) {\n          return;\n        } // The metadata function is always emitted inside a function expression\n\n\n        if (!((_a = path.getFunctionParent()) === null || _a === void 0 ? void 0 : _a.isFunctionExpression())) {\n          return;\n        } // Replace the metadata function with `void 0` which is the equivalent return value\n        // of the metadata function.\n\n\n        path.replaceWith(path.scope.buildUndefinedNode());\n      }\n\n    }\n  };\n}\n\nexports.default = default_1;","map":{"version":3,"names":["Object","defineProperty","exports","value","getKeywords","core_1","require","SET_CLASS_METADATA_NAME","default_1","visitor","CallExpression","path","_a","callee","node","calleeName","types","isMemberExpression","isIdentifier","property","name","callArguments","arguments","length","isArrayExpression","getFunctionParent","isFunctionExpression","replaceWith","scope","buildUndefinedNode","default"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@angular-devkit/build-angular/src/babel/plugins/elide-angular-metadata.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getKeywords = void 0;\nconst core_1 = require(\"@babel/core\");\n/**\n * The name of the Angular class metadata function created by the Angular compiler.\n */\nconst SET_CLASS_METADATA_NAME = 'ɵsetClassMetadata';\n/**\n * Provides one or more keywords that if found within the content of a source file indicate\n * that this plugin should be used with a source file.\n *\n * @returns An a string iterable containing one or more keywords.\n */\nfunction getKeywords() {\n    return [SET_CLASS_METADATA_NAME];\n}\nexports.getKeywords = getKeywords;\n/**\n * A babel plugin factory function for eliding the Angular class metadata function (`ɵsetClassMetadata`).\n *\n * @returns A babel plugin object instance.\n */\nfunction default_1() {\n    return {\n        visitor: {\n            CallExpression(path) {\n                var _a;\n                const callee = path.node.callee;\n                // The function being called must be the metadata function name\n                let calleeName;\n                if (core_1.types.isMemberExpression(callee) && core_1.types.isIdentifier(callee.property)) {\n                    calleeName = callee.property.name;\n                }\n                else if (core_1.types.isIdentifier(callee)) {\n                    calleeName = callee.name;\n                }\n                if (calleeName !== SET_CLASS_METADATA_NAME) {\n                    return;\n                }\n                // There must be four arguments that meet the following criteria:\n                // * First must be an identifier\n                // * Second must be an array literal\n                const callArguments = path.node.arguments;\n                if (callArguments.length !== 4 ||\n                    !core_1.types.isIdentifier(callArguments[0]) ||\n                    !core_1.types.isArrayExpression(callArguments[1])) {\n                    return;\n                }\n                // The metadata function is always emitted inside a function expression\n                if (!((_a = path.getFunctionParent()) === null || _a === void 0 ? void 0 : _a.isFunctionExpression())) {\n                    return;\n                }\n                // Replace the metadata function with `void 0` which is the equivalent return value\n                // of the metadata function.\n                path.replaceWith(path.scope.buildUndefinedNode());\n            },\n        },\n    };\n}\nexports.default = default_1;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;AACA;AACA;AACA;;;AACA,MAAMC,uBAAuB,GAAG,mBAAhC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASH,WAAT,GAAuB;EACnB,OAAO,CAACG,uBAAD,CAAP;AACH;;AACDL,OAAO,CAACE,WAAR,GAAsBA,WAAtB;AACA;AACA;AACA;AACA;AACA;;AACA,SAASI,SAAT,GAAqB;EACjB,OAAO;IACHC,OAAO,EAAE;MACLC,cAAc,CAACC,IAAD,EAAO;QACjB,IAAIC,EAAJ;;QACA,MAAMC,MAAM,GAAGF,IAAI,CAACG,IAAL,CAAUD,MAAzB,CAFiB,CAGjB;;QACA,IAAIE,UAAJ;;QACA,IAAIV,MAAM,CAACW,KAAP,CAAaC,kBAAb,CAAgCJ,MAAhC,KAA2CR,MAAM,CAACW,KAAP,CAAaE,YAAb,CAA0BL,MAAM,CAACM,QAAjC,CAA/C,EAA2F;UACvFJ,UAAU,GAAGF,MAAM,CAACM,QAAP,CAAgBC,IAA7B;QACH,CAFD,MAGK,IAAIf,MAAM,CAACW,KAAP,CAAaE,YAAb,CAA0BL,MAA1B,CAAJ,EAAuC;UACxCE,UAAU,GAAGF,MAAM,CAACO,IAApB;QACH;;QACD,IAAIL,UAAU,KAAKR,uBAAnB,EAA4C;UACxC;QACH,CAbgB,CAcjB;QACA;QACA;;;QACA,MAAMc,aAAa,GAAGV,IAAI,CAACG,IAAL,CAAUQ,SAAhC;;QACA,IAAID,aAAa,CAACE,MAAd,KAAyB,CAAzB,IACA,CAAClB,MAAM,CAACW,KAAP,CAAaE,YAAb,CAA0BG,aAAa,CAAC,CAAD,CAAvC,CADD,IAEA,CAAChB,MAAM,CAACW,KAAP,CAAaQ,iBAAb,CAA+BH,aAAa,CAAC,CAAD,CAA5C,CAFL,EAEuD;UACnD;QACH,CAtBgB,CAuBjB;;;QACA,IAAI,EAAE,CAACT,EAAE,GAAGD,IAAI,CAACc,iBAAL,EAAN,MAAoC,IAApC,IAA4Cb,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACc,oBAAH,EAAvE,CAAJ,EAAuG;UACnG;QACH,CA1BgB,CA2BjB;QACA;;;QACAf,IAAI,CAACgB,WAAL,CAAiBhB,IAAI,CAACiB,KAAL,CAAWC,kBAAX,EAAjB;MACH;;IA/BI;EADN,CAAP;AAmCH;;AACD3B,OAAO,CAAC4B,OAAR,GAAkBtB,SAAlB"},"metadata":{},"sourceType":"script"}