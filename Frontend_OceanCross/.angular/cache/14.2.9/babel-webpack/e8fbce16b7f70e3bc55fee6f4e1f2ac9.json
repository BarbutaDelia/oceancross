{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEvaluator = createEvaluator;\nexports.getStylusImplementation = getStylusImplementation;\nexports.getStylusOptions = getStylusOptions;\nexports.normalizeSourceMap = normalizeSourceMap;\nexports.readFile = readFile;\nexports.resolveFilename = resolveFilename;\nexports.urlResolver = urlResolver;\n\nvar _url = require(\"url\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _stylus = require(\"stylus\");\n\nvar _depsResolver = _interopRequireDefault(require(\"stylus/lib/visitor/deps-resolver\"));\n\nvar _full = require(\"klona/full\");\n\nvar _fastGlob = _interopRequireDefault(require(\"fast-glob\"));\n\nvar _normalizePath = _interopRequireDefault(require(\"normalize-path\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Examples:\n// - ~package\n// - ~package/\n// - ~@org\n// - ~@org/\n// - ~@org/package\n// - ~@org/package/\n\n\nconst IS_MODULE_IMPORT = /^~([^/]+|[^/]+\\/|@[^/]+[/][^/]+|@[^/]+\\/?|@[^/]+[/][^/]+\\/)$/;\nconst MODULE_REQUEST_REGEX = /^[^?]*~/;\n\nfunction isProductionLikeMode(loaderContext) {\n  return loaderContext.mode === \"production\" || !loaderContext.mode;\n}\n\nfunction getStylusOptions(loaderContext, loaderOptions) {\n  const stylusOptions = (0, _full.klona)(typeof loaderOptions.stylusOptions === \"function\" ? loaderOptions.stylusOptions(loaderContext) || {} : loaderOptions.stylusOptions || {});\n  stylusOptions.filename = loaderContext.resourcePath;\n  stylusOptions.dest = _path.default.dirname(loaderContext.resourcePath); // Keep track of imported files (used by Stylus CLI watch mode)\n  // eslint-disable-next-line no-underscore-dangle\n\n  stylusOptions._imports = []; // https://github.com/stylus/stylus/issues/2119\n\n  stylusOptions.resolveURL = typeof stylusOptions.resolveURL === \"boolean\" && !stylusOptions.resolveURL ? false : typeof stylusOptions.resolveURL === \"object\" ? stylusOptions.resolveURL : {\n    nocheck: true\n  };\n\n  if (typeof stylusOptions.compress === \"undefined\" && isProductionLikeMode(loaderContext)) {\n    stylusOptions.compress = true;\n  }\n\n  return stylusOptions;\n}\n\nfunction getStylusImplementation(loaderContext, implementation) {\n  let resolvedImplementation = implementation;\n\n  if (!implementation || typeof implementation === \"string\") {\n    const stylusImplPkg = implementation || \"stylus\";\n\n    try {\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      resolvedImplementation = require(stylusImplPkg);\n    } catch (error) {\n      loaderContext.emitError(error); // eslint-disable-next-line consistent-return\n\n      return;\n    }\n  } // eslint-disable-next-line consistent-return\n\n\n  return resolvedImplementation;\n}\n\nfunction getPossibleRequests(loaderContext, filename) {\n  let request = filename; // A `~` makes the url an module\n\n  if (MODULE_REQUEST_REGEX.test(filename)) {\n    request = request.replace(MODULE_REQUEST_REGEX, \"\");\n  }\n\n  if (IS_MODULE_IMPORT.test(filename)) {\n    request = request[request.length - 1] === \"/\" ? request : `${request}/`;\n  }\n\n  return [...new Set([request, filename])];\n}\n\nfunction resolveFilename(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _resolveFilename.apply(this, arguments);\n}\n\nfunction _resolveFilename() {\n  _resolveFilename = _asyncToGenerator(function* (loaderContext, fileResolver, globResolver, isGlob, context, filename) {\n    const possibleRequests = getPossibleRequests(loaderContext, filename);\n    let result;\n\n    try {\n      result = yield resolveRequests(context, possibleRequests, fileResolver);\n    } catch (error) {\n      if (isGlob) {\n        const [globTask] = _fastGlob.default.generateTasks(filename);\n\n        if (globTask.base === \".\") {\n          throw new Error('Glob resolving without a glob base (\"~**/*\") is not supported, please specify a glob base (\"~package/**/*\")');\n        }\n\n        const possibleGlobRequests = getPossibleRequests(loaderContext, globTask.base);\n        let globResult;\n\n        try {\n          globResult = yield resolveRequests(context, possibleGlobRequests, globResolver);\n        } catch (globError) {\n          throw globError;\n        }\n\n        loaderContext.addContextDependency(globResult);\n        const patterns = filename.replace(new RegExp(`^${globTask.base}`), (0, _normalizePath.default)(globResult));\n        const paths = yield (0, _fastGlob.default)(patterns, {\n          absolute: true,\n          cwd: globResult\n        });\n        return paths.sort().filter(file => /\\.styl$/i.test(file));\n      }\n\n      throw error;\n    }\n\n    return result;\n  });\n  return _resolveFilename.apply(this, arguments);\n}\n\nfunction resolveRequests(_x7, _x8, _x9) {\n  return _resolveRequests.apply(this, arguments);\n}\n\nfunction _resolveRequests() {\n  _resolveRequests = _asyncToGenerator(function* (context, possibleRequests, resolve) {\n    if (possibleRequests.length === 0) {\n      return Promise.reject();\n    }\n\n    let result;\n\n    try {\n      result = yield resolve(context, possibleRequests[0]);\n    } catch (error) {\n      const [, ...tailPossibleRequests] = possibleRequests;\n\n      if (tailPossibleRequests.length === 0) {\n        throw error;\n      }\n\n      result = yield resolveRequests(context, tailPossibleRequests, resolve);\n    }\n\n    return result;\n  });\n  return _resolveRequests.apply(this, arguments);\n}\n\nconst URL_RE = /^(?:url\\s*\\(\\s*)?['\"]?(?:[#/]|(?:https?:)?\\/\\/)/i;\n\nfunction getDependencies(_x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17) {\n  return _getDependencies.apply(this, arguments);\n}\n\nfunction _getDependencies() {\n  _getDependencies = _asyncToGenerator(function* (resolvedDependencies, loaderContext, fileResolver, globResolver, seen, code, filename, options) {\n    seen.add(filename); // See https://github.com/stylus/stylus/issues/2108\n\n    const newOptions = (0, _full.klona)({ ...options,\n      filename,\n      cache: false\n    });\n    const parser = new _stylus.Parser(code, newOptions);\n    let ast;\n\n    try {\n      ast = parser.parse();\n    } catch (error) {\n      loaderContext.emitError(error);\n      return;\n    }\n\n    const dependencies = [];\n\n    class ImportVisitor extends _depsResolver.default {\n      // eslint-disable-next-line class-methods-use-this\n      visitImport(node) {\n        let firstNode = node.path.first;\n\n        if (firstNode.name === \"url\") {\n          return;\n        }\n\n        if (!firstNode.val) {\n          const evaluator = new _stylus.Evaluator(ast);\n          firstNode = evaluator.visit.call(evaluator, firstNode).first;\n        }\n\n        const originalNodePath = !firstNode.val.isNull && firstNode.val || firstNode.name;\n        let nodePath = originalNodePath;\n\n        if (!nodePath) {\n          return;\n        }\n\n        let found;\n        let oldNodePath;\n        const literal = /\\.css(?:\"|$)/.test(nodePath);\n\n        if (!literal && !/\\.styl$/i.test(nodePath)) {\n          oldNodePath = nodePath;\n          nodePath += \".styl\";\n        }\n\n        const isGlob = _fastGlob.default.isDynamicPattern(nodePath);\n\n        found = _stylus.utils.find(nodePath, this.paths, this.filename);\n\n        if (found && isGlob) {\n          const [globTask] = _fastGlob.default.generateTasks(nodePath);\n\n          const context = globTask.base === \".\" ? _path.default.dirname(this.filename) : _path.default.join(_path.default.dirname(this.filename), globTask.base);\n          loaderContext.addContextDependency(context);\n        }\n\n        if (!found && oldNodePath) {\n          found = _stylus.utils.lookupIndex(oldNodePath, this.paths, this.filename);\n        }\n\n        if (found) {\n          dependencies.push({\n            originalLineno: firstNode.lineno,\n            originalColumn: firstNode.column,\n            originalNodePath,\n            resolved: found.map(item => _path.default.isAbsolute(item) ? item : _path.default.join(process.cwd(), item))\n          });\n          return;\n        }\n\n        dependencies.push({\n          originalLineno: firstNode.lineno,\n          originalColumn: firstNode.column,\n          originalNodePath,\n          resolved: resolveFilename(loaderContext, fileResolver, globResolver, isGlob, _path.default.dirname(this.filename), originalNodePath)\n        });\n      }\n\n    }\n\n    new ImportVisitor(ast, newOptions).visit(ast);\n    yield Promise.all(Array.from(dependencies).map( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (result) {\n        let {\n          resolved\n        } = result;\n\n        try {\n          resolved = yield resolved;\n        } catch (ignoreError) {\n          // eslint-disable-next-line no-param-reassign\n          delete result.resolved; // eslint-disable-next-line no-param-reassign\n\n          result.error = ignoreError;\n          return;\n        }\n\n        const isArray = Array.isArray(resolved); // `stylus` returns forward slashes on windows\n        // eslint-disable-next-line no-param-reassign\n\n        result.resolved = isArray ? resolved.map(item => _path.default.normalize(item)) : _path.default.normalize(resolved);\n        const dependenciesOfDependencies = [];\n\n        for (const dependency of isArray ? result.resolved : [result.resolved]) {\n          // Avoid loop, the file is imported by itself\n          if (seen.has(dependency)) {\n            return;\n          } // Avoid search nested imports in .css\n\n\n          if (_path.default.extname(dependency) === \".css\") {\n            return;\n          }\n\n          loaderContext.addDependency(dependency);\n          dependenciesOfDependencies.push(_asyncToGenerator(function* () {\n            let dependencyCode;\n\n            try {\n              dependencyCode = (yield readFile(loaderContext.fs, dependency)).toString();\n            } catch (error) {\n              loaderContext.emitError(error);\n            }\n\n            yield getDependencies(resolvedDependencies, loaderContext, fileResolver, globResolver, seen, dependencyCode, dependency, options);\n          })());\n        }\n\n        yield Promise.all(dependenciesOfDependencies);\n      });\n\n      return function (_x21) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n\n    if (dependencies.length > 0) {\n      resolvedDependencies.set(filename, dependencies);\n    }\n  });\n  return _getDependencies.apply(this, arguments);\n}\n\nfunction mergeBlocks(blocks) {\n  let finalBlock;\n\n  const adding = item => {\n    finalBlock.push(item);\n  };\n\n  for (const block of blocks) {\n    if (finalBlock) {\n      block.nodes.forEach(adding);\n    } else {\n      finalBlock = block;\n    }\n  }\n\n  return finalBlock;\n}\n\nfunction createEvaluator(_x18, _x19, _x20) {\n  return _createEvaluator.apply(this, arguments);\n}\n\nfunction _createEvaluator() {\n  _createEvaluator = _asyncToGenerator(function* (loaderContext, code, options) {\n    const fileResolve = loaderContext.getResolve({\n      dependencyType: \"stylus\",\n      conditionNames: [\"styl\", \"stylus\", \"style\"],\n      mainFields: [\"styl\", \"style\", \"stylus\", \"main\", \"...\"],\n      mainFiles: [\"index\", \"...\"],\n      extensions: [\".styl\", \".css\"],\n      restrictions: [/\\.(css|styl)$/i],\n      preferRelative: true\n    }); // Get cwd for `fastGlob()`\n    // No need extra options, because they do not used when `resolveToContext` is `true`\n\n    const globResolve = loaderContext.getResolve({\n      conditionNames: [\"styl\", \"stylus\", \"style\"],\n      resolveToContext: true,\n      preferRelative: true\n    });\n    const resolvedImportDependencies = new Map();\n    const resolvedDependencies = new Map();\n    const seen = new Set();\n    yield getDependencies(resolvedDependencies, loaderContext, fileResolve, globResolve, seen, code, loaderContext.resourcePath, options);\n    const optionsImports = [];\n\n    for (const importPath of options.imports) {\n      const isGlob = _fastGlob.default.isDynamicPattern(importPath);\n\n      optionsImports.push({\n        importPath,\n        resolved: resolveFilename(loaderContext, fileResolve, globResolve, isGlob, _path.default.dirname(loaderContext.resourcePath), importPath)\n      });\n    }\n\n    yield Promise.all(optionsImports.map( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (result) {\n        const {\n          importPath\n        } = result;\n        let {\n          resolved\n        } = result;\n\n        try {\n          resolved = yield resolved;\n        } catch (ignoreError) {\n          return;\n        }\n\n        const isArray = Array.isArray(resolved); // `stylus` returns forward slashes on windows\n        // eslint-disable-next-line no-param-reassign\n\n        result.resolved = isArray ? resolved.map(item => _path.default.normalize(item)) : _path.default.normalize(resolved);\n        resolvedImportDependencies.set(importPath, result);\n        const dependenciesOfImportDependencies = [];\n\n        for (const dependency of isArray ? result.resolved : [result.resolved]) {\n          dependenciesOfImportDependencies.push(_asyncToGenerator(function* () {\n            let dependencyCode;\n\n            try {\n              dependencyCode = (yield readFile(loaderContext.fs, dependency)).toString();\n            } catch (error) {\n              loaderContext.emitError(error);\n            }\n\n            yield getDependencies(resolvedDependencies, loaderContext, fileResolve, globResolve, seen, dependencyCode, dependency, options);\n          })());\n        }\n\n        yield Promise.all(dependenciesOfImportDependencies);\n      });\n\n      return function (_x22) {\n        return _ref3.apply(this, arguments);\n      };\n    }()));\n    return class CustomEvaluator extends _stylus.Evaluator {\n      visitImport(imported) {\n        this.return += 1;\n        const node = this.visit(imported.path).first;\n        const nodePath = !node.val.isNull && node.val || node.name;\n        this.return -= 1;\n        let webpackResolveError;\n\n        if (node.name !== \"url\" && nodePath && !URL_RE.test(nodePath)) {\n          let dependency;\n          const isEntrypoint = loaderContext.resourcePath === node.filename;\n\n          if (isEntrypoint) {\n            dependency = resolvedImportDependencies.get(nodePath);\n          }\n\n          if (!dependency) {\n            const dependencies = resolvedDependencies.get(_path.default.normalize(node.filename));\n\n            if (dependencies) {\n              dependency = dependencies.find(item => {\n                if (item.originalLineno === node.lineno && item.originalColumn === node.column && item.originalNodePath === nodePath) {\n                  if (item.error) {\n                    webpackResolveError = item.error;\n                  } else {\n                    return item.resolved;\n                  }\n                }\n\n                return false;\n              });\n            }\n          }\n\n          if (dependency) {\n            const {\n              resolved\n            } = dependency;\n\n            if (!Array.isArray(resolved)) {\n              // Avoid re globbing when resolved import contains glob characters\n              node.string = _fastGlob.default.escapePath(resolved);\n            } else if (resolved.length > 0) {\n              let hasError = false;\n              const blocks = resolved.map(item => {\n                const clonedImported = imported.clone();\n                const clonedNode = this.visit(clonedImported.path).first; // Avoid re globbing when resolved import contains glob characters\n\n                clonedNode.string = _fastGlob.default.escapePath(item);\n                let result;\n\n                try {\n                  result = super.visitImport(clonedImported);\n                } catch (error) {\n                  hasError = true;\n                }\n\n                return result;\n              });\n\n              if (!hasError) {\n                return mergeBlocks(blocks);\n              }\n            }\n          }\n        }\n\n        let result;\n\n        try {\n          result = super.visitImport(imported);\n        } catch (error) {\n          loaderContext.emitError(new Error(`Stylus resolver error: ${error.message}${webpackResolveError ? `\\n\\nWebpack resolver error: ${webpackResolveError.message}${webpackResolveError.details ? `\\n\\nWebpack resolver error details:\\n${webpackResolveError.details}` : \"\"}${webpackResolveError.missing ? `\\n\\nWebpack resolver error missing:\\n${webpackResolveError.missing.join(\"\\n\")}` : \"\"}` : \"\"}`));\n          return imported;\n        }\n\n        return result;\n      }\n\n    };\n  });\n  return _createEvaluator.apply(this, arguments);\n}\n\nfunction urlResolver(options = {}) {\n  function resolver(url) {\n    const compiler = new _stylus.Compiler(url);\n    const {\n      filename\n    } = url;\n    compiler.isURL = true;\n    const visitedUrl = url.nodes.map(node => compiler.visit(node)).join(\"\");\n    const splitted = visitedUrl.split(\"!\");\n    const parsedUrl = (0, _url.parse)(splitted.pop()); // Parse literal\n\n    const literal = new _stylus.nodes.Literal(`url(\"${parsedUrl.href}\")`);\n    let {\n      pathname\n    } = parsedUrl;\n    let {\n      dest\n    } = this.options;\n    let tail = \"\";\n    let res; // Absolute or hash\n\n    if (parsedUrl.protocol || !pathname || pathname[0] === \"/\") {\n      return literal;\n    } // Check that file exists\n\n\n    if (!options.nocheck) {\n      // eslint-disable-next-line no-underscore-dangle\n      const _paths = options.paths || [];\n\n      pathname = _stylus.utils.lookup(pathname, _paths.concat(this.paths));\n\n      if (!pathname) {\n        return literal;\n      }\n    }\n\n    if (this.includeCSS && _path.default.extname(pathname) === \".css\") {\n      return new _stylus.nodes.Literal(parsedUrl.href);\n    }\n\n    if (parsedUrl.search) {\n      tail += parsedUrl.search;\n    }\n\n    if (parsedUrl.hash) {\n      tail += parsedUrl.hash;\n    }\n\n    if (dest && _path.default.extname(dest) === \".css\") {\n      dest = _path.default.dirname(dest);\n    }\n\n    res = _path.default.relative(dest || _path.default.dirname(this.filename), options.nocheck ? _path.default.join(_path.default.dirname(filename), pathname) : pathname) + tail;\n\n    if (_path.default.sep === \"\\\\\") {\n      res = res.replace(/\\\\/g, \"/\");\n    }\n\n    splitted.push(res);\n    return new _stylus.nodes.Literal(`url(\"${splitted.join(\"!\")}\")`);\n  }\n\n  resolver.options = options;\n  resolver.raw = true;\n  return resolver;\n}\n\nfunction readFile(inputFileSystem, filepath) {\n  return new Promise((resolve, reject) => {\n    inputFileSystem.readFile(filepath, (error, stats) => {\n      if (error) {\n        reject(error);\n      }\n\n      resolve(stats);\n    });\n  });\n}\n\nconst IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i;\nconst ABSOLUTE_SCHEME = /^[A-Za-z0-9+\\-.]+:/;\n\nfunction getURLType(source) {\n  if (source[0] === \"/\") {\n    if (source[1] === \"/\") {\n      return \"scheme-relative\";\n    }\n\n    return \"path-absolute\";\n  }\n\n  if (IS_NATIVE_WIN32_PATH.test(source)) {\n    return \"path-absolute\";\n  }\n\n  return ABSOLUTE_SCHEME.test(source) ? \"absolute\" : \"path-relative\";\n}\n\nfunction normalizeSourceMap(map, rootContext) {\n  const newMap = map; // result.map.file is an optional property that provides the output filename.\n  // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n  // eslint-disable-next-line no-param-reassign\n\n  delete newMap.file; // eslint-disable-next-line no-param-reassign\n\n  newMap.sourceRoot = \"\"; // eslint-disable-next-line no-param-reassign\n\n  newMap.sources = newMap.sources.map(source => {\n    const sourceType = getURLType(source); // Do no touch `scheme-relative`, `path-absolute` and `absolute` types\n\n    if (sourceType === \"path-relative\") {\n      return _path.default.resolve(rootContext, _path.default.normalize(source));\n    }\n\n    return source;\n  });\n  return newMap;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createEvaluator","getStylusImplementation","getStylusOptions","normalizeSourceMap","readFile","resolveFilename","urlResolver","_url","require","_path","_interopRequireDefault","_stylus","_depsResolver","_full","_fastGlob","_normalizePath","obj","__esModule","default","IS_MODULE_IMPORT","MODULE_REQUEST_REGEX","isProductionLikeMode","loaderContext","mode","loaderOptions","stylusOptions","klona","filename","resourcePath","dest","dirname","_imports","resolveURL","nocheck","compress","implementation","resolvedImplementation","stylusImplPkg","error","emitError","getPossibleRequests","request","test","replace","length","Set","fileResolver","globResolver","isGlob","context","possibleRequests","result","resolveRequests","globTask","generateTasks","base","Error","possibleGlobRequests","globResult","globError","addContextDependency","patterns","RegExp","paths","absolute","cwd","sort","filter","file","resolve","Promise","reject","tailPossibleRequests","URL_RE","getDependencies","resolvedDependencies","seen","code","options","add","newOptions","cache","parser","Parser","ast","parse","dependencies","ImportVisitor","visitImport","node","firstNode","path","first","name","val","evaluator","Evaluator","visit","call","originalNodePath","isNull","nodePath","found","oldNodePath","literal","isDynamicPattern","utils","find","join","lookupIndex","push","originalLineno","lineno","originalColumn","column","resolved","map","item","isAbsolute","process","all","Array","from","ignoreError","isArray","normalize","dependenciesOfDependencies","dependency","has","extname","addDependency","dependencyCode","fs","toString","set","mergeBlocks","blocks","finalBlock","adding","block","nodes","forEach","fileResolve","getResolve","dependencyType","conditionNames","mainFields","mainFiles","extensions","restrictions","preferRelative","globResolve","resolveToContext","resolvedImportDependencies","Map","optionsImports","importPath","imports","dependenciesOfImportDependencies","CustomEvaluator","imported","return","webpackResolveError","isEntrypoint","get","string","escapePath","hasError","clonedImported","clone","clonedNode","message","details","missing","resolver","url","compiler","Compiler","isURL","visitedUrl","splitted","split","parsedUrl","pop","Literal","href","pathname","tail","res","protocol","_paths","lookup","concat","includeCSS","search","hash","relative","sep","raw","inputFileSystem","filepath","stats","IS_NATIVE_WIN32_PATH","ABSOLUTE_SCHEME","getURLType","source","rootContext","newMap","sourceRoot","sources","sourceType"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/stylus-loader/dist/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEvaluator = createEvaluator;\nexports.getStylusImplementation = getStylusImplementation;\nexports.getStylusOptions = getStylusOptions;\nexports.normalizeSourceMap = normalizeSourceMap;\nexports.readFile = readFile;\nexports.resolveFilename = resolveFilename;\nexports.urlResolver = urlResolver;\n\nvar _url = require(\"url\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _stylus = require(\"stylus\");\n\nvar _depsResolver = _interopRequireDefault(require(\"stylus/lib/visitor/deps-resolver\"));\n\nvar _full = require(\"klona/full\");\n\nvar _fastGlob = _interopRequireDefault(require(\"fast-glob\"));\n\nvar _normalizePath = _interopRequireDefault(require(\"normalize-path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Examples:\n// - ~package\n// - ~package/\n// - ~@org\n// - ~@org/\n// - ~@org/package\n// - ~@org/package/\nconst IS_MODULE_IMPORT = /^~([^/]+|[^/]+\\/|@[^/]+[/][^/]+|@[^/]+\\/?|@[^/]+[/][^/]+\\/)$/;\nconst MODULE_REQUEST_REGEX = /^[^?]*~/;\n\nfunction isProductionLikeMode(loaderContext) {\n  return loaderContext.mode === \"production\" || !loaderContext.mode;\n}\n\nfunction getStylusOptions(loaderContext, loaderOptions) {\n  const stylusOptions = (0, _full.klona)(typeof loaderOptions.stylusOptions === \"function\" ? loaderOptions.stylusOptions(loaderContext) || {} : loaderOptions.stylusOptions || {});\n  stylusOptions.filename = loaderContext.resourcePath;\n  stylusOptions.dest = _path.default.dirname(loaderContext.resourcePath); // Keep track of imported files (used by Stylus CLI watch mode)\n  // eslint-disable-next-line no-underscore-dangle\n\n  stylusOptions._imports = []; // https://github.com/stylus/stylus/issues/2119\n\n  stylusOptions.resolveURL = typeof stylusOptions.resolveURL === \"boolean\" && !stylusOptions.resolveURL ? false : typeof stylusOptions.resolveURL === \"object\" ? stylusOptions.resolveURL : {\n    nocheck: true\n  };\n\n  if (typeof stylusOptions.compress === \"undefined\" && isProductionLikeMode(loaderContext)) {\n    stylusOptions.compress = true;\n  }\n\n  return stylusOptions;\n}\n\nfunction getStylusImplementation(loaderContext, implementation) {\n  let resolvedImplementation = implementation;\n\n  if (!implementation || typeof implementation === \"string\") {\n    const stylusImplPkg = implementation || \"stylus\";\n\n    try {\n      // eslint-disable-next-line import/no-dynamic-require, global-require\n      resolvedImplementation = require(stylusImplPkg);\n    } catch (error) {\n      loaderContext.emitError(error); // eslint-disable-next-line consistent-return\n\n      return;\n    }\n  } // eslint-disable-next-line consistent-return\n\n\n  return resolvedImplementation;\n}\n\nfunction getPossibleRequests(loaderContext, filename) {\n  let request = filename; // A `~` makes the url an module\n\n  if (MODULE_REQUEST_REGEX.test(filename)) {\n    request = request.replace(MODULE_REQUEST_REGEX, \"\");\n  }\n\n  if (IS_MODULE_IMPORT.test(filename)) {\n    request = request[request.length - 1] === \"/\" ? request : `${request}/`;\n  }\n\n  return [...new Set([request, filename])];\n}\n\nasync function resolveFilename(loaderContext, fileResolver, globResolver, isGlob, context, filename) {\n  const possibleRequests = getPossibleRequests(loaderContext, filename);\n  let result;\n\n  try {\n    result = await resolveRequests(context, possibleRequests, fileResolver);\n  } catch (error) {\n    if (isGlob) {\n      const [globTask] = _fastGlob.default.generateTasks(filename);\n\n      if (globTask.base === \".\") {\n        throw new Error('Glob resolving without a glob base (\"~**/*\") is not supported, please specify a glob base (\"~package/**/*\")');\n      }\n\n      const possibleGlobRequests = getPossibleRequests(loaderContext, globTask.base);\n      let globResult;\n\n      try {\n        globResult = await resolveRequests(context, possibleGlobRequests, globResolver);\n      } catch (globError) {\n        throw globError;\n      }\n\n      loaderContext.addContextDependency(globResult);\n      const patterns = filename.replace(new RegExp(`^${globTask.base}`), (0, _normalizePath.default)(globResult));\n      const paths = await (0, _fastGlob.default)(patterns, {\n        absolute: true,\n        cwd: globResult\n      });\n      return paths.sort().filter(file => /\\.styl$/i.test(file));\n    }\n\n    throw error;\n  }\n\n  return result;\n}\n\nasync function resolveRequests(context, possibleRequests, resolve) {\n  if (possibleRequests.length === 0) {\n    return Promise.reject();\n  }\n\n  let result;\n\n  try {\n    result = await resolve(context, possibleRequests[0]);\n  } catch (error) {\n    const [, ...tailPossibleRequests] = possibleRequests;\n\n    if (tailPossibleRequests.length === 0) {\n      throw error;\n    }\n\n    result = await resolveRequests(context, tailPossibleRequests, resolve);\n  }\n\n  return result;\n}\n\nconst URL_RE = /^(?:url\\s*\\(\\s*)?['\"]?(?:[#/]|(?:https?:)?\\/\\/)/i;\n\nasync function getDependencies(resolvedDependencies, loaderContext, fileResolver, globResolver, seen, code, filename, options) {\n  seen.add(filename); // See https://github.com/stylus/stylus/issues/2108\n\n  const newOptions = (0, _full.klona)({ ...options,\n    filename,\n    cache: false\n  });\n  const parser = new _stylus.Parser(code, newOptions);\n  let ast;\n\n  try {\n    ast = parser.parse();\n  } catch (error) {\n    loaderContext.emitError(error);\n    return;\n  }\n\n  const dependencies = [];\n\n  class ImportVisitor extends _depsResolver.default {\n    // eslint-disable-next-line class-methods-use-this\n    visitImport(node) {\n      let firstNode = node.path.first;\n\n      if (firstNode.name === \"url\") {\n        return;\n      }\n\n      if (!firstNode.val) {\n        const evaluator = new _stylus.Evaluator(ast);\n        firstNode = evaluator.visit.call(evaluator, firstNode).first;\n      }\n\n      const originalNodePath = !firstNode.val.isNull && firstNode.val || firstNode.name;\n      let nodePath = originalNodePath;\n\n      if (!nodePath) {\n        return;\n      }\n\n      let found;\n      let oldNodePath;\n      const literal = /\\.css(?:\"|$)/.test(nodePath);\n\n      if (!literal && !/\\.styl$/i.test(nodePath)) {\n        oldNodePath = nodePath;\n        nodePath += \".styl\";\n      }\n\n      const isGlob = _fastGlob.default.isDynamicPattern(nodePath);\n\n      found = _stylus.utils.find(nodePath, this.paths, this.filename);\n\n      if (found && isGlob) {\n        const [globTask] = _fastGlob.default.generateTasks(nodePath);\n\n        const context = globTask.base === \".\" ? _path.default.dirname(this.filename) : _path.default.join(_path.default.dirname(this.filename), globTask.base);\n        loaderContext.addContextDependency(context);\n      }\n\n      if (!found && oldNodePath) {\n        found = _stylus.utils.lookupIndex(oldNodePath, this.paths, this.filename);\n      }\n\n      if (found) {\n        dependencies.push({\n          originalLineno: firstNode.lineno,\n          originalColumn: firstNode.column,\n          originalNodePath,\n          resolved: found.map(item => _path.default.isAbsolute(item) ? item : _path.default.join(process.cwd(), item))\n        });\n        return;\n      }\n\n      dependencies.push({\n        originalLineno: firstNode.lineno,\n        originalColumn: firstNode.column,\n        originalNodePath,\n        resolved: resolveFilename(loaderContext, fileResolver, globResolver, isGlob, _path.default.dirname(this.filename), originalNodePath)\n      });\n    }\n\n  }\n\n  new ImportVisitor(ast, newOptions).visit(ast);\n  await Promise.all(Array.from(dependencies).map(async result => {\n    let {\n      resolved\n    } = result;\n\n    try {\n      resolved = await resolved;\n    } catch (ignoreError) {\n      // eslint-disable-next-line no-param-reassign\n      delete result.resolved; // eslint-disable-next-line no-param-reassign\n\n      result.error = ignoreError;\n      return;\n    }\n\n    const isArray = Array.isArray(resolved); // `stylus` returns forward slashes on windows\n    // eslint-disable-next-line no-param-reassign\n\n    result.resolved = isArray ? resolved.map(item => _path.default.normalize(item)) : _path.default.normalize(resolved);\n    const dependenciesOfDependencies = [];\n\n    for (const dependency of isArray ? result.resolved : [result.resolved]) {\n      // Avoid loop, the file is imported by itself\n      if (seen.has(dependency)) {\n        return;\n      } // Avoid search nested imports in .css\n\n\n      if (_path.default.extname(dependency) === \".css\") {\n        return;\n      }\n\n      loaderContext.addDependency(dependency);\n      dependenciesOfDependencies.push((async () => {\n        let dependencyCode;\n\n        try {\n          dependencyCode = (await readFile(loaderContext.fs, dependency)).toString();\n        } catch (error) {\n          loaderContext.emitError(error);\n        }\n\n        await getDependencies(resolvedDependencies, loaderContext, fileResolver, globResolver, seen, dependencyCode, dependency, options);\n      })());\n    }\n\n    await Promise.all(dependenciesOfDependencies);\n  }));\n\n  if (dependencies.length > 0) {\n    resolvedDependencies.set(filename, dependencies);\n  }\n}\n\nfunction mergeBlocks(blocks) {\n  let finalBlock;\n\n  const adding = item => {\n    finalBlock.push(item);\n  };\n\n  for (const block of blocks) {\n    if (finalBlock) {\n      block.nodes.forEach(adding);\n    } else {\n      finalBlock = block;\n    }\n  }\n\n  return finalBlock;\n}\n\nasync function createEvaluator(loaderContext, code, options) {\n  const fileResolve = loaderContext.getResolve({\n    dependencyType: \"stylus\",\n    conditionNames: [\"styl\", \"stylus\", \"style\"],\n    mainFields: [\"styl\", \"style\", \"stylus\", \"main\", \"...\"],\n    mainFiles: [\"index\", \"...\"],\n    extensions: [\".styl\", \".css\"],\n    restrictions: [/\\.(css|styl)$/i],\n    preferRelative: true\n  }); // Get cwd for `fastGlob()`\n  // No need extra options, because they do not used when `resolveToContext` is `true`\n\n  const globResolve = loaderContext.getResolve({\n    conditionNames: [\"styl\", \"stylus\", \"style\"],\n    resolveToContext: true,\n    preferRelative: true\n  });\n  const resolvedImportDependencies = new Map();\n  const resolvedDependencies = new Map();\n  const seen = new Set();\n  await getDependencies(resolvedDependencies, loaderContext, fileResolve, globResolve, seen, code, loaderContext.resourcePath, options);\n  const optionsImports = [];\n\n  for (const importPath of options.imports) {\n    const isGlob = _fastGlob.default.isDynamicPattern(importPath);\n\n    optionsImports.push({\n      importPath,\n      resolved: resolveFilename(loaderContext, fileResolve, globResolve, isGlob, _path.default.dirname(loaderContext.resourcePath), importPath)\n    });\n  }\n\n  await Promise.all(optionsImports.map(async result => {\n    const {\n      importPath\n    } = result;\n    let {\n      resolved\n    } = result;\n\n    try {\n      resolved = await resolved;\n    } catch (ignoreError) {\n      return;\n    }\n\n    const isArray = Array.isArray(resolved); // `stylus` returns forward slashes on windows\n    // eslint-disable-next-line no-param-reassign\n\n    result.resolved = isArray ? resolved.map(item => _path.default.normalize(item)) : _path.default.normalize(resolved);\n    resolvedImportDependencies.set(importPath, result);\n    const dependenciesOfImportDependencies = [];\n\n    for (const dependency of isArray ? result.resolved : [result.resolved]) {\n      dependenciesOfImportDependencies.push((async () => {\n        let dependencyCode;\n\n        try {\n          dependencyCode = (await readFile(loaderContext.fs, dependency)).toString();\n        } catch (error) {\n          loaderContext.emitError(error);\n        }\n\n        await getDependencies(resolvedDependencies, loaderContext, fileResolve, globResolve, seen, dependencyCode, dependency, options);\n      })());\n    }\n\n    await Promise.all(dependenciesOfImportDependencies);\n  }));\n  return class CustomEvaluator extends _stylus.Evaluator {\n    visitImport(imported) {\n      this.return += 1;\n      const node = this.visit(imported.path).first;\n      const nodePath = !node.val.isNull && node.val || node.name;\n      this.return -= 1;\n      let webpackResolveError;\n\n      if (node.name !== \"url\" && nodePath && !URL_RE.test(nodePath)) {\n        let dependency;\n        const isEntrypoint = loaderContext.resourcePath === node.filename;\n\n        if (isEntrypoint) {\n          dependency = resolvedImportDependencies.get(nodePath);\n        }\n\n        if (!dependency) {\n          const dependencies = resolvedDependencies.get(_path.default.normalize(node.filename));\n\n          if (dependencies) {\n            dependency = dependencies.find(item => {\n              if (item.originalLineno === node.lineno && item.originalColumn === node.column && item.originalNodePath === nodePath) {\n                if (item.error) {\n                  webpackResolveError = item.error;\n                } else {\n                  return item.resolved;\n                }\n              }\n\n              return false;\n            });\n          }\n        }\n\n        if (dependency) {\n          const {\n            resolved\n          } = dependency;\n\n          if (!Array.isArray(resolved)) {\n            // Avoid re globbing when resolved import contains glob characters\n            node.string = _fastGlob.default.escapePath(resolved);\n          } else if (resolved.length > 0) {\n            let hasError = false;\n            const blocks = resolved.map(item => {\n              const clonedImported = imported.clone();\n              const clonedNode = this.visit(clonedImported.path).first; // Avoid re globbing when resolved import contains glob characters\n\n              clonedNode.string = _fastGlob.default.escapePath(item);\n              let result;\n\n              try {\n                result = super.visitImport(clonedImported);\n              } catch (error) {\n                hasError = true;\n              }\n\n              return result;\n            });\n\n            if (!hasError) {\n              return mergeBlocks(blocks);\n            }\n          }\n        }\n      }\n\n      let result;\n\n      try {\n        result = super.visitImport(imported);\n      } catch (error) {\n        loaderContext.emitError(new Error(`Stylus resolver error: ${error.message}${webpackResolveError ? `\\n\\nWebpack resolver error: ${webpackResolveError.message}${webpackResolveError.details ? `\\n\\nWebpack resolver error details:\\n${webpackResolveError.details}` : \"\"}${webpackResolveError.missing ? `\\n\\nWebpack resolver error missing:\\n${webpackResolveError.missing.join(\"\\n\")}` : \"\"}` : \"\"}`));\n        return imported;\n      }\n\n      return result;\n    }\n\n  };\n}\n\nfunction urlResolver(options = {}) {\n  function resolver(url) {\n    const compiler = new _stylus.Compiler(url);\n    const {\n      filename\n    } = url;\n    compiler.isURL = true;\n    const visitedUrl = url.nodes.map(node => compiler.visit(node)).join(\"\");\n    const splitted = visitedUrl.split(\"!\");\n    const parsedUrl = (0, _url.parse)(splitted.pop()); // Parse literal\n\n    const literal = new _stylus.nodes.Literal(`url(\"${parsedUrl.href}\")`);\n    let {\n      pathname\n    } = parsedUrl;\n    let {\n      dest\n    } = this.options;\n    let tail = \"\";\n    let res; // Absolute or hash\n\n    if (parsedUrl.protocol || !pathname || pathname[0] === \"/\") {\n      return literal;\n    } // Check that file exists\n\n\n    if (!options.nocheck) {\n      // eslint-disable-next-line no-underscore-dangle\n      const _paths = options.paths || [];\n\n      pathname = _stylus.utils.lookup(pathname, _paths.concat(this.paths));\n\n      if (!pathname) {\n        return literal;\n      }\n    }\n\n    if (this.includeCSS && _path.default.extname(pathname) === \".css\") {\n      return new _stylus.nodes.Literal(parsedUrl.href);\n    }\n\n    if (parsedUrl.search) {\n      tail += parsedUrl.search;\n    }\n\n    if (parsedUrl.hash) {\n      tail += parsedUrl.hash;\n    }\n\n    if (dest && _path.default.extname(dest) === \".css\") {\n      dest = _path.default.dirname(dest);\n    }\n\n    res = _path.default.relative(dest || _path.default.dirname(this.filename), options.nocheck ? _path.default.join(_path.default.dirname(filename), pathname) : pathname) + tail;\n\n    if (_path.default.sep === \"\\\\\") {\n      res = res.replace(/\\\\/g, \"/\");\n    }\n\n    splitted.push(res);\n    return new _stylus.nodes.Literal(`url(\"${splitted.join(\"!\")}\")`);\n  }\n\n  resolver.options = options;\n  resolver.raw = true;\n  return resolver;\n}\n\nfunction readFile(inputFileSystem, filepath) {\n  return new Promise((resolve, reject) => {\n    inputFileSystem.readFile(filepath, (error, stats) => {\n      if (error) {\n        reject(error);\n      }\n\n      resolve(stats);\n    });\n  });\n}\n\nconst IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i;\nconst ABSOLUTE_SCHEME = /^[A-Za-z0-9+\\-.]+:/;\n\nfunction getURLType(source) {\n  if (source[0] === \"/\") {\n    if (source[1] === \"/\") {\n      return \"scheme-relative\";\n    }\n\n    return \"path-absolute\";\n  }\n\n  if (IS_NATIVE_WIN32_PATH.test(source)) {\n    return \"path-absolute\";\n  }\n\n  return ABSOLUTE_SCHEME.test(source) ? \"absolute\" : \"path-relative\";\n}\n\nfunction normalizeSourceMap(map, rootContext) {\n  const newMap = map; // result.map.file is an optional property that provides the output filename.\n  // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n  // eslint-disable-next-line no-param-reassign\n\n  delete newMap.file; // eslint-disable-next-line no-param-reassign\n\n  newMap.sourceRoot = \"\"; // eslint-disable-next-line no-param-reassign\n\n  newMap.sources = newMap.sources.map(source => {\n    const sourceType = getURLType(source); // Do no touch `scheme-relative`, `path-absolute` and `absolute` types\n\n    if (sourceType === \"path-relative\") {\n      return _path.default.resolve(rootContext, _path.default.normalize(source));\n    }\n\n    return source;\n  });\n  return newMap;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}