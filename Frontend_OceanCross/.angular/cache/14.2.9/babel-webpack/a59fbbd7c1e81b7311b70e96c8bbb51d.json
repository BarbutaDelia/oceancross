{"ast":null,"code":"\"use strict\";\n\nconst sockjs = require(\"sockjs\");\n\nconst BaseServer = require(\"./BaseServer\");\n/** @typedef {import(\"../Server\").WebSocketServerConfiguration} WebSocketServerConfiguration */\n\n/** @typedef {import(\"../Server\").ClientConnection} ClientConnection */\n// Workaround for sockjs@~0.3.19\n// sockjs will remove Origin header, however Origin header is required for checking host.\n// See https://github.com/webpack/webpack-dev-server/issues/1604 for more information\n\n\n{\n  // @ts-ignore\n  const SockjsSession = require(\"sockjs/lib/transport\").Session;\n\n  const decorateConnection = SockjsSession.prototype.decorateConnection;\n  /**\n   * @param {import(\"http\").IncomingMessage} req\n   */\n  // eslint-disable-next-line func-names\n\n  SockjsSession.prototype.decorateConnection = function (req) {\n    decorateConnection.call(this, req);\n    const connection = this.connection;\n\n    if (connection.headers && !(\"origin\" in connection.headers) && \"origin\" in req.headers) {\n      connection.headers.origin = req.headers.origin;\n    }\n  };\n}\nmodule.exports = class SockJSServer extends BaseServer {\n  // options has: error (function), debug (function), server (http/s server), path (string)\n\n  /**\n   * @param {import(\"../Server\")} server\n   */\n  constructor(server) {\n    super(server);\n    this.implementation = sockjs.createServer({\n      // Use provided up-to-date sockjs-client\n      sockjs_url: \"/__webpack_dev_server__/sockjs.bundle.js\",\n      // Default logger is very annoy. Limit useless logs.\n\n      /**\n       * @param {string} severity\n       * @param {string} line\n       */\n      log: (severity, line) => {\n        if (severity === \"error\") {\n          this.server.logger.error(line);\n        } else if (severity === \"info\") {\n          this.server.logger.log(line);\n        } else {\n          this.server.logger.debug(line);\n        }\n      }\n    });\n    /**\n     * @param {import(\"sockjs\").ServerOptions & { path?: string }} options\n     * @returns {string | undefined}\n     */\n\n    const getPrefix = options => {\n      if (typeof options.prefix !== \"undefined\") {\n        return options.prefix;\n      }\n\n      return options.path;\n    };\n\n    const options = { ...\n      /** @type {WebSocketServerConfiguration} */\n      this.server.options.webSocketServer.options,\n      prefix: getPrefix(\n      /** @type {NonNullable<WebSocketServerConfiguration[\"options\"]>} */\n\n      /** @type {WebSocketServerConfiguration} */\n      this.server.options.webSocketServer.options)\n    };\n    this.implementation.installHandlers(\n    /** @type {import(\"http\").Server} */\n    this.server.server, options);\n    this.implementation.on(\"connection\", client => {\n      // @ts-ignore\n      // Implement the the same API as for `ws`\n      client.send = client.write; // @ts-ignore\n\n      client.terminate = client.close;\n      this.clients.push(\n      /** @type {ClientConnection} */\n      client);\n      client.on(\"close\", () => {\n        this.clients.splice(this.clients.indexOf(\n        /** @type {ClientConnection} */\n        client), 1);\n      });\n    }); // @ts-ignore\n\n    this.implementation.close = callback => {\n      callback();\n    };\n  }\n\n};","map":{"version":3,"names":["sockjs","require","BaseServer","SockjsSession","Session","decorateConnection","prototype","req","call","connection","headers","origin","module","exports","SockJSServer","constructor","server","implementation","createServer","sockjs_url","log","severity","line","logger","error","debug","getPrefix","options","prefix","path","webSocketServer","installHandlers","on","client","send","write","terminate","close","clients","push","splice","indexOf","callback"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/webpack-dev-server/lib/servers/SockJSServer.js"],"sourcesContent":["\"use strict\";\n\nconst sockjs = require(\"sockjs\");\nconst BaseServer = require(\"./BaseServer\");\n\n/** @typedef {import(\"../Server\").WebSocketServerConfiguration} WebSocketServerConfiguration */\n/** @typedef {import(\"../Server\").ClientConnection} ClientConnection */\n\n// Workaround for sockjs@~0.3.19\n// sockjs will remove Origin header, however Origin header is required for checking host.\n// See https://github.com/webpack/webpack-dev-server/issues/1604 for more information\n{\n  // @ts-ignore\n  const SockjsSession = require(\"sockjs/lib/transport\").Session;\n  const decorateConnection = SockjsSession.prototype.decorateConnection;\n\n  /**\n   * @param {import(\"http\").IncomingMessage} req\n   */\n  // eslint-disable-next-line func-names\n  SockjsSession.prototype.decorateConnection = function (req) {\n    decorateConnection.call(this, req);\n\n    const connection = this.connection;\n\n    if (\n      connection.headers &&\n      !(\"origin\" in connection.headers) &&\n      \"origin\" in req.headers\n    ) {\n      connection.headers.origin = req.headers.origin;\n    }\n  };\n}\n\nmodule.exports = class SockJSServer extends BaseServer {\n  // options has: error (function), debug (function), server (http/s server), path (string)\n  /**\n   * @param {import(\"../Server\")} server\n   */\n  constructor(server) {\n    super(server);\n\n    this.implementation = sockjs.createServer({\n      // Use provided up-to-date sockjs-client\n      sockjs_url: \"/__webpack_dev_server__/sockjs.bundle.js\",\n      // Default logger is very annoy. Limit useless logs.\n      /**\n       * @param {string} severity\n       * @param {string} line\n       */\n      log: (severity, line) => {\n        if (severity === \"error\") {\n          this.server.logger.error(line);\n        } else if (severity === \"info\") {\n          this.server.logger.log(line);\n        } else {\n          this.server.logger.debug(line);\n        }\n      },\n    });\n\n    /**\n     * @param {import(\"sockjs\").ServerOptions & { path?: string }} options\n     * @returns {string | undefined}\n     */\n    const getPrefix = (options) => {\n      if (typeof options.prefix !== \"undefined\") {\n        return options.prefix;\n      }\n\n      return options.path;\n    };\n\n    const options = {\n      .../** @type {WebSocketServerConfiguration} */\n      (this.server.options.webSocketServer).options,\n      prefix: getPrefix(\n        /** @type {NonNullable<WebSocketServerConfiguration[\"options\"]>} */\n        (\n          /** @type {WebSocketServerConfiguration} */\n          (this.server.options.webSocketServer).options\n        )\n      ),\n    };\n\n    this.implementation.installHandlers(\n      /** @type {import(\"http\").Server} */ (this.server.server),\n      options\n    );\n\n    this.implementation.on(\"connection\", (client) => {\n      // @ts-ignore\n      // Implement the the same API as for `ws`\n      client.send = client.write;\n      // @ts-ignore\n      client.terminate = client.close;\n\n      this.clients.push(/** @type {ClientConnection} */ (client));\n\n      client.on(\"close\", () => {\n        this.clients.splice(\n          this.clients.indexOf(/** @type {ClientConnection} */ (client)),\n          1\n        );\n      });\n    });\n\n    // @ts-ignore\n    this.implementation.close = (callback) => {\n      callback();\n    };\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}