{"ast":null,"code":"'use strict';\n\nconst mm = require('minimatch');\n\nconst braces = require('braces');\n\nconst PatternUtils = require('./utils/pattern-utils');\n\nconst helper = require('./helper');\n\nconst log = require('./logger').create('watcher');\n\nconst DIR_SEP = require('path').sep;\n\nfunction watchPatterns(patterns, watcher) {\n  let expandedPatterns = [];\n  patterns.map(pattern => {\n    // expand ['a/{b,c}'] to ['a/b', 'a/c']\n    expandedPatterns = expandedPatterns.concat(braces.expand(pattern, {\n      keepEscaping: true\n    }));\n  });\n  expandedPatterns.map(PatternUtils.getBaseDir).filter((path, index, paths) => paths.indexOf(path) === index) // filter unique values\n  .forEach((path, index, paths) => {\n    if (!paths.some(p => path.startsWith(p + DIR_SEP))) {\n      watcher.add(path);\n      log.debug(`Watching \"${path}\"`);\n    }\n  });\n}\n\nfunction checkAnyPathMatch(patterns, path) {\n  return patterns.some(pattern => mm(path, pattern, {\n    dot: true\n  }));\n}\n\nfunction createIgnore(patterns, excludes) {\n  return function (path, stat) {\n    if (stat && !stat.isDirectory()) {\n      return !checkAnyPathMatch(patterns, path) || checkAnyPathMatch(excludes, path);\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction getWatchedPatterns(patterns) {\n  return patterns.filter(pattern => pattern.watched).map(pattern => pattern.pattern);\n}\n\nfunction watch(patterns, excludes, fileList, usePolling, emitter) {\n  const watchedPatterns = getWatchedPatterns(patterns); // Lazy-load 'chokidar' to make the dependency optional. This is desired when\n  // third-party watchers are in use.\n\n  const chokidar = require('chokidar');\n\n  const watcher = new chokidar.FSWatcher({\n    usePolling: usePolling,\n    ignorePermissionErrors: true,\n    ignoreInitial: true,\n    ignored: createIgnore(watchedPatterns, excludes)\n  });\n  watchPatterns(watchedPatterns, watcher);\n  watcher.on('add', path => fileList.addFile(helper.normalizeWinPath(path))).on('change', path => fileList.changeFile(helper.normalizeWinPath(path))).on('unlink', path => fileList.removeFile(helper.normalizeWinPath(path))).on('error', log.debug.bind(log));\n  emitter.on('exit', done => {\n    watcher.close();\n    done();\n  });\n  return watcher;\n}\n\nwatch.$inject = ['config.files', 'config.exclude', 'fileList', 'config.usePolling', 'emitter'];\nmodule.exports = watch;","map":{"version":3,"names":["mm","require","braces","PatternUtils","helper","log","create","DIR_SEP","sep","watchPatterns","patterns","watcher","expandedPatterns","map","pattern","concat","expand","keepEscaping","getBaseDir","filter","path","index","paths","indexOf","forEach","some","p","startsWith","add","debug","checkAnyPathMatch","dot","createIgnore","excludes","stat","isDirectory","getWatchedPatterns","watched","watch","fileList","usePolling","emitter","watchedPatterns","chokidar","FSWatcher","ignorePermissionErrors","ignoreInitial","ignored","on","addFile","normalizeWinPath","changeFile","removeFile","bind","done","close","$inject","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/watcher.js"],"sourcesContent":["'use strict'\n\nconst mm = require('minimatch')\nconst braces = require('braces')\nconst PatternUtils = require('./utils/pattern-utils')\n\nconst helper = require('./helper')\nconst log = require('./logger').create('watcher')\n\nconst DIR_SEP = require('path').sep\n\nfunction watchPatterns (patterns, watcher) {\n  let expandedPatterns = []\n  patterns.map((pattern) => {\n    // expand ['a/{b,c}'] to ['a/b', 'a/c']\n    expandedPatterns = expandedPatterns.concat(braces.expand(pattern, { keepEscaping: true }))\n  })\n  expandedPatterns\n    .map(PatternUtils.getBaseDir)\n    .filter((path, index, paths) => paths.indexOf(path) === index) // filter unique values\n    .forEach((path, index, paths) => {\n      if (!paths.some((p) => path.startsWith(p + DIR_SEP))) {\n        watcher.add(path)\n        log.debug(`Watching \"${path}\"`)\n      }\n    })\n}\n\nfunction checkAnyPathMatch (patterns, path) {\n  return patterns.some((pattern) => mm(path, pattern, { dot: true }))\n}\n\nfunction createIgnore (patterns, excludes) {\n  return function (path, stat) {\n    if (stat && !stat.isDirectory()) {\n      return !checkAnyPathMatch(patterns, path) || checkAnyPathMatch(excludes, path)\n    } else {\n      return false\n    }\n  }\n}\n\nfunction getWatchedPatterns (patterns) {\n  return patterns\n    .filter((pattern) => pattern.watched)\n    .map((pattern) => pattern.pattern)\n}\n\nfunction watch (patterns, excludes, fileList, usePolling, emitter) {\n  const watchedPatterns = getWatchedPatterns(patterns)\n  // Lazy-load 'chokidar' to make the dependency optional. This is desired when\n  // third-party watchers are in use.\n  const chokidar = require('chokidar')\n  const watcher = new chokidar.FSWatcher({\n    usePolling: usePolling,\n    ignorePermissionErrors: true,\n    ignoreInitial: true,\n    ignored: createIgnore(watchedPatterns, excludes)\n  })\n\n  watchPatterns(watchedPatterns, watcher)\n\n  watcher\n    .on('add', (path) => fileList.addFile(helper.normalizeWinPath(path)))\n    .on('change', (path) => fileList.changeFile(helper.normalizeWinPath(path)))\n    .on('unlink', (path) => fileList.removeFile(helper.normalizeWinPath(path)))\n    .on('error', log.debug.bind(log))\n\n  emitter.on('exit', (done) => {\n    watcher.close()\n    done()\n  })\n\n  return watcher\n}\n\nwatch.$inject = [\n  'config.files',\n  'config.exclude',\n  'fileList',\n  'config.usePolling',\n  'emitter'\n]\n\nmodule.exports = watch\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}