{"ast":null,"code":"/**\n * @fileoverview log4js is a library to log in JavaScript in similar manner\n * than in log4j for Java (but not really).\n *\n * <h3>Example:</h3>\n * <pre>\n *  const logging = require('log4js');\n *  const log = logging.getLogger('some-category');\n *\n *  //call the log\n *  log.trace('trace me' );\n * </pre>\n *\n * NOTE: the authors below are the original browser-based log4js authors\n * don't try to contact them about bugs in this version :)\n * @author Stephan Strittmatter - http://jroller.com/page/stritti\n * @author Seth Chisamore - http://www.chisamore.com\n * @since 2005-05-20\n * Website: http://log4js.berlios.de\n */\nconst debug = require('debug')('log4js:main');\n\nconst fs = require('fs');\n\nconst deepClone = require('rfdc')({\n  proto: true\n});\n\nconst configuration = require('./configuration');\n\nconst layouts = require('./layouts');\n\nconst levels = require('./levels');\n\nconst appenders = require('./appenders');\n\nconst categories = require('./categories');\n\nconst Logger = require('./logger');\n\nconst clustering = require('./clustering');\n\nconst connectLogger = require('./connect-logger');\n\nconst recordingModule = require('./appenders/recording');\n\nlet enabled = false;\n\nfunction sendLogEventToAppender(logEvent) {\n  if (!enabled) return;\n  debug('Received log event ', logEvent);\n  const categoryAppenders = categories.appendersForCategory(logEvent.categoryName);\n  categoryAppenders.forEach(appender => {\n    appender(logEvent);\n  });\n}\n\nfunction loadConfigurationFile(filename) {\n  debug(`Loading configuration from ${filename}`);\n\n  try {\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\n  } catch (e) {\n    throw new Error(`Problem reading config from file \"${filename}\". Error was ${e.message}`, e);\n  }\n}\n\nfunction configure(configurationFileOrObject) {\n  if (enabled) {\n    // eslint-disable-next-line no-use-before-define\n    shutdown();\n  }\n\n  let configObject = configurationFileOrObject;\n\n  if (typeof configObject === 'string') {\n    configObject = loadConfigurationFile(configurationFileOrObject);\n  }\n\n  debug(`Configuration is ${configObject}`);\n  configuration.configure(deepClone(configObject));\n  clustering.onMessage(sendLogEventToAppender);\n  enabled = true; // eslint-disable-next-line no-use-before-define\n\n  return log4js;\n}\n\nfunction recording() {\n  return recordingModule;\n}\n/**\n * This callback type is called `shutdownCallback` and is displayed as a global symbol.\n *\n * @callback shutdownCallback\n * @param {Error} [error]\n */\n\n/**\n * Shutdown all log appenders. This will first disable all writing to appenders\n * and then call the shutdown function each appender.\n *\n * @param {shutdownCallback} [callback] - The callback to be invoked once all appenders have\n *  shutdown. If an error occurs, the callback will be given the error object\n *  as the first argument.\n */\n\n\nfunction shutdown(callback = () => {}) {\n  if (typeof callback !== 'function') {\n    throw new TypeError('Invalid callback passed to shutdown');\n  }\n\n  debug('Shutdown called. Disabling all log writing.'); // First, disable all writing to appenders. This prevents appenders from\n  // not being able to be drained because of run-away log writes.\n\n  enabled = false; // Clone out to maintain a reference\n\n  const appendersToCheck = Array.from(appenders.values()); // Reset immediately to prevent leaks\n\n  appenders.init();\n  categories.init(); // Count the number of shutdown functions\n\n  const shutdownFunctions = appendersToCheck.reduce((accum, next) => next.shutdown ? accum + 1 : accum, 0);\n\n  if (shutdownFunctions === 0) {\n    debug('No appenders with shutdown functions found.');\n    callback();\n  }\n\n  let completed = 0;\n  let error;\n  debug(`Found ${shutdownFunctions} appenders with shutdown functions.`);\n\n  function complete(err) {\n    error = error || err;\n    completed += 1;\n    debug(`Appender shutdowns complete: ${completed} / ${shutdownFunctions}`);\n\n    if (completed >= shutdownFunctions) {\n      debug('All shutdown functions completed.');\n      callback(error);\n    }\n  } // Call each of the shutdown functions\n\n\n  appendersToCheck.filter(a => a.shutdown).forEach(a => a.shutdown(complete));\n}\n/**\n * Get a logger instance.\n * @static\n * @param {string} [category=default]\n * @return {Logger} instance of logger for the category\n */\n\n\nfunction getLogger(category) {\n  if (!enabled) {\n    configure(process.env.LOG4JS_CONFIG || {\n      appenders: {\n        out: {\n          type: 'stdout'\n        }\n      },\n      categories: {\n        default: {\n          appenders: ['out'],\n          level: 'OFF'\n        }\n      }\n    });\n  }\n\n  return new Logger(category || 'default');\n}\n/**\n * @name log4js\n * @namespace Log4js\n * @property getLogger\n * @property configure\n * @property shutdown\n */\n\n\nconst log4js = {\n  getLogger,\n  configure,\n  shutdown,\n  connectLogger,\n  levels,\n  addLayout: layouts.addLayout,\n  recording\n};\nmodule.exports = log4js;","map":{"version":3,"names":["debug","require","fs","deepClone","proto","configuration","layouts","levels","appenders","categories","Logger","clustering","connectLogger","recordingModule","enabled","sendLogEventToAppender","logEvent","categoryAppenders","appendersForCategory","categoryName","forEach","appender","loadConfigurationFile","filename","JSON","parse","readFileSync","e","Error","message","configure","configurationFileOrObject","shutdown","configObject","onMessage","log4js","recording","callback","TypeError","appendersToCheck","Array","from","values","init","shutdownFunctions","reduce","accum","next","completed","error","complete","err","filter","a","getLogger","category","process","env","LOG4JS_CONFIG","out","type","default","level","addLayout","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/log4js/lib/log4js.js"],"sourcesContent":["/**\n * @fileoverview log4js is a library to log in JavaScript in similar manner\n * than in log4j for Java (but not really).\n *\n * <h3>Example:</h3>\n * <pre>\n *  const logging = require('log4js');\n *  const log = logging.getLogger('some-category');\n *\n *  //call the log\n *  log.trace('trace me' );\n * </pre>\n *\n * NOTE: the authors below are the original browser-based log4js authors\n * don't try to contact them about bugs in this version :)\n * @author Stephan Strittmatter - http://jroller.com/page/stritti\n * @author Seth Chisamore - http://www.chisamore.com\n * @since 2005-05-20\n * Website: http://log4js.berlios.de\n */\nconst debug = require('debug')('log4js:main');\nconst fs = require('fs');\nconst deepClone = require('rfdc')({ proto: true });\nconst configuration = require('./configuration');\nconst layouts = require('./layouts');\nconst levels = require('./levels');\nconst appenders = require('./appenders');\nconst categories = require('./categories');\nconst Logger = require('./logger');\nconst clustering = require('./clustering');\nconst connectLogger = require('./connect-logger');\nconst recordingModule = require('./appenders/recording');\n\nlet enabled = false;\n\nfunction sendLogEventToAppender(logEvent) {\n  if (!enabled) return;\n  debug('Received log event ', logEvent);\n  const categoryAppenders = categories.appendersForCategory(\n    logEvent.categoryName\n  );\n  categoryAppenders.forEach((appender) => {\n    appender(logEvent);\n  });\n}\n\nfunction loadConfigurationFile(filename) {\n  debug(`Loading configuration from ${filename}`);\n  try {\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\n  } catch (e) {\n    throw new Error(\n      `Problem reading config from file \"${filename}\". Error was ${e.message}`,\n      e\n    );\n  }\n}\n\nfunction configure(configurationFileOrObject) {\n  if (enabled) {\n    // eslint-disable-next-line no-use-before-define\n    shutdown();\n  }\n\n  let configObject = configurationFileOrObject;\n\n  if (typeof configObject === 'string') {\n    configObject = loadConfigurationFile(configurationFileOrObject);\n  }\n  debug(`Configuration is ${configObject}`);\n\n  configuration.configure(deepClone(configObject));\n\n  clustering.onMessage(sendLogEventToAppender);\n\n  enabled = true;\n\n  // eslint-disable-next-line no-use-before-define\n  return log4js;\n}\n\nfunction recording() {\n  return recordingModule;\n}\n\n/**\n * This callback type is called `shutdownCallback` and is displayed as a global symbol.\n *\n * @callback shutdownCallback\n * @param {Error} [error]\n */\n\n/**\n * Shutdown all log appenders. This will first disable all writing to appenders\n * and then call the shutdown function each appender.\n *\n * @param {shutdownCallback} [callback] - The callback to be invoked once all appenders have\n *  shutdown. If an error occurs, the callback will be given the error object\n *  as the first argument.\n */\nfunction shutdown(callback = () => {}) {\n  if (typeof callback !== 'function') {\n    throw new TypeError('Invalid callback passed to shutdown');\n  }\n  debug('Shutdown called. Disabling all log writing.');\n  // First, disable all writing to appenders. This prevents appenders from\n  // not being able to be drained because of run-away log writes.\n  enabled = false;\n\n  // Clone out to maintain a reference\n  const appendersToCheck = Array.from(appenders.values());\n\n  // Reset immediately to prevent leaks\n  appenders.init();\n  categories.init();\n\n  // Count the number of shutdown functions\n  const shutdownFunctions = appendersToCheck.reduce(\n    (accum, next) => (next.shutdown ? accum + 1 : accum),\n    0\n  );\n  if (shutdownFunctions === 0) {\n    debug('No appenders with shutdown functions found.');\n    callback();\n  }\n\n  let completed = 0;\n  let error;\n  debug(`Found ${shutdownFunctions} appenders with shutdown functions.`);\n  function complete(err) {\n    error = error || err;\n    completed += 1;\n    debug(`Appender shutdowns complete: ${completed} / ${shutdownFunctions}`);\n    if (completed >= shutdownFunctions) {\n      debug('All shutdown functions completed.');\n      callback(error);\n    }\n  }\n\n  // Call each of the shutdown functions\n  appendersToCheck\n    .filter((a) => a.shutdown)\n    .forEach((a) => a.shutdown(complete));\n}\n\n/**\n * Get a logger instance.\n * @static\n * @param {string} [category=default]\n * @return {Logger} instance of logger for the category\n */\nfunction getLogger(category) {\n  if (!enabled) {\n    configure(\n      process.env.LOG4JS_CONFIG || {\n        appenders: { out: { type: 'stdout' } },\n        categories: { default: { appenders: ['out'], level: 'OFF' } },\n      }\n    );\n  }\n  return new Logger(category || 'default');\n}\n\n/**\n * @name log4js\n * @namespace Log4js\n * @property getLogger\n * @property configure\n * @property shutdown\n */\nconst log4js = {\n  getLogger,\n  configure,\n  shutdown,\n  connectLogger,\n  levels,\n  addLayout: layouts.addLayout,\n  recording,\n};\n\nmodule.exports = log4js;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}