{"ast":null,"code":"/**\n * Stopper middleware is responsible for communicating with `karma stop`.\n */\nconst log = require('../logger').create('middleware:stopper');\n\nfunction createStopperMiddleware(urlRoot) {\n  return function (request, response, next) {\n    if (request.url !== urlRoot + 'stop') return next();\n    response.writeHead(200);\n    log.info('Stopping server');\n    response.end('OK');\n    process.kill(process.pid, 'SIGINT');\n  };\n}\n\ncreateStopperMiddleware.$inject = ['config.urlRoot'];\nexports.create = createStopperMiddleware;","map":{"version":3,"names":["log","require","create","createStopperMiddleware","urlRoot","request","response","next","url","writeHead","info","end","process","kill","pid","$inject","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/middleware/stopper.js"],"sourcesContent":["/**\n * Stopper middleware is responsible for communicating with `karma stop`.\n */\n\nconst log = require('../logger').create('middleware:stopper')\n\nfunction createStopperMiddleware (urlRoot) {\n  return function (request, response, next) {\n    if (request.url !== urlRoot + 'stop') return next()\n    response.writeHead(200)\n    log.info('Stopping server')\n    response.end('OK')\n    process.kill(process.pid, 'SIGINT')\n  }\n}\n\ncreateStopperMiddleware.$inject = ['config.urlRoot']\nexports.create = createStopperMiddleware\n"],"mappings":"AAAA;AACA;AACA;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAArB,CAA4B,oBAA5B,CAAZ;;AAEA,SAASC,uBAAT,CAAkCC,OAAlC,EAA2C;EACzC,OAAO,UAAUC,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;IACxC,IAAIF,OAAO,CAACG,GAAR,KAAgBJ,OAAO,GAAG,MAA9B,EAAsC,OAAOG,IAAI,EAAX;IACtCD,QAAQ,CAACG,SAAT,CAAmB,GAAnB;IACAT,GAAG,CAACU,IAAJ,CAAS,iBAAT;IACAJ,QAAQ,CAACK,GAAT,CAAa,IAAb;IACAC,OAAO,CAACC,IAAR,CAAaD,OAAO,CAACE,GAArB,EAA0B,QAA1B;EACD,CAND;AAOD;;AAEDX,uBAAuB,CAACY,OAAxB,GAAkC,CAAC,gBAAD,CAAlC;AACAC,OAAO,CAACd,MAAR,GAAiBC,uBAAjB"},"metadata":{},"sourceType":"script"}