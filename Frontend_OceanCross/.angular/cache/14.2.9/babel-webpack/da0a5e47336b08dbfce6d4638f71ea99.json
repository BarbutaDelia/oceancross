{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst os = require(\"os\");\n\nconst path = require(\"path\");\n\nconst url = require(\"url\");\n\nconst util = require(\"util\");\n\nconst fs = require(\"graceful-fs\");\n\nconst ipaddr = require(\"ipaddr.js\");\n\nconst defaultGateway = require(\"default-gateway\");\n\nconst express = require(\"express\");\n\nconst {\n  validate\n} = require(\"schema-utils\");\n\nconst schema = require(\"./options.json\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"webpack\").Configuration} WebpackConfiguration */\n\n/** @typedef {import(\"webpack\").StatsOptions} StatsOptions */\n\n/** @typedef {import(\"webpack\").StatsCompilation} StatsCompilation */\n\n/** @typedef {import(\"webpack\").Stats} Stats */\n\n/** @typedef {import(\"webpack\").MultiStats} MultiStats */\n\n/** @typedef {import(\"os\").NetworkInterfaceInfo} NetworkInterfaceInfo */\n\n/** @typedef {import(\"express\").Request} Request */\n\n/** @typedef {import(\"express\").Response} Response */\n\n/** @typedef {import(\"express\").NextFunction} NextFunction */\n\n/** @typedef {import(\"express\").RequestHandler} ExpressRequestHandler */\n\n/** @typedef {import(\"express\").ErrorRequestHandler} ExpressErrorRequestHandler */\n\n/** @typedef {import(\"chokidar\").WatchOptions} WatchOptions */\n\n/** @typedef {import(\"chokidar\").FSWatcher} FSWatcher */\n\n/** @typedef {import(\"connect-history-api-fallback\").Options} ConnectHistoryApiFallbackOptions */\n\n/** @typedef {import(\"bonjour-service\").Bonjour} Bonjour */\n\n/** @typedef {import(\"bonjour-service\").Service} BonjourOptions */\n\n/** @typedef {import(\"http-proxy-middleware\").RequestHandler} RequestHandler */\n\n/** @typedef {import(\"http-proxy-middleware\").Options} HttpProxyMiddlewareOptions */\n\n/** @typedef {import(\"http-proxy-middleware\").Filter} HttpProxyMiddlewareOptionsFilter */\n\n/** @typedef {import(\"serve-index\").Options} ServeIndexOptions */\n\n/** @typedef {import(\"serve-static\").ServeStaticOptions} ServeStaticOptions */\n\n/** @typedef {import(\"ipaddr.js\").IPv4} IPv4 */\n\n/** @typedef {import(\"ipaddr.js\").IPv6} IPv6 */\n\n/** @typedef {import(\"net\").Socket} Socket */\n\n/** @typedef {import(\"http\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"open\").Options} OpenOptions */\n\n/** @typedef {import(\"https\").ServerOptions & { spdy?: { plain?: boolean | undefined, ssl?: boolean | undefined, 'x-forwarded-for'?: string | undefined, protocol?: string | undefined, protocols?: string[] | undefined }}} ServerOptions */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Options<Request, Response>} DevMiddlewareOptions\n */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Context<Request, Response>} DevMiddlewareContext\n */\n\n/**\n * @typedef {\"local-ip\" | \"local-ipv4\" | \"local-ipv6\" | string} Host\n */\n\n/**\n * @typedef {number | string | \"auto\"} Port\n */\n\n/**\n * @typedef {Object} WatchFiles\n * @property {string | string[]} paths\n * @property {WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} [options]\n */\n\n/**\n * @typedef {Object} Static\n * @property {string} [directory]\n * @property {string | string[]} [publicPath]\n * @property {boolean | ServeIndexOptions} [serveIndex]\n * @property {ServeStaticOptions} [staticOptions]\n * @property {boolean | WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} [watch]\n */\n\n/**\n * @typedef {Object} NormalizedStatic\n * @property {string} directory\n * @property {string[]} publicPath\n * @property {false | ServeIndexOptions} serveIndex\n * @property {ServeStaticOptions} staticOptions\n * @property {false | WatchOptions} watch\n */\n\n/**\n * @typedef {Object} ServerConfiguration\n * @property {\"http\" | \"https\" | \"spdy\" | string} [type]\n * @property {ServerOptions} [options]\n */\n\n/**\n * @typedef {Object} WebSocketServerConfiguration\n * @property {\"sockjs\" | \"ws\" | string | Function} [type]\n * @property {Record<string, any>} [options]\n */\n\n/**\n * @typedef {(import(\"ws\").WebSocket | import(\"sockjs\").Connection & { send: import(\"ws\").WebSocket[\"send\"], terminate: import(\"ws\").WebSocket[\"terminate\"], ping: import(\"ws\").WebSocket[\"ping\"] }) & { isAlive?: boolean }} ClientConnection\n */\n\n/**\n * @typedef {import(\"ws\").WebSocketServer | import(\"sockjs\").Server & { close: import(\"ws\").WebSocketServer[\"close\"] }} WebSocketServer\n */\n\n/**\n * @typedef {{ implementation: WebSocketServer, clients: ClientConnection[] }} WebSocketServerImplementation\n */\n\n/**\n * @callback ByPass\n * @param {Request} req\n * @param {Response} res\n * @param {ProxyConfigArrayItem} proxyConfig\n */\n\n/**\n * @typedef {{ path?: HttpProxyMiddlewareOptionsFilter | undefined, context?: HttpProxyMiddlewareOptionsFilter | undefined } & { bypass?: ByPass } & HttpProxyMiddlewareOptions } ProxyConfigArrayItem\n */\n\n/**\n * @typedef {(ProxyConfigArrayItem | ((req?: Request | undefined, res?: Response | undefined, next?: NextFunction | undefined) => ProxyConfigArrayItem))[]} ProxyConfigArray\n */\n\n/**\n * @typedef {{ [url: string]: string | ProxyConfigArrayItem }} ProxyConfigMap\n */\n\n/**\n * @typedef {Object} OpenApp\n * @property {string} [name]\n * @property {string[]} [arguments]\n */\n\n/**\n * @typedef {Object} Open\n * @property {string | string[] | OpenApp} [app]\n * @property {string | string[]} [target]\n */\n\n/**\n * @typedef {Object} NormalizedOpen\n * @property {string} target\n * @property {import(\"open\").Options} options\n */\n\n/**\n * @typedef {Object} WebSocketURL\n * @property {string} [hostname]\n * @property {string} [password]\n * @property {string} [pathname]\n * @property {number | string} [port]\n * @property {string} [protocol]\n * @property {string} [username]\n */\n\n/**\n * @typedef {Object} ClientConfiguration\n * @property {\"log\" | \"info\" | \"warn\" | \"error\" | \"none\" | \"verbose\"} [logging]\n * @property {boolean  | { warnings?: boolean, errors?: boolean }} [overlay]\n * @property {boolean} [progress]\n * @property {boolean | number} [reconnect]\n * @property {\"ws\" | \"sockjs\" | string} [webSocketTransport]\n * @property {string | WebSocketURL} [webSocketURL]\n */\n\n/**\n * @typedef {Array<{ key: string; value: string }> | Record<string, string | string[]>} Headers\n */\n\n/**\n * @typedef {{ name?: string, path?: string, middleware: ExpressRequestHandler | ExpressErrorRequestHandler } | ExpressRequestHandler | ExpressErrorRequestHandler} Middleware\n */\n\n/**\n * @typedef {Object} Configuration\n * @property {boolean | string} [ipc]\n * @property {Host} [host]\n * @property {Port} [port]\n * @property {boolean | \"only\"} [hot]\n * @property {boolean} [liveReload]\n * @property {DevMiddlewareOptions<Request, Response>} [devMiddleware]\n * @property {boolean} [compress]\n * @property {boolean} [magicHtml]\n * @property {\"auto\" | \"all\" | string | string[]} [allowedHosts]\n * @property {boolean | ConnectHistoryApiFallbackOptions} [historyApiFallback]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | Record<string, never> | BonjourOptions} [bonjour]\n * @property {string | string[] | WatchFiles | Array<string | WatchFiles>} [watchFiles]\n * @property {boolean | string | Static | Array<string | Static>} [static]\n * @property {boolean | ServerOptions} [https]\n * @property {boolean} [http2]\n * @property {\"http\" | \"https\" | \"spdy\" | string | ServerConfiguration} [server]\n * @property {boolean | \"sockjs\" | \"ws\" | string | WebSocketServerConfiguration} [webSocketServer]\n * @property {ProxyConfigMap | ProxyConfigArrayItem | ProxyConfigArray} [proxy]\n * @property {boolean | string | Open | Array<string | Open>} [open]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | ClientConfiguration} [client]\n * @property {Headers | ((req: Request, res: Response, context: DevMiddlewareContext<Request, Response>) => Headers)} [headers]\n * @property {(devServer: Server) => void} [onAfterSetupMiddleware]\n * @property {(devServer: Server) => void} [onBeforeSetupMiddleware]\n * @property {(devServer: Server) => void} [onListening]\n * @property {(middlewares: Middleware[], devServer: Server) => Middleware[]} [setupMiddlewares]\n */\n\n\nif (!process.env.WEBPACK_SERVE) {\n  // TODO fix me in the next major release\n  // @ts-ignore\n  process.env.WEBPACK_SERVE = true;\n}\n\nclass Server {\n  /**\n   * @param {Configuration | Compiler | MultiCompiler} options\n   * @param {Compiler | MultiCompiler | Configuration} compiler\n   */\n  constructor(options = {}, compiler) {\n    // TODO: remove this after plugin support is published\n    if (\n    /** @type {Compiler | MultiCompiler} */\n    options.hooks) {\n      util.deprecate(() => {}, \"Using 'compiler' as the first argument is deprecated. Please use 'options' as the first argument and 'compiler' as the second argument.\", \"DEP_WEBPACK_DEV_SERVER_CONSTRUCTOR\")();\n      [options = {}, compiler] = [compiler, options];\n    }\n\n    validate(\n    /** @type {Schema} */\n    schema, options, {\n      name: \"Dev Server\",\n      baseDataPath: \"options\"\n    });\n    this.compiler =\n    /** @type {Compiler | MultiCompiler} */\n    compiler;\n    /**\n     * @type {ReturnType<Compiler[\"getInfrastructureLogger\"]>}\n     * */\n\n    this.logger = this.compiler.getInfrastructureLogger(\"webpack-dev-server\");\n    this.options =\n    /** @type {Configuration} */\n    options;\n    /**\n     * @type {FSWatcher[]}\n     */\n\n    this.staticWatchers = [];\n    /**\n     * @private\n     * @type {{ name: string | symbol, listener: (...args: any[]) => void}[] }}\n     */\n\n    this.listeners = []; // Keep track of websocket proxies for external websocket upgrade.\n\n    /**\n     * @private\n     * @type {RequestHandler[]}\n     */\n\n    this.webSocketProxies = [];\n    /**\n     * @type {Socket[]}\n     */\n\n    this.sockets = [];\n    /**\n     * @private\n     * @type {string | undefined}\n     */\n    // eslint-disable-next-line no-undefined\n\n    this.currentHash = undefined;\n  } // TODO compatibility with webpack v4, remove it after drop\n\n\n  static get cli() {\n    return {\n      get getArguments() {\n        return () => require(\"../bin/cli-flags\");\n      },\n\n      get processArguments() {\n        return require(\"../bin/process-arguments\");\n      }\n\n    };\n  }\n\n  static get schema() {\n    return schema;\n  }\n  /**\n   * @private\n   * @returns {StatsOptions}\n   * @constructor\n   */\n\n\n  static get DEFAULT_STATS() {\n    return {\n      all: false,\n      hash: true,\n      warnings: true,\n      errors: true,\n      errorDetails: false\n    };\n  }\n  /**\n   * @param {string} URL\n   * @returns {boolean}\n   */\n\n\n  static isAbsoluteURL(URL) {\n    // Don't match Windows paths `c:\\`\n    if (/^[a-zA-Z]:\\\\/.test(URL)) {\n      return false;\n    } // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n    // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n\n\n    return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(URL);\n  }\n  /**\n   * @param {string} gateway\n   * @returns {string | undefined}\n   */\n\n\n  static findIp(gateway) {\n    const gatewayIp = ipaddr.parse(gateway); // Look for the matching interface in all local interfaces.\n\n    for (const addresses of Object.values(os.networkInterfaces())) {\n      for (const {\n        cidr\n      } of\n      /** @type {NetworkInterfaceInfo[]} */\n      addresses) {\n        const net = ipaddr.parseCIDR(\n        /** @type {string} */\n        cidr);\n\n        if (net[0] && net[0].kind() === gatewayIp.kind() && gatewayIp.match(net)) {\n          return net[0].toString();\n        }\n      }\n    }\n  }\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {Promise<string | undefined>}\n   */\n\n\n  static internalIP(family) {\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          gateway\n        } = yield defaultGateway[family]();\n        return Server.findIp(gateway);\n      } catch {// ignore\n      }\n    })();\n  }\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {string | undefined}\n   */\n\n\n  static internalIPSync(family) {\n    try {\n      const {\n        gateway\n      } = defaultGateway[family].sync();\n      return Server.findIp(gateway);\n    } catch {// ignore\n    }\n  }\n  /**\n   * @param {Host} hostname\n   * @returns {Promise<string>}\n   */\n\n\n  static getHostname(hostname) {\n    return _asyncToGenerator(function* () {\n      if (hostname === \"local-ip\") {\n        return (yield Server.internalIP(\"v4\")) || (yield Server.internalIP(\"v6\")) || \"0.0.0.0\";\n      } else if (hostname === \"local-ipv4\") {\n        return (yield Server.internalIP(\"v4\")) || \"0.0.0.0\";\n      } else if (hostname === \"local-ipv6\") {\n        return (yield Server.internalIP(\"v6\")) || \"::\";\n      }\n\n      return hostname;\n    })();\n  }\n  /**\n   * @param {Port} port\n   * @param {string} host\n   * @returns {Promise<number | string>}\n   */\n\n\n  static getFreePort(port, host) {\n    return _asyncToGenerator(function* () {\n      if (typeof port !== \"undefined\" && port !== null && port !== \"auto\") {\n        return port;\n      }\n\n      const pRetry = require(\"p-retry\");\n\n      const getPort = require(\"./getPort\");\n\n      const basePort = typeof process.env.WEBPACK_DEV_SERVER_BASE_PORT !== \"undefined\" ? parseInt(process.env.WEBPACK_DEV_SERVER_BASE_PORT, 10) : 8080; // Try to find unused port and listen on it for 3 times,\n      // if port is not specified in options.\n\n      const defaultPortRetry = typeof process.env.WEBPACK_DEV_SERVER_PORT_RETRY !== \"undefined\" ? parseInt(process.env.WEBPACK_DEV_SERVER_PORT_RETRY, 10) : 3;\n      return pRetry(() => getPort(basePort, host), {\n        retries: defaultPortRetry\n      });\n    })();\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  static findCacheDir() {\n    const cwd = process.cwd();\n    /**\n     * @type {string | undefined}\n     */\n\n    let dir = cwd;\n\n    for (;;) {\n      try {\n        if (fs.statSync(path.join(dir, \"package.json\")).isFile()) break; // eslint-disable-next-line no-empty\n      } catch (e) {}\n\n      const parent = path.dirname(dir);\n\n      if (dir === parent) {\n        // eslint-disable-next-line no-undefined\n        dir = undefined;\n        break;\n      }\n\n      dir = parent;\n    }\n\n    if (!dir) {\n      return path.resolve(cwd, \".cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"1\") {\n      return path.resolve(dir, \".pnp/.cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"3\") {\n      return path.resolve(dir, \".yarn/.cache/webpack-dev-server\");\n    }\n\n    return path.resolve(dir, \"node_modules/.cache/webpack-dev-server\");\n  }\n  /**\n   * @private\n   * @param {Compiler} compiler\n   */\n\n\n  addAdditionalEntries(compiler) {\n    /**\n     * @type {string[]}\n     */\n    const additionalEntries = [];\n    const isWebTarget = compiler.options.externalsPresets ? compiler.options.externalsPresets.web : [\"web\", \"webworker\", \"electron-preload\", \"electron-renderer\", \"node-webkit\", // eslint-disable-next-line no-undefined\n    undefined, null].includes(\n    /** @type {string} */\n    compiler.options.target); // TODO maybe empty empty client\n\n    if (this.options.client && isWebTarget) {\n      let webSocketURLStr = \"\";\n\n      if (this.options.webSocketServer) {\n        const webSocketURL =\n        /** @type {WebSocketURL} */\n\n        /** @type {ClientConfiguration} */\n        this.options.client.webSocketURL;\n        const webSocketServer =\n        /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n        this.options.webSocketServer;\n        const searchParams = new URLSearchParams();\n        /** @type {string} */\n\n        let protocol; // We are proxying dev server and need to specify custom `hostname`\n\n        if (typeof webSocketURL.protocol !== \"undefined\") {\n          protocol = webSocketURL.protocol;\n        } else {\n          protocol =\n          /** @type {ServerConfiguration} */\n          this.options.server.type === \"http\" ? \"ws:\" : \"wss:\";\n        }\n\n        searchParams.set(\"protocol\", protocol);\n\n        if (typeof webSocketURL.username !== \"undefined\") {\n          searchParams.set(\"username\", webSocketURL.username);\n        }\n\n        if (typeof webSocketURL.password !== \"undefined\") {\n          searchParams.set(\"password\", webSocketURL.password);\n        }\n        /** @type {string} */\n\n\n        let hostname; // SockJS is not supported server mode, so `hostname` and `port` can't specified, let's ignore them\n        // TODO show warning about this\n\n        const isSockJSType = webSocketServer.type === \"sockjs\"; // We are proxying dev server and need to specify custom `hostname`\n\n        if (typeof webSocketURL.hostname !== \"undefined\") {\n          hostname = webSocketURL.hostname;\n        } // Web socket server works on custom `hostname`, only for `ws` because `sock-js` is not support custom `hostname`\n        else if (typeof webSocketServer.options.host !== \"undefined\" && !isSockJSType) {\n          hostname = webSocketServer.options.host;\n        } // The `host` option is specified\n        else if (typeof this.options.host !== \"undefined\") {\n          hostname = this.options.host;\n        } // The `port` option is not specified\n        else {\n          hostname = \"0.0.0.0\";\n        }\n\n        searchParams.set(\"hostname\", hostname);\n        /** @type {number | string} */\n\n        let port; // We are proxying dev server and need to specify custom `port`\n\n        if (typeof webSocketURL.port !== \"undefined\") {\n          port = webSocketURL.port;\n        } // Web socket server works on custom `port`, only for `ws` because `sock-js` is not support custom `port`\n        else if (typeof webSocketServer.options.port !== \"undefined\" && !isSockJSType) {\n          port = webSocketServer.options.port;\n        } // The `port` option is specified\n        else if (typeof this.options.port === \"number\") {\n          port = this.options.port;\n        } // The `port` option is specified using `string`\n        else if (typeof this.options.port === \"string\" && this.options.port !== \"auto\") {\n          port = Number(this.options.port);\n        } // The `port` option is not specified or set to `auto`\n        else {\n          port = \"0\";\n        }\n\n        searchParams.set(\"port\", String(port));\n        /** @type {string} */\n\n        let pathname = \"\"; // We are proxying dev server and need to specify custom `pathname`\n\n        if (typeof webSocketURL.pathname !== \"undefined\") {\n          pathname = webSocketURL.pathname;\n        } // Web socket server works on custom `path`\n        else if (typeof webSocketServer.options.prefix !== \"undefined\" || typeof webSocketServer.options.path !== \"undefined\") {\n          pathname = webSocketServer.options.prefix || webSocketServer.options.path;\n        }\n\n        searchParams.set(\"pathname\", pathname);\n        const client =\n        /** @type {ClientConfiguration} */\n        this.options.client;\n\n        if (typeof client.logging !== \"undefined\") {\n          searchParams.set(\"logging\", client.logging);\n        }\n\n        if (typeof client.progress !== \"undefined\") {\n          searchParams.set(\"progress\", String(client.progress));\n        }\n\n        if (typeof client.overlay !== \"undefined\") {\n          searchParams.set(\"overlay\", typeof client.overlay === \"boolean\" ? String(client.overlay) : JSON.stringify(client.overlay));\n        }\n\n        if (typeof client.reconnect !== \"undefined\") {\n          searchParams.set(\"reconnect\", typeof client.reconnect === \"number\" ? String(client.reconnect) : \"10\");\n        }\n\n        if (typeof this.options.hot !== \"undefined\") {\n          searchParams.set(\"hot\", String(this.options.hot));\n        }\n\n        if (typeof this.options.liveReload !== \"undefined\") {\n          searchParams.set(\"live-reload\", String(this.options.liveReload));\n        }\n\n        webSocketURLStr = searchParams.toString();\n      }\n\n      additionalEntries.push(`${require.resolve(\"../client/index.js\")}?${webSocketURLStr}`);\n    }\n\n    if (this.options.hot === \"only\") {\n      additionalEntries.push(require.resolve(\"webpack/hot/only-dev-server\"));\n    } else if (this.options.hot) {\n      additionalEntries.push(require.resolve(\"webpack/hot/dev-server\"));\n    }\n\n    const webpack = compiler.webpack || require(\"webpack\"); // use a hook to add entries if available\n\n\n    if (typeof webpack.EntryPlugin !== \"undefined\") {\n      for (const additionalEntry of additionalEntries) {\n        new webpack.EntryPlugin(compiler.context, additionalEntry, {\n          // eslint-disable-next-line no-undefined\n          name: undefined\n        }).apply(compiler);\n      }\n    } // TODO remove after drop webpack v4 support\n    else {\n      /**\n       * prependEntry Method for webpack 4\n       * @param {any} originalEntry\n       * @param {any} newAdditionalEntries\n       * @returns {any}\n       */\n      const prependEntry = (originalEntry, newAdditionalEntries) => {\n        if (typeof originalEntry === \"function\") {\n          return () => Promise.resolve(originalEntry()).then(entry => prependEntry(entry, newAdditionalEntries));\n        }\n\n        if (typeof originalEntry === \"object\" && !Array.isArray(originalEntry)) {\n          /** @type {Object<string,string>} */\n          const clone = {};\n          Object.keys(originalEntry).forEach(key => {\n            // entry[key] should be a string here\n            const entryDescription = originalEntry[key];\n            clone[key] = prependEntry(entryDescription, newAdditionalEntries);\n          });\n          return clone;\n        } // in this case, entry is a string or an array.\n        // make sure that we do not add duplicates.\n\n        /** @type {any} */\n\n\n        const entriesClone = additionalEntries.slice(0);\n        [].concat(originalEntry).forEach(newEntry => {\n          if (!entriesClone.includes(newEntry)) {\n            entriesClone.push(newEntry);\n          }\n        });\n        return entriesClone;\n      };\n\n      compiler.options.entry = prependEntry(compiler.options.entry || \"./src\", additionalEntries);\n      compiler.hooks.entryOption.call(\n      /** @type {string} */\n      compiler.options.context, compiler.options.entry);\n    }\n  }\n  /**\n   * @private\n   * @returns {Compiler[\"options\"]}\n   */\n\n\n  getCompilerOptions() {\n    if (typeof\n    /** @type {MultiCompiler} */\n    this.compiler.compilers !== \"undefined\") {\n      if (\n      /** @type {MultiCompiler} */\n      this.compiler.compilers.length === 1) {\n        return (\n          /** @type {MultiCompiler} */\n          this.compiler.compilers[0].options\n        );\n      } // Configuration with the `devServer` options\n\n\n      const compilerWithDevServer =\n      /** @type {MultiCompiler} */\n      this.compiler.compilers.find(config => config.options.devServer);\n\n      if (compilerWithDevServer) {\n        return compilerWithDevServer.options;\n      } // Configuration with `web` preset\n\n\n      const compilerWithWebPreset =\n      /** @type {MultiCompiler} */\n      this.compiler.compilers.find(config => config.options.externalsPresets && config.options.externalsPresets.web || [\"web\", \"webworker\", \"electron-preload\", \"electron-renderer\", \"node-webkit\", // eslint-disable-next-line no-undefined\n      undefined, null].includes(\n      /** @type {string} */\n      config.options.target));\n\n      if (compilerWithWebPreset) {\n        return compilerWithWebPreset.options;\n      } // Fallback\n\n\n      return (\n        /** @type {MultiCompiler} */\n        this.compiler.compilers[0].options\n      );\n    }\n\n    return (\n      /** @type {Compiler} */\n      this.compiler.options\n    );\n  }\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n\n\n  normalizeOptions() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        options\n      } = _this;\n\n      const compilerOptions = _this.getCompilerOptions(); // TODO remove `{}` after drop webpack v4 support\n\n\n      const compilerWatchOptions = compilerOptions.watchOptions || {};\n      /**\n       * @param {WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} watchOptions\n       * @returns {WatchOptions}\n       */\n\n      const getWatchOptions = (watchOptions = {}) => {\n        const getPolling = () => {\n          if (typeof watchOptions.usePolling !== \"undefined\") {\n            return watchOptions.usePolling;\n          }\n\n          if (typeof watchOptions.poll !== \"undefined\") {\n            return Boolean(watchOptions.poll);\n          }\n\n          if (typeof compilerWatchOptions.poll !== \"undefined\") {\n            return Boolean(compilerWatchOptions.poll);\n          }\n\n          return false;\n        };\n\n        const getInterval = () => {\n          if (typeof watchOptions.interval !== \"undefined\") {\n            return watchOptions.interval;\n          }\n\n          if (typeof watchOptions.poll === \"number\") {\n            return watchOptions.poll;\n          }\n\n          if (typeof compilerWatchOptions.poll === \"number\") {\n            return compilerWatchOptions.poll;\n          }\n        };\n\n        const usePolling = getPolling();\n        const interval = getInterval();\n        const {\n          poll,\n          ...rest\n        } = watchOptions;\n        return {\n          ignoreInitial: true,\n          persistent: true,\n          followSymlinks: false,\n          atomic: false,\n          alwaysStat: true,\n          ignorePermissionErrors: true,\n          // Respect options from compiler watchOptions\n          usePolling,\n          interval,\n          ignored: watchOptions.ignored,\n          // TODO: we respect these options for all watch options and allow developers to pass them to chokidar, but chokidar doesn't have these options maybe we need revisit that in future\n          ...rest\n        };\n      };\n      /**\n       * @param {string | Static | undefined} [optionsForStatic]\n       * @returns {NormalizedStatic}\n       */\n\n\n      const getStaticItem = optionsForStatic => {\n        const getDefaultStaticOptions = () => {\n          return {\n            directory: path.join(process.cwd(), \"public\"),\n            staticOptions: {},\n            publicPath: [\"/\"],\n            serveIndex: {\n              icons: true\n            },\n            watch: getWatchOptions()\n          };\n        };\n        /** @type {NormalizedStatic} */\n\n\n        let item;\n\n        if (typeof optionsForStatic === \"undefined\") {\n          item = getDefaultStaticOptions();\n        } else if (typeof optionsForStatic === \"string\") {\n          item = { ...getDefaultStaticOptions(),\n            directory: optionsForStatic\n          };\n        } else {\n          const def = getDefaultStaticOptions();\n          item = {\n            directory: typeof optionsForStatic.directory !== \"undefined\" ? optionsForStatic.directory : def.directory,\n            // TODO: do merge in the next major release\n            staticOptions: typeof optionsForStatic.staticOptions !== \"undefined\" ? optionsForStatic.staticOptions : def.staticOptions,\n            publicPath: // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.publicPath !== \"undefined\" ? Array.isArray(optionsForStatic.publicPath) ? optionsForStatic.publicPath : [optionsForStatic.publicPath] : def.publicPath,\n            // TODO: do merge in the next major release\n            serveIndex: // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.serveIndex !== \"undefined\" ? typeof optionsForStatic.serveIndex === \"boolean\" && optionsForStatic.serveIndex ? def.serveIndex : optionsForStatic.serveIndex : def.serveIndex,\n            watch: // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.watch !== \"undefined\" ? // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.watch === \"boolean\" ? optionsForStatic.watch ? def.watch : false : getWatchOptions(optionsForStatic.watch) : def.watch\n          };\n        }\n\n        if (Server.isAbsoluteURL(item.directory)) {\n          throw new Error(\"Using a URL as static.directory is not supported\");\n        }\n\n        return item;\n      };\n\n      if (typeof options.allowedHosts === \"undefined\") {\n        // AllowedHosts allows some default hosts picked from `options.host` or `webSocketURL.hostname` and `localhost`\n        options.allowedHosts = \"auto\";\n      } // We store allowedHosts as array when supplied as string\n      else if (typeof options.allowedHosts === \"string\" && options.allowedHosts !== \"auto\" && options.allowedHosts !== \"all\") {\n        options.allowedHosts = [options.allowedHosts];\n      } // CLI pass options as array, we should normalize them\n      else if (Array.isArray(options.allowedHosts) && options.allowedHosts.includes(\"all\")) {\n        options.allowedHosts = \"all\";\n      }\n\n      if (typeof options.bonjour === \"undefined\") {\n        options.bonjour = false;\n      } else if (typeof options.bonjour === \"boolean\") {\n        options.bonjour = options.bonjour ? {} : false;\n      }\n\n      if (typeof options.client === \"undefined\" || typeof options.client === \"object\" && options.client !== null) {\n        if (!options.client) {\n          options.client = {};\n        }\n\n        if (typeof options.client.webSocketURL === \"undefined\") {\n          options.client.webSocketURL = {};\n        } else if (typeof options.client.webSocketURL === \"string\") {\n          const parsedURL = new URL(options.client.webSocketURL);\n          options.client.webSocketURL = {\n            protocol: parsedURL.protocol,\n            hostname: parsedURL.hostname,\n            port: parsedURL.port.length > 0 ? Number(parsedURL.port) : \"\",\n            pathname: parsedURL.pathname,\n            username: parsedURL.username,\n            password: parsedURL.password\n          };\n        } else if (typeof options.client.webSocketURL.port === \"string\") {\n          options.client.webSocketURL.port = Number(options.client.webSocketURL.port);\n        } // Enable client overlay by default\n\n\n        if (typeof options.client.overlay === \"undefined\") {\n          options.client.overlay = true;\n        } else if (typeof options.client.overlay !== \"boolean\") {\n          options.client.overlay = {\n            errors: true,\n            warnings: true,\n            ...options.client.overlay\n          };\n        }\n\n        if (typeof options.client.reconnect === \"undefined\") {\n          options.client.reconnect = 10;\n        } else if (options.client.reconnect === true) {\n          options.client.reconnect = Infinity;\n        } else if (options.client.reconnect === false) {\n          options.client.reconnect = 0;\n        } // Respect infrastructureLogging.level\n\n\n        if (typeof options.client.logging === \"undefined\") {\n          options.client.logging = compilerOptions.infrastructureLogging ? compilerOptions.infrastructureLogging.level : \"info\";\n        }\n      }\n\n      if (typeof options.compress === \"undefined\") {\n        options.compress = true;\n      }\n\n      if (typeof options.devMiddleware === \"undefined\") {\n        options.devMiddleware = {};\n      } // No need to normalize `headers`\n\n\n      if (typeof options.historyApiFallback === \"undefined\") {\n        options.historyApiFallback = false;\n      } else if (typeof options.historyApiFallback === \"boolean\" && options.historyApiFallback) {\n        options.historyApiFallback = {};\n      } // No need to normalize `host`\n\n\n      options.hot = typeof options.hot === \"boolean\" || options.hot === \"only\" ? options.hot : true;\n      const isHTTPs = Boolean(options.https);\n      const isSPDY = Boolean(options.http2);\n\n      if (isHTTPs) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'https' option is deprecated. Please use the 'server' option.\", \"DEP_WEBPACK_DEV_SERVER_HTTPS\")();\n      }\n\n      if (isSPDY) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'http2' option is deprecated. Please use the 'server' option.\", \"DEP_WEBPACK_DEV_SERVER_HTTP2\")();\n      }\n\n      options.server = {\n        type: // eslint-disable-next-line no-nested-ternary\n        typeof options.server === \"string\" ? options.server : // eslint-disable-next-line no-nested-ternary\n        typeof (options.server || {}).type === \"string\" ?\n        /** @type {ServerConfiguration} */\n        options.server.type || \"http\" : // eslint-disable-next-line no-nested-ternary\n        isSPDY ? \"spdy\" : isHTTPs ? \"https\" : \"http\",\n        options: { ...\n          /** @type {ServerOptions} */\n          options.https,\n          ...\n          /** @type {ServerConfiguration} */\n          (options.server || {}).options\n        }\n      };\n\n      if (options.server.type === \"spdy\" && typeof\n      /** @type {ServerOptions} */\n      options.server.options.spdy === \"undefined\") {\n        /** @type {ServerOptions} */\n        options.server.options.spdy = {\n          protocols: [\"h2\", \"http/1.1\"]\n        };\n      }\n\n      if (options.server.type === \"https\" || options.server.type === \"spdy\") {\n        if (typeof\n        /** @type {ServerOptions} */\n        options.server.options.requestCert === \"undefined\") {\n          /** @type {ServerOptions} */\n          options.server.options.requestCert = false;\n        }\n\n        const httpsProperties =\n        /** @type {Array<keyof ServerOptions>} */\n        [\"cacert\", \"ca\", \"cert\", \"crl\", \"key\", \"pfx\"];\n\n        for (const property of httpsProperties) {\n          if (typeof\n          /** @type {ServerOptions} */\n          options.server.options[property] === \"undefined\") {\n            // eslint-disable-next-line no-continue\n            continue;\n          } // @ts-ignore\n\n\n          if (property === \"cacert\") {\n            // TODO remove the `cacert` option in favor `ca` in the next major release\n            util.deprecate(() => {}, \"The 'cacert' option is deprecated. Please use the 'ca' option.\", \"DEP_WEBPACK_DEV_SERVER_CACERT\")();\n          }\n          /** @type {any} */\n\n\n          const value =\n          /** @type {ServerOptions} */\n          options.server.options[property];\n          /**\n           * @param {string | Buffer | undefined} item\n           * @returns {string | Buffer | undefined}\n           */\n\n          const readFile = item => {\n            if (Buffer.isBuffer(item) || typeof item === \"object\" && item !== null && !Array.isArray(item)) {\n              return item;\n            }\n\n            if (item) {\n              let stats = null;\n\n              try {\n                stats = fs.lstatSync(fs.realpathSync(item)).isFile();\n              } catch (error) {// Ignore error\n              } // It is file\n\n\n              return stats ? fs.readFileSync(item) : item;\n            }\n          };\n          /** @type {any} */\n\n\n          options.server.options[property] = Array.isArray(value) ? value.map(item => readFile(item)) : readFile(value);\n        }\n\n        let fakeCert;\n\n        if (!\n        /** @type {ServerOptions} */\n        options.server.options.key ||\n        /** @type {ServerOptions} */\n        (!options.server.options).cert) {\n          const certificateDir = Server.findCacheDir();\n          const certificatePath = path.join(certificateDir, \"server.pem\");\n          let certificateExists;\n\n          try {\n            const certificate = yield fs.promises.stat(certificatePath);\n            certificateExists = certificate.isFile();\n          } catch {\n            certificateExists = false;\n          }\n\n          if (certificateExists) {\n            const certificateTtl = 1000 * 60 * 60 * 24;\n            const certificateStat = yield fs.promises.stat(certificatePath);\n            const now = Number(new Date()); // cert is more than 30 days old, kill it with fire\n\n            if ((now - Number(certificateStat.ctime)) / certificateTtl > 30) {\n              const {\n                promisify\n              } = require(\"util\");\n\n              const rimraf = require(\"rimraf\");\n\n              const del = promisify(rimraf);\n\n              _this.logger.info(\"SSL certificate is more than 30 days old. Removing...\");\n\n              yield del(certificatePath);\n              certificateExists = false;\n            }\n          }\n\n          if (!certificateExists) {\n            _this.logger.info(\"Generating SSL certificate...\"); // @ts-ignore\n\n\n            const selfsigned = require(\"selfsigned\");\n\n            const attributes = [{\n              name: \"commonName\",\n              value: \"localhost\"\n            }];\n            const pems = selfsigned.generate(attributes, {\n              algorithm: \"sha256\",\n              days: 30,\n              keySize: 2048,\n              extensions: [{\n                name: \"basicConstraints\",\n                cA: true\n              }, {\n                name: \"keyUsage\",\n                keyCertSign: true,\n                digitalSignature: true,\n                nonRepudiation: true,\n                keyEncipherment: true,\n                dataEncipherment: true\n              }, {\n                name: \"extKeyUsage\",\n                serverAuth: true,\n                clientAuth: true,\n                codeSigning: true,\n                timeStamping: true\n              }, {\n                name: \"subjectAltName\",\n                altNames: [{\n                  // type 2 is DNS\n                  type: 2,\n                  value: \"localhost\"\n                }, {\n                  type: 2,\n                  value: \"localhost.localdomain\"\n                }, {\n                  type: 2,\n                  value: \"lvh.me\"\n                }, {\n                  type: 2,\n                  value: \"*.lvh.me\"\n                }, {\n                  type: 2,\n                  value: \"[::1]\"\n                }, {\n                  // type 7 is IP\n                  type: 7,\n                  ip: \"127.0.0.1\"\n                }, {\n                  type: 7,\n                  ip: \"fe80::1\"\n                }]\n              }]\n            });\n            yield fs.promises.mkdir(certificateDir, {\n              recursive: true\n            });\n            yield fs.promises.writeFile(certificatePath, pems.private + pems.cert, {\n              encoding: \"utf8\"\n            });\n          }\n\n          fakeCert = yield fs.promises.readFile(certificatePath);\n\n          _this.logger.info(`SSL certificate: ${certificatePath}`);\n        }\n\n        if (\n        /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n        options.server.options.cacert) {\n          if (\n          /** @type {ServerOptions} */\n          options.server.options.ca) {\n            _this.logger.warn(\"Do not specify 'ca' and 'cacert' options together, the 'ca' option will be used.\");\n          } else {\n            /** @type {ServerOptions} */\n            options.server.options.ca =\n            /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n            options.server.options.cacert;\n          }\n\n          delete\n          /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n          options.server.options.cacert;\n        }\n        /** @type {ServerOptions} */\n\n\n        options.server.options.key =\n        /** @type {ServerOptions} */\n        options.server.options.key || fakeCert;\n        /** @type {ServerOptions} */\n\n        options.server.options.cert =\n        /** @type {ServerOptions} */\n        options.server.options.cert || fakeCert;\n      }\n\n      if (typeof options.ipc === \"boolean\") {\n        const isWindows = process.platform === \"win32\";\n        const pipePrefix = isWindows ? \"\\\\\\\\.\\\\pipe\\\\\" : os.tmpdir();\n        const pipeName = \"webpack-dev-server.sock\";\n        options.ipc = path.join(pipePrefix, pipeName);\n      }\n\n      options.liveReload = typeof options.liveReload !== \"undefined\" ? options.liveReload : true;\n      options.magicHtml = typeof options.magicHtml !== \"undefined\" ? options.magicHtml : true; // https://github.com/webpack/webpack-dev-server/issues/1990\n\n      const defaultOpenOptions = {\n        wait: false\n      };\n      /**\n       * @param {any} target\n       * @returns {NormalizedOpen[]}\n       */\n      // TODO: remove --open-app in favor of --open-app-name\n\n      const getOpenItemsFromObject = ({\n        target,\n        ...rest\n      }) => {\n        const normalizedOptions = { ...defaultOpenOptions,\n          ...rest\n        };\n\n        if (typeof normalizedOptions.app === \"string\") {\n          normalizedOptions.app = {\n            name: normalizedOptions.app\n          };\n        }\n\n        const normalizedTarget = typeof target === \"undefined\" ? \"<url>\" : target;\n\n        if (Array.isArray(normalizedTarget)) {\n          return normalizedTarget.map(singleTarget => {\n            return {\n              target: singleTarget,\n              options: normalizedOptions\n            };\n          });\n        }\n\n        return [{\n          target: normalizedTarget,\n          options: normalizedOptions\n        }];\n      };\n\n      if (typeof options.open === \"undefined\") {\n        /** @type {NormalizedOpen[]} */\n        options.open = [];\n      } else if (typeof options.open === \"boolean\") {\n        /** @type {NormalizedOpen[]} */\n        options.open = options.open ? [{\n          target: \"<url>\",\n          options:\n          /** @type {OpenOptions} */\n          defaultOpenOptions\n        }] : [];\n      } else if (typeof options.open === \"string\") {\n        /** @type {NormalizedOpen[]} */\n        options.open = [{\n          target: options.open,\n          options: defaultOpenOptions\n        }];\n      } else if (Array.isArray(options.open)) {\n        /**\n         * @type {NormalizedOpen[]}\n         */\n        const result = [];\n        options.open.forEach(item => {\n          if (typeof item === \"string\") {\n            result.push({\n              target: item,\n              options: defaultOpenOptions\n            });\n            return;\n          }\n\n          result.push(...getOpenItemsFromObject(item));\n        });\n        /** @type {NormalizedOpen[]} */\n\n        options.open = result;\n      } else {\n        /** @type {NormalizedOpen[]} */\n        options.open = [...getOpenItemsFromObject(options.open)];\n      }\n\n      if (options.onAfterSetupMiddleware) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\", `DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE`)();\n      }\n\n      if (options.onBeforeSetupMiddleware) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\", `DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE`)();\n      }\n\n      if (typeof options.port === \"string\" && options.port !== \"auto\") {\n        options.port = Number(options.port);\n      }\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: {\n       *   'context': { options }\n       * }\n       * OR\n       * proxy: {\n       *   'context': 'target'\n       * }\n       */\n\n\n      if (typeof options.proxy !== \"undefined\") {\n        // TODO remove in the next major release, only accept `Array`\n        if (!Array.isArray(options.proxy)) {\n          if (Object.prototype.hasOwnProperty.call(options.proxy, \"target\") || Object.prototype.hasOwnProperty.call(options.proxy, \"router\")) {\n            /** @type {ProxyConfigArray} */\n            options.proxy = [\n            /** @type {ProxyConfigMap} */\n            options.proxy];\n          } else {\n            /** @type {ProxyConfigArray} */\n            options.proxy = Object.keys(options.proxy).map(\n            /**\n             * @param {string} context\n             * @returns {HttpProxyMiddlewareOptions}\n             */\n            context => {\n              let proxyOptions; // For backwards compatibility reasons.\n\n              const correctedContext = context.replace(/^\\*$/, \"**\").replace(/\\/\\*$/, \"\");\n\n              if (typeof\n              /** @type {ProxyConfigMap} */\n              options.proxy[context] === \"string\") {\n                proxyOptions = {\n                  context: correctedContext,\n                  target:\n                  /** @type {ProxyConfigMap} */\n                  options.proxy[context]\n                };\n              } else {\n                proxyOptions = { // @ts-ignore\n                  ...\n                  /** @type {ProxyConfigMap} */\n                  options.proxy[context]\n                };\n                proxyOptions.context = correctedContext;\n              }\n\n              return proxyOptions;\n            });\n          }\n        }\n        /** @type {ProxyConfigArray} */\n\n\n        options.proxy =\n        /** @type {ProxyConfigArray} */\n        options.proxy.map(item => {\n          if (typeof item === \"function\") {\n            return item;\n          }\n          /**\n           * @param {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined | \"none\" | \"log\" | \"verbose\"} level\n           * @returns {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined}\n           */\n\n\n          const getLogLevelForProxy = level => {\n            if (level === \"none\") {\n              return \"silent\";\n            }\n\n            if (level === \"log\") {\n              return \"info\";\n            }\n\n            if (level === \"verbose\") {\n              return \"debug\";\n            }\n\n            return level;\n          };\n\n          if (typeof item.logLevel === \"undefined\") {\n            item.logLevel = getLogLevelForProxy(compilerOptions.infrastructureLogging ? compilerOptions.infrastructureLogging.level : \"info\");\n          }\n\n          if (typeof item.logProvider === \"undefined\") {\n            item.logProvider = () => _this.logger;\n          }\n\n          return item;\n        });\n      }\n\n      if (typeof options.setupExitSignals === \"undefined\") {\n        options.setupExitSignals = true;\n      }\n\n      if (typeof options.static === \"undefined\") {\n        options.static = [getStaticItem()];\n      } else if (typeof options.static === \"boolean\") {\n        options.static = options.static ? [getStaticItem()] : false;\n      } else if (typeof options.static === \"string\") {\n        options.static = [getStaticItem(options.static)];\n      } else if (Array.isArray(options.static)) {\n        options.static = options.static.map(item => getStaticItem(item));\n      } else {\n        options.static = [getStaticItem(options.static)];\n      }\n\n      if (typeof options.watchFiles === \"string\") {\n        options.watchFiles = [{\n          paths: options.watchFiles,\n          options: getWatchOptions()\n        }];\n      } else if (typeof options.watchFiles === \"object\" && options.watchFiles !== null && !Array.isArray(options.watchFiles)) {\n        options.watchFiles = [{\n          paths: options.watchFiles.paths,\n          options: getWatchOptions(options.watchFiles.options || {})\n        }];\n      } else if (Array.isArray(options.watchFiles)) {\n        options.watchFiles = options.watchFiles.map(item => {\n          if (typeof item === \"string\") {\n            return {\n              paths: item,\n              options: getWatchOptions()\n            };\n          }\n\n          return {\n            paths: item.paths,\n            options: getWatchOptions(item.options || {})\n          };\n        });\n      } else {\n        options.watchFiles = [];\n      }\n\n      const defaultWebSocketServerType = \"ws\";\n      const defaultWebSocketServerOptions = {\n        path: \"/ws\"\n      };\n\n      if (typeof options.webSocketServer === \"undefined\") {\n        options.webSocketServer = {\n          type: defaultWebSocketServerType,\n          options: defaultWebSocketServerOptions\n        };\n      } else if (typeof options.webSocketServer === \"boolean\" && !options.webSocketServer) {\n        options.webSocketServer = false;\n      } else if (typeof options.webSocketServer === \"string\" || typeof options.webSocketServer === \"function\") {\n        options.webSocketServer = {\n          type: options.webSocketServer,\n          options: defaultWebSocketServerOptions\n        };\n      } else {\n        options.webSocketServer = {\n          type:\n          /** @type {WebSocketServerConfiguration} */\n          options.webSocketServer.type || defaultWebSocketServerType,\n          options: { ...defaultWebSocketServerOptions,\n            ...\n            /** @type {WebSocketServerConfiguration} */\n            options.webSocketServer.options\n          }\n        };\n        const webSocketServer =\n        /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n        options.webSocketServer;\n\n        if (typeof webSocketServer.options.port === \"string\") {\n          webSocketServer.options.port = Number(webSocketServer.options.port);\n        }\n      }\n    })();\n  }\n  /**\n   * @private\n   * @returns {string}\n   */\n\n\n  getClientTransport() {\n    let clientImplementation;\n    let clientImplementationFound = true;\n    const isKnownWebSocketServerImplementation = this.options.webSocketServer && typeof\n    /** @type {WebSocketServerConfiguration} */\n    this.options.webSocketServer.type === \"string\" && ( // @ts-ignore\n    this.options.webSocketServer.type === \"ws\" ||\n    /** @type {WebSocketServerConfiguration} */\n    this.options.webSocketServer.type === \"sockjs\");\n    let clientTransport;\n\n    if (this.options.client) {\n      if (typeof\n      /** @type {ClientConfiguration} */\n      this.options.client.webSocketTransport !== \"undefined\") {\n        clientTransport =\n        /** @type {ClientConfiguration} */\n        this.options.client.webSocketTransport;\n      } else if (isKnownWebSocketServerImplementation) {\n        clientTransport =\n        /** @type {WebSocketServerConfiguration} */\n        this.options.webSocketServer.type;\n      } else {\n        clientTransport = \"ws\";\n      }\n    } else {\n      clientTransport = \"ws\";\n    }\n\n    switch (typeof clientTransport) {\n      case \"string\":\n        // could be 'sockjs', 'ws', or a path that should be required\n        if (clientTransport === \"sockjs\") {\n          clientImplementation = require.resolve(\"../client/clients/SockJSClient\");\n        } else if (clientTransport === \"ws\") {\n          clientImplementation = require.resolve(\"../client/clients/WebSocketClient\");\n        } else {\n          try {\n            clientImplementation = require.resolve(clientTransport);\n          } catch (e) {\n            clientImplementationFound = false;\n          }\n        }\n\n        break;\n\n      default:\n        clientImplementationFound = false;\n    }\n\n    if (!clientImplementationFound) {\n      throw new Error(`${!isKnownWebSocketServerImplementation ? \"When you use custom web socket implementation you must explicitly specify client.webSocketTransport. \" : \"\"}client.webSocketTransport must be a string denoting a default implementation (e.g. 'sockjs', 'ws') or a full path to a JS file via require.resolve(...) which exports a class `);\n    }\n\n    return (\n      /** @type {string} */\n      clientImplementation\n    );\n  }\n  /**\n   * @private\n   * @returns {string}\n   */\n\n\n  getServerTransport() {\n    let implementation;\n    let implementationFound = true;\n\n    switch (typeof\n    /** @type {WebSocketServerConfiguration} */\n    this.options.webSocketServer.type) {\n      case \"string\":\n        // Could be 'sockjs', in the future 'ws', or a path that should be required\n        if (\n        /** @type {WebSocketServerConfiguration} */\n        this.options.webSocketServer.type === \"sockjs\") {\n          implementation = require(\"./servers/SockJSServer\");\n        } else if (\n        /** @type {WebSocketServerConfiguration} */\n        this.options.webSocketServer.type === \"ws\") {\n          implementation = require(\"./servers/WebsocketServer\");\n        } else {\n          try {\n            // eslint-disable-next-line import/no-dynamic-require\n            implementation = require(\n            /** @type {WebSocketServerConfiguration} */\n            this.options.webSocketServer.type);\n          } catch (error) {\n            implementationFound = false;\n          }\n        }\n\n        break;\n\n      case \"function\":\n        implementation =\n        /** @type {WebSocketServerConfiguration} */\n        this.options.webSocketServer.type;\n        break;\n\n      default:\n        implementationFound = false;\n    }\n\n    if (!implementationFound) {\n      throw new Error(\"webSocketServer (webSocketServer.type) must be a string denoting a default implementation (e.g. 'ws', 'sockjs'), a full path to \" + \"a JS file which exports a class extending BaseServer (webpack-dev-server/lib/servers/BaseServer.js) \" + \"via require.resolve(...), or the class itself which extends BaseServer\");\n    }\n\n    return implementation;\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupProgressPlugin() {\n    const {\n      ProgressPlugin\n    } =\n    /** @type {MultiCompiler}*/\n    this.compiler.compilers ?\n    /** @type {MultiCompiler}*/\n    this.compiler.compilers[0].webpack :\n    /** @type {Compiler}*/\n    this.compiler.webpack || // TODO remove me after drop webpack v4\n    require(\"webpack\");\n    new ProgressPlugin(\n    /**\n     * @param {number} percent\n     * @param {string} msg\n     * @param {string} addInfo\n     * @param {string} pluginName\n     */\n    (percent, msg, addInfo, pluginName) => {\n      percent = Math.floor(percent * 100);\n\n      if (percent === 100) {\n        msg = \"Compilation completed\";\n      }\n\n      if (addInfo) {\n        msg = `${msg} (${addInfo})`;\n      }\n\n      if (this.webSocketServer) {\n        this.sendMessage(this.webSocketServer.clients, \"progress-update\", {\n          percent,\n          msg,\n          pluginName\n        });\n      }\n\n      if (this.server) {\n        this.server.emit(\"progress-update\", {\n          percent,\n          msg,\n          pluginName\n        });\n      }\n    }).apply(this.compiler);\n  }\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n\n\n  initialize() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.options.webSocketServer) {\n        const compilers =\n        /** @type {MultiCompiler} */\n        _this2.compiler.compilers || [_this2.compiler];\n        compilers.forEach(compiler => {\n          _this2.addAdditionalEntries(compiler);\n\n          const webpack = compiler.webpack || require(\"webpack\");\n\n          new webpack.ProvidePlugin({\n            __webpack_dev_server_client__: _this2.getClientTransport()\n          }).apply(compiler); // TODO remove after drop webpack v4 support\n\n          compiler.options.plugins = compiler.options.plugins || [];\n\n          if (_this2.options.hot) {\n            const HMRPluginExists = compiler.options.plugins.find(p => p.constructor === webpack.HotModuleReplacementPlugin);\n\n            if (HMRPluginExists) {\n              _this2.logger.warn(`\"hot: true\" automatically applies HMR plugin, you don't have to add it manually to your webpack configuration.`);\n            } else {\n              // Apply the HMR plugin\n              const plugin = new webpack.HotModuleReplacementPlugin();\n              plugin.apply(compiler);\n            }\n          }\n        });\n\n        if (_this2.options.client &&\n        /** @type {ClientConfiguration} */\n        _this2.options.client.progress) {\n          _this2.setupProgressPlugin();\n        }\n      }\n\n      _this2.setupHooks();\n\n      _this2.setupApp();\n\n      _this2.setupHostHeaderCheck();\n\n      _this2.setupDevMiddleware(); // Should be after `webpack-dev-middleware`, otherwise other middlewares might rewrite response\n\n\n      _this2.setupBuiltInRoutes();\n\n      _this2.setupWatchFiles();\n\n      _this2.setupWatchStaticFiles();\n\n      _this2.setupMiddlewares();\n\n      _this2.createServer();\n\n      if (_this2.options.setupExitSignals) {\n        const signals = [\"SIGINT\", \"SIGTERM\"];\n        let needForceShutdown = false;\n        signals.forEach(signal => {\n          const listener = () => {\n            if (needForceShutdown) {\n              process.exit();\n            }\n\n            _this2.logger.info(\"Gracefully shutting down. To force exit, press ^C again. Please wait...\");\n\n            needForceShutdown = true;\n\n            _this2.stopCallback(() => {\n              if (typeof _this2.compiler.close === \"function\") {\n                _this2.compiler.close(() => {\n                  process.exit();\n                });\n              } else {\n                process.exit();\n              }\n            });\n          };\n\n          _this2.listeners.push({\n            name: signal,\n            listener\n          });\n\n          process.on(signal, listener);\n        });\n      } // Proxy WebSocket without the initial http request\n      // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n\n      /** @type {RequestHandler[]} */\n\n\n      _this2.webSocketProxies.forEach(webSocketProxy => {\n        /** @type {import(\"http\").Server} */\n        _this2.server.on(\"upgrade\",\n        /** @type {RequestHandler & { upgrade: NonNullable<RequestHandler[\"upgrade\"]> }} */\n        webSocketProxy.upgrade);\n      }, _this2);\n    })();\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupApp() {\n    /** @type {import(\"express\").Application | undefined}*/\n    // eslint-disable-next-line new-cap\n    this.app = new\n    /** @type {any} */\n    express();\n  }\n  /**\n   * @private\n   * @param {Stats | MultiStats} statsObj\n   * @returns {StatsCompilation}\n   */\n\n\n  getStats(statsObj) {\n    const stats = Server.DEFAULT_STATS;\n    const compilerOptions = this.getCompilerOptions(); // @ts-ignore\n\n    if (compilerOptions.stats && compilerOptions.stats.warningsFilter) {\n      // @ts-ignore\n      stats.warningsFilter = compilerOptions.stats.warningsFilter;\n    }\n\n    return statsObj.toJson(stats);\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupHooks() {\n    this.compiler.hooks.invalid.tap(\"webpack-dev-server\", () => {\n      if (this.webSocketServer) {\n        this.sendMessage(this.webSocketServer.clients, \"invalid\");\n      }\n    });\n    this.compiler.hooks.done.tap(\"webpack-dev-server\",\n    /**\n     * @param {Stats | MultiStats} stats\n     */\n    stats => {\n      if (this.webSocketServer) {\n        this.sendStats(this.webSocketServer.clients, this.getStats(stats));\n      }\n      /**\n       * @private\n       * @type {Stats | MultiStats}\n       */\n\n\n      this.stats = stats;\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupHostHeaderCheck() {\n    /** @type {import(\"express\").Application} */\n    this.app.all(\"*\",\n    /**\n     * @param {Request} req\n     * @param {Response} res\n     * @param {NextFunction} next\n     * @returns {void}\n     */\n    (req, res, next) => {\n      if (this.checkHeader(\n      /** @type {{ [key: string]: string | undefined }} */\n      req.headers, \"host\")) {\n        return next();\n      }\n\n      res.send(\"Invalid Host header\");\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupDevMiddleware() {\n    const webpackDevMiddleware = require(\"webpack-dev-middleware\"); // middleware for serving webpack bundle\n\n\n    this.middleware = webpackDevMiddleware(this.compiler, this.options.devMiddleware);\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupBuiltInRoutes() {\n    const {\n      app,\n      middleware\n    } = this;\n    /** @type {import(\"express\").Application} */\n\n    app.get(\"/__webpack_dev_server__/sockjs.bundle.js\",\n    /**\n     * @param {Request} req\n     * @param {Response} res\n     * @returns {void}\n     */\n    (req, res) => {\n      res.setHeader(\"Content-Type\", \"application/javascript\");\n      const clientPath = path.join(__dirname, \"..\", \"client\");\n      res.sendFile(path.join(clientPath, \"modules/sockjs-client/index.js\"));\n    });\n    /** @type {import(\"express\").Application} */\n\n    app.get(\"/webpack-dev-server/invalidate\",\n    /**\n     * @param {Request} _req\n     * @param {Response} res\n     * @returns {void}\n     */\n    (_req, res) => {\n      this.invalidate();\n      res.end();\n    });\n    /** @type {import(\"express\").Application} */\n\n    app.get(\"/webpack-dev-server\",\n    /**\n     * @param {Request} req\n     * @param {Response} res\n     * @returns {void}\n     */\n    (req, res) => {\n      /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n      middleware.waitUntilValid(stats => {\n        res.setHeader(\"Content-Type\", \"text/html\");\n        res.write('<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body>');\n        const statsForPrint = typeof\n        /** @type {MultiStats} */\n        stats.stats !== \"undefined\" ?\n        /** @type {MultiStats} */\n        stats.toJson().children : [\n        /** @type {Stats} */\n        stats.toJson()];\n        res.write(`<h1>Assets Report:</h1>`);\n        /**\n         * @type {StatsCompilation[]}\n         */\n\n        statsForPrint.forEach((item, index) => {\n          res.write(\"<div>\");\n          const name = // eslint-disable-next-line no-nested-ternary\n          typeof item.name !== \"undefined\" ? item.name :\n          /** @type {MultiStats} */\n          stats.stats ? `unnamed[${index}]` : \"unnamed\";\n          res.write(`<h2>Compilation: ${name}</h2>`);\n          res.write(\"<ul>\");\n          const publicPath = item.publicPath === \"auto\" ? \"\" : item.publicPath;\n\n          for (const asset of\n          /** @type {NonNullable<StatsCompilation[\"assets\"]>} */\n          item.assets) {\n            const assetName = asset.name;\n            const assetURL = `${publicPath}${assetName}`;\n            res.write(`<li>\n              <strong><a href=\"${assetURL}\" target=\"_blank\">${assetName}</a></strong>\n            </li>`);\n          }\n\n          res.write(\"</ul>\");\n          res.write(\"</div>\");\n        });\n        res.end(\"</body></html>\");\n      });\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupWatchStaticFiles() {\n    if (\n    /** @type {NormalizedStatic[]} */\n    this.options.static.length > 0) {\n      /** @type {NormalizedStatic[]} */\n      this.options.static.forEach(staticOption => {\n        if (staticOption.watch) {\n          this.watchFiles(staticOption.directory, staticOption.watch);\n        }\n      });\n    }\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupWatchFiles() {\n    const {\n      watchFiles\n    } = this.options;\n\n    if (\n    /** @type {WatchFiles[]} */\n    watchFiles.length > 0) {\n      /** @type {WatchFiles[]} */\n      watchFiles.forEach(item => {\n        this.watchFiles(item.paths, item.options);\n      });\n    }\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupMiddlewares() {\n    /**\n     * @type {Array<Middleware>}\n     */\n    let middlewares = []; // compress is placed last and uses unshift so that it will be the first middleware used\n\n    if (this.options.compress) {\n      const compression = require(\"compression\");\n\n      middlewares.push({\n        name: \"compression\",\n        middleware: compression()\n      });\n    }\n\n    if (typeof this.options.onBeforeSetupMiddleware === \"function\") {\n      this.options.onBeforeSetupMiddleware(this);\n    }\n\n    if (typeof this.options.headers !== \"undefined\") {\n      middlewares.push({\n        name: \"set-headers\",\n        path: \"*\",\n        middleware: this.setHeaders.bind(this)\n      });\n    }\n\n    middlewares.push({\n      name: \"webpack-dev-middleware\",\n      middleware:\n      /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n      this.middleware\n    });\n\n    if (this.options.proxy) {\n      const {\n        createProxyMiddleware\n      } = require(\"http-proxy-middleware\");\n      /**\n       * @param {ProxyConfigArrayItem} proxyConfig\n       * @returns {RequestHandler | undefined}\n       */\n\n\n      const getProxyMiddleware = proxyConfig => {\n        // It is possible to use the `bypass` method without a `target` or `router`.\n        // However, the proxy middleware has no use in this case, and will fail to instantiate.\n        if (proxyConfig.target) {\n          const context = proxyConfig.context || proxyConfig.path;\n          return createProxyMiddleware(\n          /** @type {string} */\n          context, proxyConfig);\n        }\n\n        if (proxyConfig.router) {\n          return createProxyMiddleware(proxyConfig);\n        }\n      };\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: [\n       *   {\n       *     context: \"value\",\n       *     ...options,\n       *   },\n       *   // or:\n       *   function() {\n       *     return {\n       *       context: \"context\",\n       *       ...options,\n       *     };\n       *   }\n       * ]\n       */\n\n      /** @type {ProxyConfigArray} */\n\n\n      this.options.proxy.forEach(proxyConfigOrCallback => {\n        /**\n         * @type {RequestHandler}\n         */\n        let proxyMiddleware;\n        let proxyConfig = typeof proxyConfigOrCallback === \"function\" ? proxyConfigOrCallback() : proxyConfigOrCallback;\n        proxyMiddleware =\n        /** @type {RequestHandler} */\n        getProxyMiddleware(proxyConfig);\n\n        if (proxyConfig.ws) {\n          this.webSocketProxies.push(proxyMiddleware);\n        }\n        /**\n         * @param {Request} req\n         * @param {Response} res\n         * @param {NextFunction} next\n         * @returns {Promise<void>}\n         */\n\n\n        const handler = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (req, res, next) {\n            if (typeof proxyConfigOrCallback === \"function\") {\n              const newProxyConfig = proxyConfigOrCallback(req, res, next);\n\n              if (newProxyConfig !== proxyConfig) {\n                proxyConfig = newProxyConfig;\n                proxyMiddleware =\n                /** @type {RequestHandler} */\n                getProxyMiddleware(proxyConfig);\n              }\n            } // - Check if we have a bypass function defined\n            // - In case the bypass function is defined we'll retrieve the\n            // bypassUrl from it otherwise bypassUrl would be null\n            // TODO remove in the next major in favor `context` and `router` options\n\n\n            const isByPassFuncDefined = typeof proxyConfig.bypass === \"function\";\n            const bypassUrl = isByPassFuncDefined ? yield (\n              /** @type {ByPass} */\n              proxyConfig.bypass(req, res, proxyConfig)\n            ) : null;\n\n            if (typeof bypassUrl === \"boolean\") {\n              // skip the proxy\n              // @ts-ignore\n              req.url = null;\n              next();\n            } else if (typeof bypassUrl === \"string\") {\n              // byPass to that url\n              req.url = bypassUrl;\n              next();\n            } else if (proxyMiddleware) {\n              return proxyMiddleware(req, res, next);\n            } else {\n              next();\n            }\n          });\n\n          return function handler(_x, _x2, _x3) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        middlewares.push({\n          name: \"http-proxy-middleware\",\n          middleware: handler\n        }); // Also forward error requests to the proxy so it can handle them.\n\n        middlewares.push({\n          name: \"http-proxy-middleware-error-handler\",\n          middleware:\n          /**\n           * @param {Error} error\n           * @param {Request} req\n           * @param {Response} res\n           * @param {NextFunction} next\n           * @returns {any}\n           */\n          (error, req, res, next) => handler(req, res, next)\n        });\n      });\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n        /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        this.middleware\n      });\n    }\n\n    if (\n    /** @type {NormalizedStatic[]} */\n    this.options.static.length > 0) {\n      /** @type {NormalizedStatic[]} */\n      this.options.static.forEach(staticOption => {\n        staticOption.publicPath.forEach(publicPath => {\n          middlewares.push({\n            name: \"express-static\",\n            path: publicPath,\n            middleware: express.static(staticOption.directory, staticOption.staticOptions)\n          });\n        });\n      });\n    }\n\n    if (this.options.historyApiFallback) {\n      const connectHistoryApiFallback = require(\"connect-history-api-fallback\");\n\n      const {\n        historyApiFallback\n      } = this.options;\n\n      if (typeof\n      /** @type {ConnectHistoryApiFallbackOptions} */\n      historyApiFallback.logger === \"undefined\" && !\n      /** @type {ConnectHistoryApiFallbackOptions} */\n      historyApiFallback.verbose) {\n        // @ts-ignore\n        historyApiFallback.logger = this.logger.log.bind(this.logger, \"[connect-history-api-fallback]\");\n      } // Fall back to /index.html if nothing else matches.\n\n\n      middlewares.push({\n        name: \"connect-history-api-fallback\",\n        middleware: connectHistoryApiFallback(\n        /** @type {ConnectHistoryApiFallbackOptions} */\n        historyApiFallback)\n      }); // include our middleware to ensure\n      // it is able to handle '/index.html' request after redirect\n\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n        /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        this.middleware\n      });\n\n      if (\n      /** @type {NormalizedStatic[]} */\n      this.options.static.length > 0) {\n        /** @type {NormalizedStatic[]} */\n        this.options.static.forEach(staticOption => {\n          staticOption.publicPath.forEach(publicPath => {\n            middlewares.push({\n              name: \"express-static\",\n              path: publicPath,\n              middleware: express.static(staticOption.directory, staticOption.staticOptions)\n            });\n          });\n        });\n      }\n    }\n\n    if (\n    /** @type {NormalizedStatic[]} */\n    this.options.static.length > 0) {\n      const serveIndex = require(\"serve-index\");\n      /** @type {NormalizedStatic[]} */\n\n\n      this.options.static.forEach(staticOption => {\n        staticOption.publicPath.forEach(publicPath => {\n          if (staticOption.serveIndex) {\n            middlewares.push({\n              name: \"serve-index\",\n              path: publicPath,\n\n              /**\n               * @param {Request} req\n               * @param {Response} res\n               * @param {NextFunction} next\n               * @returns {void}\n               */\n              middleware: (req, res, next) => {\n                // serve-index doesn't fallthrough non-get/head request to next middleware\n                if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n                  return next();\n                }\n\n                serveIndex(staticOption.directory,\n                /** @type {ServeIndexOptions} */\n                staticOption.serveIndex)(req, res, next);\n              }\n            });\n          }\n        });\n      });\n    }\n\n    if (this.options.magicHtml) {\n      middlewares.push({\n        name: \"serve-magic-html\",\n        middleware: this.serveMagicHtml.bind(this)\n      });\n    } // Register this middleware always as the last one so that it's only used as a\n    // fallback when no other middleware responses.\n\n\n    middlewares.push({\n      name: \"options-middleware\",\n      path: \"*\",\n\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @param {NextFunction} next\n       * @returns {void}\n       */\n      middleware: (req, res, next) => {\n        if (req.method === \"OPTIONS\") {\n          res.statusCode = 204;\n          res.setHeader(\"Content-Length\", \"0\");\n          res.end();\n          return;\n        }\n\n        next();\n      }\n    });\n\n    if (typeof this.options.setupMiddlewares === \"function\") {\n      middlewares = this.options.setupMiddlewares(middlewares, this);\n    }\n\n    middlewares.forEach(middleware => {\n      if (typeof middleware === \"function\") {\n        /** @type {import(\"express\").Application} */\n        this.app.use(middleware);\n      } else if (typeof middleware.path !== \"undefined\") {\n        /** @type {import(\"express\").Application} */\n        this.app.use(middleware.path, middleware.middleware);\n      } else {\n        /** @type {import(\"express\").Application} */\n        this.app.use(middleware.middleware);\n      }\n    });\n\n    if (typeof this.options.onAfterSetupMiddleware === \"function\") {\n      this.options.onAfterSetupMiddleware(this);\n    }\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  createServer() {\n    const {\n      type,\n      options\n    } =\n    /** @type {ServerConfiguration} */\n    this.options.server;\n    /** @type {import(\"http\").Server | undefined | null} */\n    // eslint-disable-next-line import/no-dynamic-require\n\n    this.server = require(\n    /** @type {string} */\n    type).createServer(options, this.app);\n    /** @type {import(\"http\").Server} */\n\n    this.server.on(\"connection\",\n    /**\n     * @param {Socket} socket\n     */\n    socket => {\n      // Add socket to list\n      this.sockets.push(socket);\n      socket.once(\"close\", () => {\n        // Remove socket from list\n        this.sockets.splice(this.sockets.indexOf(socket), 1);\n      });\n    });\n    /** @type {import(\"http\").Server} */\n\n    this.server.on(\"error\",\n    /**\n     * @param {Error} error\n     */\n    error => {\n      throw error;\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n  // TODO: remove `--web-socket-server` in favor of `--web-socket-server-type`\n\n\n  createWebSocketServer() {\n    /** @type {WebSocketServerImplementation | undefined | null} */\n    this.webSocketServer = new (\n    /** @type {any} */\n    this.getServerTransport())(this);\n    /** @type {WebSocketServerImplementation} */\n\n    this.webSocketServer.implementation.on(\"connection\",\n    /**\n     * @param {ClientConnection} client\n     * @param {IncomingMessage} request\n     */\n    (client, request) => {\n      /** @type {{ [key: string]: string | undefined } | undefined} */\n      const headers = // eslint-disable-next-line no-nested-ternary\n      typeof request !== \"undefined\" ?\n      /** @type {{ [key: string]: string | undefined }} */\n      request.headers : typeof\n      /** @type {import(\"sockjs\").Connection} */\n      client.headers !== \"undefined\" ?\n      /** @type {import(\"sockjs\").Connection} */\n      client.headers : // eslint-disable-next-line no-undefined\n      undefined;\n\n      if (!headers) {\n        this.logger.warn('webSocketServer implementation must pass headers for the \"connection\" event');\n      }\n\n      if (!headers || !this.checkHeader(headers, \"host\") || !this.checkHeader(headers, \"origin\")) {\n        this.sendMessage([client], \"error\", \"Invalid Host/Origin header\"); // With https enabled, the sendMessage above is encrypted asynchronously so not yet sent\n        // Terminate would prevent it sending, so use close to allow it to be sent\n\n        client.close();\n        return;\n      }\n\n      if (this.options.hot === true || this.options.hot === \"only\") {\n        this.sendMessage([client], \"hot\");\n      }\n\n      if (this.options.liveReload) {\n        this.sendMessage([client], \"liveReload\");\n      }\n\n      if (this.options.client &&\n      /** @type {ClientConfiguration} */\n      this.options.client.progress) {\n        this.sendMessage([client], \"progress\",\n        /** @type {ClientConfiguration} */\n        this.options.client.progress);\n      }\n\n      if (this.options.client &&\n      /** @type {ClientConfiguration} */\n      this.options.client.reconnect) {\n        this.sendMessage([client], \"reconnect\",\n        /** @type {ClientConfiguration} */\n        this.options.client.reconnect);\n      }\n\n      if (this.options.client &&\n      /** @type {ClientConfiguration} */\n      this.options.client.overlay) {\n        this.sendMessage([client], \"overlay\",\n        /** @type {ClientConfiguration} */\n        this.options.client.overlay);\n      }\n\n      if (!this.stats) {\n        return;\n      }\n\n      this.sendStats([client], this.getStats(this.stats), true);\n    });\n  }\n  /**\n   * @private\n   * @param {string} defaultOpenTarget\n   * @returns {void}\n   */\n\n\n  openBrowser(defaultOpenTarget) {\n    const open = require(\"open\");\n\n    Promise.all(\n    /** @type {NormalizedOpen[]} */\n    this.options.open.map(item => {\n      /**\n       * @type {string}\n       */\n      let openTarget;\n\n      if (item.target === \"<url>\") {\n        openTarget = defaultOpenTarget;\n      } else {\n        openTarget = Server.isAbsoluteURL(item.target) ? item.target : new URL(item.target, defaultOpenTarget).toString();\n      }\n\n      return open(openTarget, item.options).catch(() => {\n        this.logger.warn(`Unable to open \"${openTarget}\" page${item.options.app ? ` in \"${\n        /** @type {import(\"open\").App} */\n        item.options.app.name}\" app${\n        /** @type {import(\"open\").App} */\n        item.options.app.arguments ? ` with \"${\n        /** @type {import(\"open\").App} */\n        item.options.app.arguments.join(\" \")}\" arguments` : \"\"}` : \"\"}. If you are running in a headless environment, please do not use the \"open\" option or related flags like \"--open\", \"--open-target\", and \"--open-app\".`);\n      });\n    }));\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  runBonjour() {\n    const {\n      Bonjour\n    } = require(\"bonjour-service\");\n    /**\n     * @private\n     * @type {Bonjour | undefined}\n     */\n\n\n    this.bonjour = new Bonjour();\n    this.bonjour.publish({\n      // @ts-expect-error\n      name: `Webpack Dev Server ${os.hostname()}:${this.options.port}`,\n      // @ts-expect-error\n      port:\n      /** @type {number} */\n      this.options.port,\n      // @ts-expect-error\n      type:\n      /** @type {ServerConfiguration} */\n      this.options.server.type === \"http\" ? \"http\" : \"https\",\n      subtypes: [\"webpack\"],\n      ...\n      /** @type {BonjourOptions} */\n      this.options.bonjour\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  stopBonjour(callback = () => {}) {\n    /** @type {Bonjour} */\n    this.bonjour.unpublishAll(() => {\n      /** @type {Bonjour} */\n      this.bonjour.destroy();\n\n      if (callback) {\n        callback();\n      }\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  logStatus() {\n    const {\n      isColorSupported,\n      cyan,\n      red\n    } = require(\"colorette\");\n    /**\n     * @param {Compiler[\"options\"]} compilerOptions\n     * @returns {boolean}\n     */\n\n\n    const getColorsOption = compilerOptions => {\n      /**\n       * @type {boolean}\n       */\n      let colorsEnabled;\n\n      if (compilerOptions.stats && typeof\n      /** @type {StatsOptions} */\n      compilerOptions.stats.colors !== \"undefined\") {\n        colorsEnabled =\n        /** @type {boolean} */\n\n        /** @type {StatsOptions} */\n        compilerOptions.stats.colors;\n      } else {\n        colorsEnabled = isColorSupported;\n      }\n\n      return colorsEnabled;\n    };\n\n    const colors = {\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      info(useColor, msg) {\n        if (useColor) {\n          return cyan(msg);\n        }\n\n        return msg;\n      },\n\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      error(useColor, msg) {\n        if (useColor) {\n          return red(msg);\n        }\n\n        return msg;\n      }\n\n    };\n    const useColor = getColorsOption(this.getCompilerOptions());\n\n    if (this.options.ipc) {\n      this.logger.info(`Project is running at: \"${\n      /** @type {import(\"http\").Server} */\n      this.server.address()}\"`);\n    } else {\n      const protocol =\n      /** @type {ServerConfiguration} */\n      this.options.server.type === \"http\" ? \"http\" : \"https\";\n      const {\n        address,\n        port\n      } =\n      /** @type {import(\"net\").AddressInfo} */\n\n      /** @type {import(\"http\").Server} */\n      this.server.address();\n      /**\n       * @param {string} newHostname\n       * @returns {string}\n       */\n\n      const prettyPrintURL = newHostname => url.format({\n        protocol,\n        hostname: newHostname,\n        port,\n        pathname: \"/\"\n      });\n\n      let server;\n      let localhost;\n      let loopbackIPv4;\n      let loopbackIPv6;\n      let networkUrlIPv4;\n      let networkUrlIPv6;\n\n      if (this.options.host) {\n        if (this.options.host === \"localhost\") {\n          localhost = prettyPrintURL(\"localhost\");\n        } else {\n          let isIP;\n\n          try {\n            isIP = ipaddr.parse(this.options.host);\n          } catch (error) {// Ignore\n          }\n\n          if (!isIP) {\n            server = prettyPrintURL(this.options.host);\n          }\n        }\n      }\n\n      const parsedIP = ipaddr.parse(address);\n\n      if (parsedIP.range() === \"unspecified\") {\n        localhost = prettyPrintURL(\"localhost\");\n        const networkIPv4 = Server.internalIPSync(\"v4\");\n\n        if (networkIPv4) {\n          networkUrlIPv4 = prettyPrintURL(networkIPv4);\n        }\n\n        const networkIPv6 = Server.internalIPSync(\"v6\");\n\n        if (networkIPv6) {\n          networkUrlIPv6 = prettyPrintURL(networkIPv6);\n        }\n      } else if (parsedIP.range() === \"loopback\") {\n        if (parsedIP.kind() === \"ipv4\") {\n          loopbackIPv4 = prettyPrintURL(parsedIP.toString());\n        } else if (parsedIP.kind() === \"ipv6\") {\n          loopbackIPv6 = prettyPrintURL(parsedIP.toString());\n        }\n      } else {\n        networkUrlIPv4 = parsedIP.kind() === \"ipv6\" &&\n        /** @type {IPv6} */\n        parsedIP.isIPv4MappedAddress() ? prettyPrintURL(\n        /** @type {IPv6} */\n        parsedIP.toIPv4Address().toString()) : prettyPrintURL(address);\n\n        if (parsedIP.kind() === \"ipv6\") {\n          networkUrlIPv6 = prettyPrintURL(address);\n        }\n      }\n\n      this.logger.info(\"Project is running at:\");\n\n      if (server) {\n        this.logger.info(`Server: ${colors.info(useColor, server)}`);\n      }\n\n      if (localhost || loopbackIPv4 || loopbackIPv6) {\n        const loopbacks = [];\n\n        if (localhost) {\n          loopbacks.push([colors.info(useColor, localhost)]);\n        }\n\n        if (loopbackIPv4) {\n          loopbacks.push([colors.info(useColor, loopbackIPv4)]);\n        }\n\n        if (loopbackIPv6) {\n          loopbacks.push([colors.info(useColor, loopbackIPv6)]);\n        }\n\n        this.logger.info(`Loopback: ${loopbacks.join(\", \")}`);\n      }\n\n      if (networkUrlIPv4) {\n        this.logger.info(`On Your Network (IPv4): ${colors.info(useColor, networkUrlIPv4)}`);\n      }\n\n      if (networkUrlIPv6) {\n        this.logger.info(`On Your Network (IPv6): ${colors.info(useColor, networkUrlIPv6)}`);\n      }\n\n      if (\n      /** @type {NormalizedOpen[]} */\n      this.options.open.length > 0) {\n        const openTarget = prettyPrintURL(this.options.host || \"localhost\");\n        this.openBrowser(openTarget);\n      }\n    }\n\n    if (\n    /** @type {NormalizedStatic[]} */\n    this.options.static.length > 0) {\n      this.logger.info(`Content not from webpack is served from '${colors.info(useColor,\n      /** @type {NormalizedStatic[]} */\n      this.options.static.map(staticOption => staticOption.directory).join(\", \"))}' directory`);\n    }\n\n    if (this.options.historyApiFallback) {\n      this.logger.info(`404s will fallback to '${colors.info(useColor,\n      /** @type {ConnectHistoryApiFallbackOptions} */\n      this.options.historyApiFallback.index || \"/index.html\")}'`);\n    }\n\n    if (this.options.bonjour) {\n      const bonjourProtocol =\n      /** @type {BonjourOptions} */\n      this.options.bonjour.type ||\n      /** @type {ServerConfiguration} */\n      this.options.server.type === \"http\" ? \"http\" : \"https\";\n      this.logger.info(`Broadcasting \"${bonjourProtocol}\" with subtype of \"webpack\" via ZeroConf DNS (Bonjour)`);\n    }\n  }\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   */\n\n\n  setHeaders(req, res, next) {\n    let {\n      headers\n    } = this.options;\n\n    if (headers) {\n      if (typeof headers === \"function\") {\n        headers = headers(req, res,\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        this.middleware.context);\n      }\n      /**\n       * @type {{key: string, value: string}[]}\n       */\n\n\n      const allHeaders = [];\n\n      if (!Array.isArray(headers)) {\n        // eslint-disable-next-line guard-for-in\n        for (const name in headers) {\n          // @ts-ignore\n          allHeaders.push({\n            key: name,\n            value: headers[name]\n          });\n        }\n\n        headers = allHeaders;\n      }\n\n      headers.forEach(\n      /**\n       * @param {{key: string, value: any}} header\n       */\n      header => {\n        res.setHeader(header.key, header.value);\n      });\n    }\n\n    next();\n  }\n  /**\n   * @private\n   * @param {{ [key: string]: string | undefined }} headers\n   * @param {string} headerToCheck\n   * @returns {boolean}\n   */\n\n\n  checkHeader(headers, headerToCheck) {\n    // allow user to opt out of this security check, at their own risk\n    // by explicitly enabling allowedHosts\n    if (this.options.allowedHosts === \"all\") {\n      return true;\n    } // get the Host header and extract hostname\n    // we don't care about port not matching\n\n\n    const hostHeader = headers[headerToCheck];\n\n    if (!hostHeader) {\n      return false;\n    }\n\n    if (/^(file|.+-extension):/i.test(hostHeader)) {\n      return true;\n    } // use the node url-parser to retrieve the hostname from the host-header.\n\n\n    const hostname = url.parse( // if hostHeader doesn't have scheme, add // for parsing.\n    /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : `//${hostHeader}`, false, true).hostname; // always allow requests with explicit IPv4 or IPv6-address.\n    // A note on IPv6 addresses:\n    // hostHeader will always contain the brackets denoting\n    // an IPv6-address in URLs,\n    // these are removed from the hostname in url.parse(),\n    // so we have the pure IPv6-address in hostname.\n    // For convenience, always allow localhost (hostname === 'localhost')\n    // and its subdomains (hostname.endsWith(\".localhost\")).\n    // allow hostname of listening address  (hostname === this.options.host)\n\n    const isValidHostname = hostname !== null && ipaddr.IPv4.isValid(hostname) || hostname !== null && ipaddr.IPv6.isValid(hostname) || hostname === \"localhost\" || hostname !== null && hostname.endsWith(\".localhost\") || hostname === this.options.host;\n\n    if (isValidHostname) {\n      return true;\n    }\n\n    const {\n      allowedHosts\n    } = this.options; // always allow localhost host, for convenience\n    // allow if hostname is in allowedHosts\n\n    if (Array.isArray(allowedHosts) && allowedHosts.length > 0) {\n      for (let hostIdx = 0; hostIdx < allowedHosts.length; hostIdx++) {\n        const allowedHost = allowedHosts[hostIdx];\n\n        if (allowedHost === hostname) {\n          return true;\n        } // support \".\" as a subdomain wildcard\n        // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n\n\n        if (allowedHost[0] === \".\") {\n          // \"example.com\"  (hostname === allowedHost.substring(1))\n          // \"*.example.com\"  (hostname.endsWith(allowedHost))\n          if (hostname === allowedHost.substring(1) ||\n          /** @type {string} */\n          hostname.endsWith(allowedHost)) {\n            return true;\n          }\n        }\n      }\n    } // Also allow if `client.webSocketURL.hostname` provided\n\n\n    if (this.options.client && typeof\n    /** @type {ClientConfiguration} */\n    this.options.client.webSocketURL !== \"undefined\") {\n      return (\n        /** @type {WebSocketURL} */\n\n        /** @type {ClientConfiguration} */\n        this.options.client.webSocketURL.hostname === hostname\n      );\n    } // disallow\n\n\n    return false;\n  }\n  /**\n   * @param {ClientConnection[]} clients\n   * @param {string} type\n   * @param {any} [data]\n   * @param {any} [params]\n   */\n  // eslint-disable-next-line class-methods-use-this\n\n\n  sendMessage(clients, type, data, params) {\n    for (const client of clients) {\n      // `sockjs` uses `1` to indicate client is ready to accept data\n      // `ws` uses `WebSocket.OPEN`, but it is mean `1` too\n      if (client.readyState === 1) {\n        client.send(JSON.stringify({\n          type,\n          data,\n          params\n        }));\n      }\n    }\n  }\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   * @returns {void}\n   */\n\n\n  serveMagicHtml(req, res, next) {\n    if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n      return next();\n    }\n    /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n\n\n    this.middleware.waitUntilValid(() => {\n      const _path = req.path;\n\n      try {\n        const filename =\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        this.middleware.getFilenameFromUrl(`${_path}.js`);\n        const isFile =\n        /** @type {Compiler[\"outputFileSystem\"] & { statSync: import(\"fs\").StatSyncFn }}*/\n\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        this.middleware.context.outputFileSystem.statSync(\n        /** @type {import(\"fs\").PathLike} */\n        filename).isFile();\n\n        if (!isFile) {\n          return next();\n        } // Serve a page that executes the javascript\n        // @ts-ignore\n\n\n        const queries = req._parsedUrl.search || \"\";\n        const responsePage = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body><script type=\"text/javascript\" charset=\"utf-8\" src=\"${_path}.js${queries}\"></script></body></html>`;\n        res.send(responsePage);\n      } catch (error) {\n        return next();\n      }\n    });\n  } // Send stats to a socket or multiple sockets\n\n  /**\n   * @private\n   * @param {ClientConnection[]} clients\n   * @param {StatsCompilation} stats\n   * @param {boolean} [force]\n   */\n\n\n  sendStats(clients, stats, force) {\n    const shouldEmit = !force && stats && (!stats.errors || stats.errors.length === 0) && (!stats.warnings || stats.warnings.length === 0) && this.currentHash === stats.hash;\n\n    if (shouldEmit) {\n      this.sendMessage(clients, \"still-ok\");\n      return;\n    }\n\n    this.currentHash = stats.hash;\n    this.sendMessage(clients, \"hash\", stats.hash);\n\n    if (\n    /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n    stats.errors.length > 0 ||\n    /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n    stats.warnings.length > 0) {\n      const hasErrors =\n      /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n      stats.errors.length > 0;\n\n      if (\n      /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n      stats.warnings.length > 0) {\n        let params;\n\n        if (hasErrors) {\n          params = {\n            preventReloading: true\n          };\n        }\n\n        this.sendMessage(clients, \"warnings\", stats.warnings, params);\n      }\n\n      if (\n      /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n      stats.errors.length > 0) {\n        this.sendMessage(clients, \"errors\", stats.errors);\n      }\n    } else {\n      this.sendMessage(clients, \"ok\");\n    }\n  }\n  /**\n   * @param {string | string[]} watchPath\n   * @param {WatchOptions} [watchOptions]\n   */\n\n\n  watchFiles(watchPath, watchOptions) {\n    const chokidar = require(\"chokidar\");\n\n    const watcher = chokidar.watch(watchPath, watchOptions); // disabling refreshing on changing the content\n\n    if (this.options.liveReload) {\n      watcher.on(\"change\", item => {\n        if (this.webSocketServer) {\n          this.sendMessage(this.webSocketServer.clients, \"static-changed\", item);\n        }\n      });\n    }\n\n    this.staticWatchers.push(watcher);\n  }\n  /**\n   * @param {import(\"webpack-dev-middleware\").Callback} [callback]\n   */\n\n\n  invalidate(callback = () => {}) {\n    if (this.middleware) {\n      this.middleware.invalidate(callback);\n    }\n  }\n  /**\n   * @returns {Promise<void>}\n   */\n\n\n  start() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.normalizeOptions();\n\n      if (_this3.options.ipc) {\n        yield (\n          /** @type {Promise<void>} */\n          new Promise((resolve, reject) => {\n            const net = require(\"net\");\n\n            const socket = new net.Socket();\n            socket.on(\"error\",\n            /**\n             * @param {Error & { code?: string }} error\n             */\n            error => {\n              if (error.code === \"ECONNREFUSED\") {\n                // No other server listening on this socket so it can be safely removed\n                fs.unlinkSync(\n                /** @type {string} */\n                _this3.options.ipc);\n                resolve();\n                return;\n              } else if (error.code === \"ENOENT\") {\n                resolve();\n                return;\n              }\n\n              reject(error);\n            });\n            socket.connect({\n              path:\n              /** @type {string} */\n              _this3.options.ipc\n            }, () => {\n              throw new Error(`IPC \"${_this3.options.ipc}\" is already used`);\n            });\n          })\n        );\n      } else {\n        _this3.options.host = yield Server.getHostname(\n        /** @type {Host} */\n        _this3.options.host);\n        _this3.options.port = yield Server.getFreePort(\n        /** @type {Port} */\n        _this3.options.port, _this3.options.host);\n      }\n\n      yield _this3.initialize();\n      const listenOptions = _this3.options.ipc ? {\n        path: _this3.options.ipc\n      } : {\n        host: _this3.options.host,\n        port: _this3.options.port\n      };\n      yield (\n        /** @type {Promise<void>} */\n        new Promise(resolve => {\n          /** @type {import(\"http\").Server} */\n          _this3.server.listen(listenOptions, () => {\n            resolve();\n          });\n        })\n      );\n\n      if (_this3.options.ipc) {\n        // chmod 666 (rw rw rw)\n        const READ_WRITE = 438;\n        yield fs.promises.chmod(\n        /** @type {string} */\n        _this3.options.ipc, READ_WRITE);\n      }\n\n      if (_this3.options.webSocketServer) {\n        _this3.createWebSocketServer();\n      }\n\n      if (_this3.options.bonjour) {\n        _this3.runBonjour();\n      }\n\n      _this3.logStatus();\n\n      if (typeof _this3.options.onListening === \"function\") {\n        _this3.options.onListening(_this3);\n      }\n    })();\n  }\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n\n\n  startCallback(callback = () => {}) {\n    this.start().then(() => callback(), callback).catch(callback);\n  }\n  /**\n   * @returns {Promise<void>}\n   */\n\n\n  stop() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this4.bonjour) {\n        yield (\n          /** @type {Promise<void>} */\n          new Promise(resolve => {\n            _this4.stopBonjour(() => {\n              resolve();\n            });\n          })\n        );\n      }\n\n      _this4.webSocketProxies = [];\n      yield Promise.all(_this4.staticWatchers.map(watcher => watcher.close()));\n      _this4.staticWatchers = [];\n\n      if (_this4.webSocketServer) {\n        yield (\n          /** @type {Promise<void>} */\n          new Promise(resolve => {\n            /** @type {WebSocketServerImplementation} */\n            _this4.webSocketServer.implementation.close(() => {\n              _this4.webSocketServer = null;\n              resolve();\n            });\n\n            for (const client of\n            /** @type {WebSocketServerImplementation} */\n            _this4.webSocketServer.clients) {\n              client.terminate();\n            }\n            /** @type {WebSocketServerImplementation} */\n\n\n            _this4.webSocketServer.clients = [];\n          })\n        );\n      }\n\n      if (_this4.server) {\n        yield (\n          /** @type {Promise<void>} */\n          new Promise(resolve => {\n            /** @type {import(\"http\").Server} */\n            _this4.server.close(() => {\n              _this4.server = null;\n              resolve();\n            });\n\n            for (const socket of _this4.sockets) {\n              socket.destroy();\n            }\n\n            _this4.sockets = [];\n          })\n        );\n\n        if (_this4.middleware) {\n          yield (\n            /** @type {Promise<void>} */\n            new Promise((resolve, reject) => {\n              /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n              _this4.middleware.close(error => {\n                if (error) {\n                  reject(error);\n                  return;\n                }\n\n                resolve();\n              });\n            })\n          );\n          _this4.middleware = null;\n        }\n      } // We add listeners to signals when creating a new Server instance\n      // So ensure they are removed to prevent EventEmitter memory leak warnings\n\n\n      for (const item of _this4.listeners) {\n        process.removeListener(item.name, item.listener);\n      }\n    })();\n  }\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n\n\n  stopCallback(callback = () => {}) {\n    this.stop().then(() => callback(), callback).catch(callback);\n  } // TODO remove in the next major release\n\n  /**\n   * @param {Port} port\n   * @param {Host} hostname\n   * @param {(err?: Error) => void} fn\n   * @returns {void}\n   */\n\n\n  listen(port, hostname, fn) {\n    util.deprecate(() => {}, \"'listen' is deprecated. Please use the async 'start' or 'startCallback' method.\", \"DEP_WEBPACK_DEV_SERVER_LISTEN\")();\n\n    if (typeof port === \"function\") {\n      fn = port;\n    }\n\n    if (typeof port !== \"undefined\" && typeof this.options.port !== \"undefined\" && port !== this.options.port) {\n      this.options.port = port;\n      this.logger.warn('The \"port\" specified in options is different from the port passed as an argument. Will be used from arguments.');\n    }\n\n    if (!this.options.port) {\n      this.options.port = port;\n    }\n\n    if (typeof hostname !== \"undefined\" && typeof this.options.host !== \"undefined\" && hostname !== this.options.host) {\n      this.options.host = hostname;\n      this.logger.warn('The \"host\" specified in options is different from the host passed as an argument. Will be used from arguments.');\n    }\n\n    if (!this.options.host) {\n      this.options.host = hostname;\n    }\n\n    this.start().then(() => {\n      if (fn) {\n        fn.call(this.server);\n      }\n    }).catch(error => {\n      // Nothing\n      if (fn) {\n        fn.call(this.server, error);\n      }\n    });\n  }\n  /**\n   * @param {(err?: Error) => void} [callback]\n   * @returns {void}\n   */\n  // TODO remove in the next major release\n\n\n  close(callback) {\n    util.deprecate(() => {}, \"'close' is deprecated. Please use the async 'stop' or 'stopCallback' method.\", \"DEP_WEBPACK_DEV_SERVER_CLOSE\")();\n    this.stop().then(() => {\n      if (callback) {\n        callback();\n      }\n    }).catch(error => {\n      if (callback) {\n        callback(error);\n      }\n    });\n  }\n\n}\n\nmodule.exports = Server;","map":{"version":3,"names":["os","require","path","url","util","fs","ipaddr","defaultGateway","express","validate","schema","process","env","WEBPACK_SERVE","Server","constructor","options","compiler","hooks","deprecate","name","baseDataPath","logger","getInfrastructureLogger","staticWatchers","listeners","webSocketProxies","sockets","currentHash","undefined","cli","getArguments","processArguments","DEFAULT_STATS","all","hash","warnings","errors","errorDetails","isAbsoluteURL","URL","test","findIp","gateway","gatewayIp","parse","addresses","Object","values","networkInterfaces","cidr","net","parseCIDR","kind","match","toString","internalIP","family","internalIPSync","sync","getHostname","hostname","getFreePort","port","host","pRetry","getPort","basePort","WEBPACK_DEV_SERVER_BASE_PORT","parseInt","defaultPortRetry","WEBPACK_DEV_SERVER_PORT_RETRY","retries","findCacheDir","cwd","dir","statSync","join","isFile","e","parent","dirname","resolve","versions","pnp","addAdditionalEntries","additionalEntries","isWebTarget","externalsPresets","web","includes","target","client","webSocketURLStr","webSocketServer","webSocketURL","searchParams","URLSearchParams","protocol","server","type","set","username","password","isSockJSType","Number","String","pathname","prefix","logging","progress","overlay","JSON","stringify","reconnect","hot","liveReload","push","webpack","EntryPlugin","additionalEntry","context","apply","prependEntry","originalEntry","newAdditionalEntries","Promise","then","entry","Array","isArray","clone","keys","forEach","key","entryDescription","entriesClone","slice","concat","newEntry","entryOption","call","getCompilerOptions","compilers","length","compilerWithDevServer","find","config","devServer","compilerWithWebPreset","normalizeOptions","compilerOptions","compilerWatchOptions","watchOptions","getWatchOptions","getPolling","usePolling","poll","Boolean","getInterval","interval","rest","ignoreInitial","persistent","followSymlinks","atomic","alwaysStat","ignorePermissionErrors","ignored","getStaticItem","optionsForStatic","getDefaultStaticOptions","directory","staticOptions","publicPath","serveIndex","icons","watch","item","def","Error","allowedHosts","bonjour","parsedURL","Infinity","infrastructureLogging","level","compress","devMiddleware","historyApiFallback","isHTTPs","https","isSPDY","http2","spdy","protocols","requestCert","httpsProperties","property","value","readFile","Buffer","isBuffer","stats","lstatSync","realpathSync","error","readFileSync","map","fakeCert","cert","certificateDir","certificatePath","certificateExists","certificate","promises","stat","certificateTtl","certificateStat","now","Date","ctime","promisify","rimraf","del","info","selfsigned","attributes","pems","generate","algorithm","days","keySize","extensions","cA","keyCertSign","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","serverAuth","clientAuth","codeSigning","timeStamping","altNames","ip","mkdir","recursive","writeFile","private","encoding","cacert","ca","warn","ipc","isWindows","platform","pipePrefix","tmpdir","pipeName","magicHtml","defaultOpenOptions","wait","getOpenItemsFromObject","normalizedOptions","app","normalizedTarget","singleTarget","open","result","onAfterSetupMiddleware","onBeforeSetupMiddleware","proxy","prototype","hasOwnProperty","proxyOptions","correctedContext","replace","getLogLevelForProxy","logLevel","logProvider","setupExitSignals","static","watchFiles","paths","defaultWebSocketServerType","defaultWebSocketServerOptions","getClientTransport","clientImplementation","clientImplementationFound","isKnownWebSocketServerImplementation","clientTransport","webSocketTransport","getServerTransport","implementation","implementationFound","setupProgressPlugin","ProgressPlugin","percent","msg","addInfo","pluginName","Math","floor","sendMessage","clients","emit","initialize","ProvidePlugin","__webpack_dev_server_client__","plugins","HMRPluginExists","p","HotModuleReplacementPlugin","plugin","setupHooks","setupApp","setupHostHeaderCheck","setupDevMiddleware","setupBuiltInRoutes","setupWatchFiles","setupWatchStaticFiles","setupMiddlewares","createServer","signals","needForceShutdown","signal","listener","exit","stopCallback","close","on","webSocketProxy","upgrade","getStats","statsObj","warningsFilter","toJson","invalid","tap","done","sendStats","req","res","next","checkHeader","headers","send","webpackDevMiddleware","middleware","get","setHeader","clientPath","__dirname","sendFile","_req","invalidate","end","waitUntilValid","write","statsForPrint","children","index","asset","assets","assetName","assetURL","staticOption","middlewares","compression","setHeaders","bind","createProxyMiddleware","getProxyMiddleware","proxyConfig","router","proxyConfigOrCallback","proxyMiddleware","ws","handler","newProxyConfig","isByPassFuncDefined","bypass","bypassUrl","connectHistoryApiFallback","verbose","log","method","serveMagicHtml","statusCode","use","socket","once","splice","indexOf","createWebSocketServer","request","openBrowser","defaultOpenTarget","openTarget","catch","arguments","runBonjour","Bonjour","publish","subtypes","stopBonjour","callback","unpublishAll","destroy","logStatus","isColorSupported","cyan","red","getColorsOption","colorsEnabled","colors","useColor","address","prettyPrintURL","newHostname","format","localhost","loopbackIPv4","loopbackIPv6","networkUrlIPv4","networkUrlIPv6","isIP","parsedIP","range","networkIPv4","networkIPv6","isIPv4MappedAddress","toIPv4Address","loopbacks","bonjourProtocol","allHeaders","header","headerToCheck","hostHeader","isValidHostname","IPv4","isValid","IPv6","endsWith","hostIdx","allowedHost","substring","data","params","readyState","_path","filename","getFilenameFromUrl","outputFileSystem","queries","_parsedUrl","search","responsePage","force","shouldEmit","hasErrors","preventReloading","watchPath","chokidar","watcher","start","reject","Socket","code","unlinkSync","connect","listenOptions","listen","READ_WRITE","chmod","onListening","startCallback","stop","terminate","removeListener","fn","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/webpack-dev-server/lib/Server.js"],"sourcesContent":["\"use strict\";\n\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst url = require(\"url\");\nconst util = require(\"util\");\nconst fs = require(\"graceful-fs\");\nconst ipaddr = require(\"ipaddr.js\");\nconst defaultGateway = require(\"default-gateway\");\nconst express = require(\"express\");\nconst { validate } = require(\"schema-utils\");\nconst schema = require(\"./options.json\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n/** @typedef {import(\"webpack\").Configuration} WebpackConfiguration */\n/** @typedef {import(\"webpack\").StatsOptions} StatsOptions */\n/** @typedef {import(\"webpack\").StatsCompilation} StatsCompilation */\n/** @typedef {import(\"webpack\").Stats} Stats */\n/** @typedef {import(\"webpack\").MultiStats} MultiStats */\n/** @typedef {import(\"os\").NetworkInterfaceInfo} NetworkInterfaceInfo */\n/** @typedef {import(\"express\").Request} Request */\n/** @typedef {import(\"express\").Response} Response */\n/** @typedef {import(\"express\").NextFunction} NextFunction */\n/** @typedef {import(\"express\").RequestHandler} ExpressRequestHandler */\n/** @typedef {import(\"express\").ErrorRequestHandler} ExpressErrorRequestHandler */\n/** @typedef {import(\"chokidar\").WatchOptions} WatchOptions */\n/** @typedef {import(\"chokidar\").FSWatcher} FSWatcher */\n/** @typedef {import(\"connect-history-api-fallback\").Options} ConnectHistoryApiFallbackOptions */\n/** @typedef {import(\"bonjour-service\").Bonjour} Bonjour */\n/** @typedef {import(\"bonjour-service\").Service} BonjourOptions */\n/** @typedef {import(\"http-proxy-middleware\").RequestHandler} RequestHandler */\n/** @typedef {import(\"http-proxy-middleware\").Options} HttpProxyMiddlewareOptions */\n/** @typedef {import(\"http-proxy-middleware\").Filter} HttpProxyMiddlewareOptionsFilter */\n/** @typedef {import(\"serve-index\").Options} ServeIndexOptions */\n/** @typedef {import(\"serve-static\").ServeStaticOptions} ServeStaticOptions */\n/** @typedef {import(\"ipaddr.js\").IPv4} IPv4 */\n/** @typedef {import(\"ipaddr.js\").IPv6} IPv6 */\n/** @typedef {import(\"net\").Socket} Socket */\n/** @typedef {import(\"http\").IncomingMessage} IncomingMessage */\n/** @typedef {import(\"open\").Options} OpenOptions */\n\n/** @typedef {import(\"https\").ServerOptions & { spdy?: { plain?: boolean | undefined, ssl?: boolean | undefined, 'x-forwarded-for'?: string | undefined, protocol?: string | undefined, protocols?: string[] | undefined }}} ServerOptions */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Options<Request, Response>} DevMiddlewareOptions\n */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Context<Request, Response>} DevMiddlewareContext\n */\n\n/**\n * @typedef {\"local-ip\" | \"local-ipv4\" | \"local-ipv6\" | string} Host\n */\n\n/**\n * @typedef {number | string | \"auto\"} Port\n */\n\n/**\n * @typedef {Object} WatchFiles\n * @property {string | string[]} paths\n * @property {WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} [options]\n */\n\n/**\n * @typedef {Object} Static\n * @property {string} [directory]\n * @property {string | string[]} [publicPath]\n * @property {boolean | ServeIndexOptions} [serveIndex]\n * @property {ServeStaticOptions} [staticOptions]\n * @property {boolean | WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} [watch]\n */\n\n/**\n * @typedef {Object} NormalizedStatic\n * @property {string} directory\n * @property {string[]} publicPath\n * @property {false | ServeIndexOptions} serveIndex\n * @property {ServeStaticOptions} staticOptions\n * @property {false | WatchOptions} watch\n */\n\n/**\n * @typedef {Object} ServerConfiguration\n * @property {\"http\" | \"https\" | \"spdy\" | string} [type]\n * @property {ServerOptions} [options]\n */\n\n/**\n * @typedef {Object} WebSocketServerConfiguration\n * @property {\"sockjs\" | \"ws\" | string | Function} [type]\n * @property {Record<string, any>} [options]\n */\n\n/**\n * @typedef {(import(\"ws\").WebSocket | import(\"sockjs\").Connection & { send: import(\"ws\").WebSocket[\"send\"], terminate: import(\"ws\").WebSocket[\"terminate\"], ping: import(\"ws\").WebSocket[\"ping\"] }) & { isAlive?: boolean }} ClientConnection\n */\n\n/**\n * @typedef {import(\"ws\").WebSocketServer | import(\"sockjs\").Server & { close: import(\"ws\").WebSocketServer[\"close\"] }} WebSocketServer\n */\n\n/**\n * @typedef {{ implementation: WebSocketServer, clients: ClientConnection[] }} WebSocketServerImplementation\n */\n\n/**\n * @callback ByPass\n * @param {Request} req\n * @param {Response} res\n * @param {ProxyConfigArrayItem} proxyConfig\n */\n\n/**\n * @typedef {{ path?: HttpProxyMiddlewareOptionsFilter | undefined, context?: HttpProxyMiddlewareOptionsFilter | undefined } & { bypass?: ByPass } & HttpProxyMiddlewareOptions } ProxyConfigArrayItem\n */\n\n/**\n * @typedef {(ProxyConfigArrayItem | ((req?: Request | undefined, res?: Response | undefined, next?: NextFunction | undefined) => ProxyConfigArrayItem))[]} ProxyConfigArray\n */\n\n/**\n * @typedef {{ [url: string]: string | ProxyConfigArrayItem }} ProxyConfigMap\n */\n\n/**\n * @typedef {Object} OpenApp\n * @property {string} [name]\n * @property {string[]} [arguments]\n */\n\n/**\n * @typedef {Object} Open\n * @property {string | string[] | OpenApp} [app]\n * @property {string | string[]} [target]\n */\n\n/**\n * @typedef {Object} NormalizedOpen\n * @property {string} target\n * @property {import(\"open\").Options} options\n */\n\n/**\n * @typedef {Object} WebSocketURL\n * @property {string} [hostname]\n * @property {string} [password]\n * @property {string} [pathname]\n * @property {number | string} [port]\n * @property {string} [protocol]\n * @property {string} [username]\n */\n\n/**\n * @typedef {Object} ClientConfiguration\n * @property {\"log\" | \"info\" | \"warn\" | \"error\" | \"none\" | \"verbose\"} [logging]\n * @property {boolean  | { warnings?: boolean, errors?: boolean }} [overlay]\n * @property {boolean} [progress]\n * @property {boolean | number} [reconnect]\n * @property {\"ws\" | \"sockjs\" | string} [webSocketTransport]\n * @property {string | WebSocketURL} [webSocketURL]\n */\n\n/**\n * @typedef {Array<{ key: string; value: string }> | Record<string, string | string[]>} Headers\n */\n\n/**\n * @typedef {{ name?: string, path?: string, middleware: ExpressRequestHandler | ExpressErrorRequestHandler } | ExpressRequestHandler | ExpressErrorRequestHandler} Middleware\n */\n\n/**\n * @typedef {Object} Configuration\n * @property {boolean | string} [ipc]\n * @property {Host} [host]\n * @property {Port} [port]\n * @property {boolean | \"only\"} [hot]\n * @property {boolean} [liveReload]\n * @property {DevMiddlewareOptions<Request, Response>} [devMiddleware]\n * @property {boolean} [compress]\n * @property {boolean} [magicHtml]\n * @property {\"auto\" | \"all\" | string | string[]} [allowedHosts]\n * @property {boolean | ConnectHistoryApiFallbackOptions} [historyApiFallback]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | Record<string, never> | BonjourOptions} [bonjour]\n * @property {string | string[] | WatchFiles | Array<string | WatchFiles>} [watchFiles]\n * @property {boolean | string | Static | Array<string | Static>} [static]\n * @property {boolean | ServerOptions} [https]\n * @property {boolean} [http2]\n * @property {\"http\" | \"https\" | \"spdy\" | string | ServerConfiguration} [server]\n * @property {boolean | \"sockjs\" | \"ws\" | string | WebSocketServerConfiguration} [webSocketServer]\n * @property {ProxyConfigMap | ProxyConfigArrayItem | ProxyConfigArray} [proxy]\n * @property {boolean | string | Open | Array<string | Open>} [open]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | ClientConfiguration} [client]\n * @property {Headers | ((req: Request, res: Response, context: DevMiddlewareContext<Request, Response>) => Headers)} [headers]\n * @property {(devServer: Server) => void} [onAfterSetupMiddleware]\n * @property {(devServer: Server) => void} [onBeforeSetupMiddleware]\n * @property {(devServer: Server) => void} [onListening]\n * @property {(middlewares: Middleware[], devServer: Server) => Middleware[]} [setupMiddlewares]\n */\n\nif (!process.env.WEBPACK_SERVE) {\n  // TODO fix me in the next major release\n  // @ts-ignore\n  process.env.WEBPACK_SERVE = true;\n}\n\nclass Server {\n  /**\n   * @param {Configuration | Compiler | MultiCompiler} options\n   * @param {Compiler | MultiCompiler | Configuration} compiler\n   */\n  constructor(options = {}, compiler) {\n    // TODO: remove this after plugin support is published\n    if (/** @type {Compiler | MultiCompiler} */ (options).hooks) {\n      util.deprecate(\n        () => {},\n        \"Using 'compiler' as the first argument is deprecated. Please use 'options' as the first argument and 'compiler' as the second argument.\",\n        \"DEP_WEBPACK_DEV_SERVER_CONSTRUCTOR\"\n      )();\n\n      [options = {}, compiler] = [compiler, options];\n    }\n\n    validate(/** @type {Schema} */ (schema), options, {\n      name: \"Dev Server\",\n      baseDataPath: \"options\",\n    });\n\n    this.compiler = /** @type {Compiler | MultiCompiler} */ (compiler);\n    /**\n     * @type {ReturnType<Compiler[\"getInfrastructureLogger\"]>}\n     * */\n    this.logger = this.compiler.getInfrastructureLogger(\"webpack-dev-server\");\n    this.options = /** @type {Configuration} */ (options);\n    /**\n     * @type {FSWatcher[]}\n     */\n    this.staticWatchers = [];\n    /**\n     * @private\n     * @type {{ name: string | symbol, listener: (...args: any[]) => void}[] }}\n     */\n    this.listeners = [];\n    // Keep track of websocket proxies for external websocket upgrade.\n    /**\n     * @private\n     * @type {RequestHandler[]}\n     */\n    this.webSocketProxies = [];\n    /**\n     * @type {Socket[]}\n     */\n    this.sockets = [];\n    /**\n     * @private\n     * @type {string | undefined}\n     */\n    // eslint-disable-next-line no-undefined\n    this.currentHash = undefined;\n  }\n\n  // TODO compatibility with webpack v4, remove it after drop\n  static get cli() {\n    return {\n      get getArguments() {\n        return () => require(\"../bin/cli-flags\");\n      },\n      get processArguments() {\n        return require(\"../bin/process-arguments\");\n      },\n    };\n  }\n\n  static get schema() {\n    return schema;\n  }\n\n  /**\n   * @private\n   * @returns {StatsOptions}\n   * @constructor\n   */\n  static get DEFAULT_STATS() {\n    return {\n      all: false,\n      hash: true,\n      warnings: true,\n      errors: true,\n      errorDetails: false,\n    };\n  }\n\n  /**\n   * @param {string} URL\n   * @returns {boolean}\n   */\n  static isAbsoluteURL(URL) {\n    // Don't match Windows paths `c:\\`\n    if (/^[a-zA-Z]:\\\\/.test(URL)) {\n      return false;\n    }\n\n    // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n    // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n    return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(URL);\n  }\n\n  /**\n   * @param {string} gateway\n   * @returns {string | undefined}\n   */\n  static findIp(gateway) {\n    const gatewayIp = ipaddr.parse(gateway);\n\n    // Look for the matching interface in all local interfaces.\n    for (const addresses of Object.values(os.networkInterfaces())) {\n      for (const { cidr } of /** @type {NetworkInterfaceInfo[]} */ (\n        addresses\n      )) {\n        const net = ipaddr.parseCIDR(/** @type {string} */ (cidr));\n\n        if (\n          net[0] &&\n          net[0].kind() === gatewayIp.kind() &&\n          gatewayIp.match(net)\n        ) {\n          return net[0].toString();\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {Promise<string | undefined>}\n   */\n  static async internalIP(family) {\n    try {\n      const { gateway } = await defaultGateway[family]();\n      return Server.findIp(gateway);\n    } catch {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {string | undefined}\n   */\n  static internalIPSync(family) {\n    try {\n      const { gateway } = defaultGateway[family].sync();\n      return Server.findIp(gateway);\n    } catch {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {Host} hostname\n   * @returns {Promise<string>}\n   */\n  static async getHostname(hostname) {\n    if (hostname === \"local-ip\") {\n      return (\n        (await Server.internalIP(\"v4\")) ||\n        (await Server.internalIP(\"v6\")) ||\n        \"0.0.0.0\"\n      );\n    } else if (hostname === \"local-ipv4\") {\n      return (await Server.internalIP(\"v4\")) || \"0.0.0.0\";\n    } else if (hostname === \"local-ipv6\") {\n      return (await Server.internalIP(\"v6\")) || \"::\";\n    }\n\n    return hostname;\n  }\n\n  /**\n   * @param {Port} port\n   * @param {string} host\n   * @returns {Promise<number | string>}\n   */\n  static async getFreePort(port, host) {\n    if (typeof port !== \"undefined\" && port !== null && port !== \"auto\") {\n      return port;\n    }\n\n    const pRetry = require(\"p-retry\");\n    const getPort = require(\"./getPort\");\n    const basePort =\n      typeof process.env.WEBPACK_DEV_SERVER_BASE_PORT !== \"undefined\"\n        ? parseInt(process.env.WEBPACK_DEV_SERVER_BASE_PORT, 10)\n        : 8080;\n\n    // Try to find unused port and listen on it for 3 times,\n    // if port is not specified in options.\n    const defaultPortRetry =\n      typeof process.env.WEBPACK_DEV_SERVER_PORT_RETRY !== \"undefined\"\n        ? parseInt(process.env.WEBPACK_DEV_SERVER_PORT_RETRY, 10)\n        : 3;\n\n    return pRetry(() => getPort(basePort, host), {\n      retries: defaultPortRetry,\n    });\n  }\n\n  /**\n   * @returns {string}\n   */\n  static findCacheDir() {\n    const cwd = process.cwd();\n\n    /**\n     * @type {string | undefined}\n     */\n    let dir = cwd;\n\n    for (;;) {\n      try {\n        if (fs.statSync(path.join(dir, \"package.json\")).isFile()) break;\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n\n      const parent = path.dirname(dir);\n\n      if (dir === parent) {\n        // eslint-disable-next-line no-undefined\n        dir = undefined;\n        break;\n      }\n\n      dir = parent;\n    }\n\n    if (!dir) {\n      return path.resolve(cwd, \".cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"1\") {\n      return path.resolve(dir, \".pnp/.cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"3\") {\n      return path.resolve(dir, \".yarn/.cache/webpack-dev-server\");\n    }\n\n    return path.resolve(dir, \"node_modules/.cache/webpack-dev-server\");\n  }\n\n  /**\n   * @private\n   * @param {Compiler} compiler\n   */\n  addAdditionalEntries(compiler) {\n    /**\n     * @type {string[]}\n     */\n    const additionalEntries = [];\n\n    const isWebTarget = compiler.options.externalsPresets\n      ? compiler.options.externalsPresets.web\n      : [\n          \"web\",\n          \"webworker\",\n          \"electron-preload\",\n          \"electron-renderer\",\n          \"node-webkit\",\n          // eslint-disable-next-line no-undefined\n          undefined,\n          null,\n        ].includes(/** @type {string} */ (compiler.options.target));\n\n    // TODO maybe empty empty client\n    if (this.options.client && isWebTarget) {\n      let webSocketURLStr = \"\";\n\n      if (this.options.webSocketServer) {\n        const webSocketURL =\n          /** @type {WebSocketURL} */\n          (\n            /** @type {ClientConfiguration} */\n            (this.options.client).webSocketURL\n          );\n        const webSocketServer =\n          /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n          (this.options.webSocketServer);\n        const searchParams = new URLSearchParams();\n\n        /** @type {string} */\n        let protocol;\n\n        // We are proxying dev server and need to specify custom `hostname`\n        if (typeof webSocketURL.protocol !== \"undefined\") {\n          protocol = webSocketURL.protocol;\n        } else {\n          protocol =\n            /** @type {ServerConfiguration} */\n            (this.options.server).type === \"http\" ? \"ws:\" : \"wss:\";\n        }\n\n        searchParams.set(\"protocol\", protocol);\n\n        if (typeof webSocketURL.username !== \"undefined\") {\n          searchParams.set(\"username\", webSocketURL.username);\n        }\n\n        if (typeof webSocketURL.password !== \"undefined\") {\n          searchParams.set(\"password\", webSocketURL.password);\n        }\n\n        /** @type {string} */\n        let hostname;\n\n        // SockJS is not supported server mode, so `hostname` and `port` can't specified, let's ignore them\n        // TODO show warning about this\n        const isSockJSType = webSocketServer.type === \"sockjs\";\n\n        // We are proxying dev server and need to specify custom `hostname`\n        if (typeof webSocketURL.hostname !== \"undefined\") {\n          hostname = webSocketURL.hostname;\n        }\n        // Web socket server works on custom `hostname`, only for `ws` because `sock-js` is not support custom `hostname`\n        else if (\n          typeof webSocketServer.options.host !== \"undefined\" &&\n          !isSockJSType\n        ) {\n          hostname = webSocketServer.options.host;\n        }\n        // The `host` option is specified\n        else if (typeof this.options.host !== \"undefined\") {\n          hostname = this.options.host;\n        }\n        // The `port` option is not specified\n        else {\n          hostname = \"0.0.0.0\";\n        }\n\n        searchParams.set(\"hostname\", hostname);\n\n        /** @type {number | string} */\n        let port;\n\n        // We are proxying dev server and need to specify custom `port`\n        if (typeof webSocketURL.port !== \"undefined\") {\n          port = webSocketURL.port;\n        }\n        // Web socket server works on custom `port`, only for `ws` because `sock-js` is not support custom `port`\n        else if (\n          typeof webSocketServer.options.port !== \"undefined\" &&\n          !isSockJSType\n        ) {\n          port = webSocketServer.options.port;\n        }\n        // The `port` option is specified\n        else if (typeof this.options.port === \"number\") {\n          port = this.options.port;\n        }\n        // The `port` option is specified using `string`\n        else if (\n          typeof this.options.port === \"string\" &&\n          this.options.port !== \"auto\"\n        ) {\n          port = Number(this.options.port);\n        }\n        // The `port` option is not specified or set to `auto`\n        else {\n          port = \"0\";\n        }\n\n        searchParams.set(\"port\", String(port));\n\n        /** @type {string} */\n        let pathname = \"\";\n\n        // We are proxying dev server and need to specify custom `pathname`\n        if (typeof webSocketURL.pathname !== \"undefined\") {\n          pathname = webSocketURL.pathname;\n        }\n        // Web socket server works on custom `path`\n        else if (\n          typeof webSocketServer.options.prefix !== \"undefined\" ||\n          typeof webSocketServer.options.path !== \"undefined\"\n        ) {\n          pathname =\n            webSocketServer.options.prefix || webSocketServer.options.path;\n        }\n\n        searchParams.set(\"pathname\", pathname);\n\n        const client = /** @type {ClientConfiguration} */ (this.options.client);\n\n        if (typeof client.logging !== \"undefined\") {\n          searchParams.set(\"logging\", client.logging);\n        }\n\n        if (typeof client.progress !== \"undefined\") {\n          searchParams.set(\"progress\", String(client.progress));\n        }\n\n        if (typeof client.overlay !== \"undefined\") {\n          searchParams.set(\n            \"overlay\",\n            typeof client.overlay === \"boolean\"\n              ? String(client.overlay)\n              : JSON.stringify(client.overlay)\n          );\n        }\n\n        if (typeof client.reconnect !== \"undefined\") {\n          searchParams.set(\n            \"reconnect\",\n            typeof client.reconnect === \"number\"\n              ? String(client.reconnect)\n              : \"10\"\n          );\n        }\n\n        if (typeof this.options.hot !== \"undefined\") {\n          searchParams.set(\"hot\", String(this.options.hot));\n        }\n\n        if (typeof this.options.liveReload !== \"undefined\") {\n          searchParams.set(\"live-reload\", String(this.options.liveReload));\n        }\n\n        webSocketURLStr = searchParams.toString();\n      }\n\n      additionalEntries.push(\n        `${require.resolve(\"../client/index.js\")}?${webSocketURLStr}`\n      );\n    }\n\n    if (this.options.hot === \"only\") {\n      additionalEntries.push(require.resolve(\"webpack/hot/only-dev-server\"));\n    } else if (this.options.hot) {\n      additionalEntries.push(require.resolve(\"webpack/hot/dev-server\"));\n    }\n\n    const webpack = compiler.webpack || require(\"webpack\");\n\n    // use a hook to add entries if available\n    if (typeof webpack.EntryPlugin !== \"undefined\") {\n      for (const additionalEntry of additionalEntries) {\n        new webpack.EntryPlugin(compiler.context, additionalEntry, {\n          // eslint-disable-next-line no-undefined\n          name: undefined,\n        }).apply(compiler);\n      }\n    }\n    // TODO remove after drop webpack v4 support\n    else {\n      /**\n       * prependEntry Method for webpack 4\n       * @param {any} originalEntry\n       * @param {any} newAdditionalEntries\n       * @returns {any}\n       */\n      const prependEntry = (originalEntry, newAdditionalEntries) => {\n        if (typeof originalEntry === \"function\") {\n          return () =>\n            Promise.resolve(originalEntry()).then((entry) =>\n              prependEntry(entry, newAdditionalEntries)\n            );\n        }\n\n        if (\n          typeof originalEntry === \"object\" &&\n          !Array.isArray(originalEntry)\n        ) {\n          /** @type {Object<string,string>} */\n          const clone = {};\n\n          Object.keys(originalEntry).forEach((key) => {\n            // entry[key] should be a string here\n            const entryDescription = originalEntry[key];\n\n            clone[key] = prependEntry(entryDescription, newAdditionalEntries);\n          });\n\n          return clone;\n        }\n\n        // in this case, entry is a string or an array.\n        // make sure that we do not add duplicates.\n        /** @type {any} */\n        const entriesClone = additionalEntries.slice(0);\n\n        [].concat(originalEntry).forEach((newEntry) => {\n          if (!entriesClone.includes(newEntry)) {\n            entriesClone.push(newEntry);\n          }\n        });\n\n        return entriesClone;\n      };\n\n      compiler.options.entry = prependEntry(\n        compiler.options.entry || \"./src\",\n        additionalEntries\n      );\n      compiler.hooks.entryOption.call(\n        /** @type {string} */ (compiler.options.context),\n        compiler.options.entry\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @returns {Compiler[\"options\"]}\n   */\n  getCompilerOptions() {\n    if (\n      typeof (/** @type {MultiCompiler} */ (this.compiler).compilers) !==\n      \"undefined\"\n    ) {\n      if (/** @type {MultiCompiler} */ (this.compiler).compilers.length === 1) {\n        return (\n          /** @type {MultiCompiler} */\n          (this.compiler).compilers[0].options\n        );\n      }\n\n      // Configuration with the `devServer` options\n      const compilerWithDevServer =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers.find((config) => config.options.devServer);\n\n      if (compilerWithDevServer) {\n        return compilerWithDevServer.options;\n      }\n\n      // Configuration with `web` preset\n      const compilerWithWebPreset =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers.find(\n          (config) =>\n            (config.options.externalsPresets &&\n              config.options.externalsPresets.web) ||\n            [\n              \"web\",\n              \"webworker\",\n              \"electron-preload\",\n              \"electron-renderer\",\n              \"node-webkit\",\n              // eslint-disable-next-line no-undefined\n              undefined,\n              null,\n            ].includes(/** @type {string} */ (config.options.target))\n        );\n\n      if (compilerWithWebPreset) {\n        return compilerWithWebPreset.options;\n      }\n\n      // Fallback\n      return /** @type {MultiCompiler} */ (this.compiler).compilers[0].options;\n    }\n\n    return /** @type {Compiler} */ (this.compiler).options;\n  }\n\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n  async normalizeOptions() {\n    const { options } = this;\n    const compilerOptions = this.getCompilerOptions();\n    // TODO remove `{}` after drop webpack v4 support\n    const compilerWatchOptions = compilerOptions.watchOptions || {};\n    /**\n     * @param {WatchOptions & { aggregateTimeout?: number, ignored?: WatchOptions[\"ignored\"], poll?: number | boolean }} watchOptions\n     * @returns {WatchOptions}\n     */\n    const getWatchOptions = (watchOptions = {}) => {\n      const getPolling = () => {\n        if (typeof watchOptions.usePolling !== \"undefined\") {\n          return watchOptions.usePolling;\n        }\n\n        if (typeof watchOptions.poll !== \"undefined\") {\n          return Boolean(watchOptions.poll);\n        }\n\n        if (typeof compilerWatchOptions.poll !== \"undefined\") {\n          return Boolean(compilerWatchOptions.poll);\n        }\n\n        return false;\n      };\n      const getInterval = () => {\n        if (typeof watchOptions.interval !== \"undefined\") {\n          return watchOptions.interval;\n        }\n\n        if (typeof watchOptions.poll === \"number\") {\n          return watchOptions.poll;\n        }\n\n        if (typeof compilerWatchOptions.poll === \"number\") {\n          return compilerWatchOptions.poll;\n        }\n      };\n\n      const usePolling = getPolling();\n      const interval = getInterval();\n      const { poll, ...rest } = watchOptions;\n\n      return {\n        ignoreInitial: true,\n        persistent: true,\n        followSymlinks: false,\n        atomic: false,\n        alwaysStat: true,\n        ignorePermissionErrors: true,\n        // Respect options from compiler watchOptions\n        usePolling,\n        interval,\n        ignored: watchOptions.ignored,\n        // TODO: we respect these options for all watch options and allow developers to pass them to chokidar, but chokidar doesn't have these options maybe we need revisit that in future\n        ...rest,\n      };\n    };\n    /**\n     * @param {string | Static | undefined} [optionsForStatic]\n     * @returns {NormalizedStatic}\n     */\n    const getStaticItem = (optionsForStatic) => {\n      const getDefaultStaticOptions = () => {\n        return {\n          directory: path.join(process.cwd(), \"public\"),\n          staticOptions: {},\n          publicPath: [\"/\"],\n          serveIndex: { icons: true },\n          watch: getWatchOptions(),\n        };\n      };\n\n      /** @type {NormalizedStatic} */\n      let item;\n\n      if (typeof optionsForStatic === \"undefined\") {\n        item = getDefaultStaticOptions();\n      } else if (typeof optionsForStatic === \"string\") {\n        item = {\n          ...getDefaultStaticOptions(),\n          directory: optionsForStatic,\n        };\n      } else {\n        const def = getDefaultStaticOptions();\n\n        item = {\n          directory:\n            typeof optionsForStatic.directory !== \"undefined\"\n              ? optionsForStatic.directory\n              : def.directory,\n          // TODO: do merge in the next major release\n          staticOptions:\n            typeof optionsForStatic.staticOptions !== \"undefined\"\n              ? optionsForStatic.staticOptions\n              : def.staticOptions,\n          publicPath:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.publicPath !== \"undefined\"\n              ? Array.isArray(optionsForStatic.publicPath)\n                ? optionsForStatic.publicPath\n                : [optionsForStatic.publicPath]\n              : def.publicPath,\n          // TODO: do merge in the next major release\n          serveIndex:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.serveIndex !== \"undefined\"\n              ? typeof optionsForStatic.serveIndex === \"boolean\" &&\n                optionsForStatic.serveIndex\n                ? def.serveIndex\n                : optionsForStatic.serveIndex\n              : def.serveIndex,\n          watch:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.watch !== \"undefined\"\n              ? // eslint-disable-next-line no-nested-ternary\n                typeof optionsForStatic.watch === \"boolean\"\n                ? optionsForStatic.watch\n                  ? def.watch\n                  : false\n                : getWatchOptions(optionsForStatic.watch)\n              : def.watch,\n        };\n      }\n\n      if (Server.isAbsoluteURL(item.directory)) {\n        throw new Error(\"Using a URL as static.directory is not supported\");\n      }\n\n      return item;\n    };\n\n    if (typeof options.allowedHosts === \"undefined\") {\n      // AllowedHosts allows some default hosts picked from `options.host` or `webSocketURL.hostname` and `localhost`\n      options.allowedHosts = \"auto\";\n    }\n    // We store allowedHosts as array when supplied as string\n    else if (\n      typeof options.allowedHosts === \"string\" &&\n      options.allowedHosts !== \"auto\" &&\n      options.allowedHosts !== \"all\"\n    ) {\n      options.allowedHosts = [options.allowedHosts];\n    }\n    // CLI pass options as array, we should normalize them\n    else if (\n      Array.isArray(options.allowedHosts) &&\n      options.allowedHosts.includes(\"all\")\n    ) {\n      options.allowedHosts = \"all\";\n    }\n\n    if (typeof options.bonjour === \"undefined\") {\n      options.bonjour = false;\n    } else if (typeof options.bonjour === \"boolean\") {\n      options.bonjour = options.bonjour ? {} : false;\n    }\n\n    if (\n      typeof options.client === \"undefined\" ||\n      (typeof options.client === \"object\" && options.client !== null)\n    ) {\n      if (!options.client) {\n        options.client = {};\n      }\n\n      if (typeof options.client.webSocketURL === \"undefined\") {\n        options.client.webSocketURL = {};\n      } else if (typeof options.client.webSocketURL === \"string\") {\n        const parsedURL = new URL(options.client.webSocketURL);\n\n        options.client.webSocketURL = {\n          protocol: parsedURL.protocol,\n          hostname: parsedURL.hostname,\n          port: parsedURL.port.length > 0 ? Number(parsedURL.port) : \"\",\n          pathname: parsedURL.pathname,\n          username: parsedURL.username,\n          password: parsedURL.password,\n        };\n      } else if (typeof options.client.webSocketURL.port === \"string\") {\n        options.client.webSocketURL.port = Number(\n          options.client.webSocketURL.port\n        );\n      }\n\n      // Enable client overlay by default\n      if (typeof options.client.overlay === \"undefined\") {\n        options.client.overlay = true;\n      } else if (typeof options.client.overlay !== \"boolean\") {\n        options.client.overlay = {\n          errors: true,\n          warnings: true,\n          ...options.client.overlay,\n        };\n      }\n\n      if (typeof options.client.reconnect === \"undefined\") {\n        options.client.reconnect = 10;\n      } else if (options.client.reconnect === true) {\n        options.client.reconnect = Infinity;\n      } else if (options.client.reconnect === false) {\n        options.client.reconnect = 0;\n      }\n\n      // Respect infrastructureLogging.level\n      if (typeof options.client.logging === \"undefined\") {\n        options.client.logging = compilerOptions.infrastructureLogging\n          ? compilerOptions.infrastructureLogging.level\n          : \"info\";\n      }\n    }\n\n    if (typeof options.compress === \"undefined\") {\n      options.compress = true;\n    }\n\n    if (typeof options.devMiddleware === \"undefined\") {\n      options.devMiddleware = {};\n    }\n\n    // No need to normalize `headers`\n\n    if (typeof options.historyApiFallback === \"undefined\") {\n      options.historyApiFallback = false;\n    } else if (\n      typeof options.historyApiFallback === \"boolean\" &&\n      options.historyApiFallback\n    ) {\n      options.historyApiFallback = {};\n    }\n\n    // No need to normalize `host`\n\n    options.hot =\n      typeof options.hot === \"boolean\" || options.hot === \"only\"\n        ? options.hot\n        : true;\n\n    const isHTTPs = Boolean(options.https);\n    const isSPDY = Boolean(options.http2);\n\n    if (isHTTPs) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'https' option is deprecated. Please use the 'server' option.\",\n        \"DEP_WEBPACK_DEV_SERVER_HTTPS\"\n      )();\n    }\n\n    if (isSPDY) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'http2' option is deprecated. Please use the 'server' option.\",\n        \"DEP_WEBPACK_DEV_SERVER_HTTP2\"\n      )();\n    }\n\n    options.server = {\n      type:\n        // eslint-disable-next-line no-nested-ternary\n        typeof options.server === \"string\"\n          ? options.server\n          : // eslint-disable-next-line no-nested-ternary\n          typeof (options.server || {}).type === \"string\"\n          ? /** @type {ServerConfiguration} */ (options.server).type || \"http\"\n          : // eslint-disable-next-line no-nested-ternary\n          isSPDY\n          ? \"spdy\"\n          : isHTTPs\n          ? \"https\"\n          : \"http\",\n      options: {\n        .../** @type {ServerOptions} */ (options.https),\n        .../** @type {ServerConfiguration} */ (options.server || {}).options,\n      },\n    };\n\n    if (\n      options.server.type === \"spdy\" &&\n      typeof (/** @type {ServerOptions} */ (options.server.options).spdy) ===\n        \"undefined\"\n    ) {\n      /** @type {ServerOptions} */\n      (options.server.options).spdy = {\n        protocols: [\"h2\", \"http/1.1\"],\n      };\n    }\n\n    if (options.server.type === \"https\" || options.server.type === \"spdy\") {\n      if (\n        typeof (\n          /** @type {ServerOptions} */ (options.server.options).requestCert\n        ) === \"undefined\"\n      ) {\n        /** @type {ServerOptions} */\n        (options.server.options).requestCert = false;\n      }\n\n      const httpsProperties =\n        /** @type {Array<keyof ServerOptions>} */\n        ([\"cacert\", \"ca\", \"cert\", \"crl\", \"key\", \"pfx\"]);\n\n      for (const property of httpsProperties) {\n        if (\n          typeof (\n            /** @type {ServerOptions} */ (options.server.options)[property]\n          ) === \"undefined\"\n        ) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        // @ts-ignore\n        if (property === \"cacert\") {\n          // TODO remove the `cacert` option in favor `ca` in the next major release\n          util.deprecate(\n            () => {},\n            \"The 'cacert' option is deprecated. Please use the 'ca' option.\",\n            \"DEP_WEBPACK_DEV_SERVER_CACERT\"\n          )();\n        }\n\n        /** @type {any} */\n        const value =\n          /** @type {ServerOptions} */\n          (options.server.options)[property];\n        /**\n         * @param {string | Buffer | undefined} item\n         * @returns {string | Buffer | undefined}\n         */\n        const readFile = (item) => {\n          if (\n            Buffer.isBuffer(item) ||\n            (typeof item === \"object\" && item !== null && !Array.isArray(item))\n          ) {\n            return item;\n          }\n\n          if (item) {\n            let stats = null;\n\n            try {\n              stats = fs.lstatSync(fs.realpathSync(item)).isFile();\n            } catch (error) {\n              // Ignore error\n            }\n\n            // It is file\n            return stats ? fs.readFileSync(item) : item;\n          }\n        };\n\n        /** @type {any} */\n        (options.server.options)[property] = Array.isArray(value)\n          ? value.map((item) => readFile(item))\n          : readFile(value);\n      }\n\n      let fakeCert;\n\n      if (\n        !(/** @type {ServerOptions} */ (options.server.options).key) ||\n        /** @type {ServerOptions} */ (!options.server.options).cert\n      ) {\n        const certificateDir = Server.findCacheDir();\n        const certificatePath = path.join(certificateDir, \"server.pem\");\n        let certificateExists;\n\n        try {\n          const certificate = await fs.promises.stat(certificatePath);\n          certificateExists = certificate.isFile();\n        } catch {\n          certificateExists = false;\n        }\n\n        if (certificateExists) {\n          const certificateTtl = 1000 * 60 * 60 * 24;\n          const certificateStat = await fs.promises.stat(certificatePath);\n          const now = Number(new Date());\n\n          // cert is more than 30 days old, kill it with fire\n          if ((now - Number(certificateStat.ctime)) / certificateTtl > 30) {\n            const { promisify } = require(\"util\");\n            const rimraf = require(\"rimraf\");\n            const del = promisify(rimraf);\n\n            this.logger.info(\n              \"SSL certificate is more than 30 days old. Removing...\"\n            );\n\n            await del(certificatePath);\n\n            certificateExists = false;\n          }\n        }\n\n        if (!certificateExists) {\n          this.logger.info(\"Generating SSL certificate...\");\n\n          // @ts-ignore\n          const selfsigned = require(\"selfsigned\");\n          const attributes = [{ name: \"commonName\", value: \"localhost\" }];\n          const pems = selfsigned.generate(attributes, {\n            algorithm: \"sha256\",\n            days: 30,\n            keySize: 2048,\n            extensions: [\n              {\n                name: \"basicConstraints\",\n                cA: true,\n              },\n              {\n                name: \"keyUsage\",\n                keyCertSign: true,\n                digitalSignature: true,\n                nonRepudiation: true,\n                keyEncipherment: true,\n                dataEncipherment: true,\n              },\n              {\n                name: \"extKeyUsage\",\n                serverAuth: true,\n                clientAuth: true,\n                codeSigning: true,\n                timeStamping: true,\n              },\n              {\n                name: \"subjectAltName\",\n                altNames: [\n                  {\n                    // type 2 is DNS\n                    type: 2,\n                    value: \"localhost\",\n                  },\n                  {\n                    type: 2,\n                    value: \"localhost.localdomain\",\n                  },\n                  {\n                    type: 2,\n                    value: \"lvh.me\",\n                  },\n                  {\n                    type: 2,\n                    value: \"*.lvh.me\",\n                  },\n                  {\n                    type: 2,\n                    value: \"[::1]\",\n                  },\n                  {\n                    // type 7 is IP\n                    type: 7,\n                    ip: \"127.0.0.1\",\n                  },\n                  {\n                    type: 7,\n                    ip: \"fe80::1\",\n                  },\n                ],\n              },\n            ],\n          });\n\n          await fs.promises.mkdir(certificateDir, { recursive: true });\n\n          await fs.promises.writeFile(\n            certificatePath,\n            pems.private + pems.cert,\n            {\n              encoding: \"utf8\",\n            }\n          );\n        }\n\n        fakeCert = await fs.promises.readFile(certificatePath);\n\n        this.logger.info(`SSL certificate: ${certificatePath}`);\n      }\n\n      if (\n        /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */ (\n          options.server.options\n        ).cacert\n      ) {\n        if (/** @type {ServerOptions} */ (options.server.options).ca) {\n          this.logger.warn(\n            \"Do not specify 'ca' and 'cacert' options together, the 'ca' option will be used.\"\n          );\n        } else {\n          /** @type {ServerOptions} */\n          (options.server.options).ca =\n            /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n            (options.server.options).cacert;\n        }\n\n        delete (\n          /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */ (\n            options.server.options\n          ).cacert\n        );\n      }\n\n      /** @type {ServerOptions} */\n      (options.server.options).key =\n        /** @type {ServerOptions} */\n        (options.server.options).key || fakeCert;\n      /** @type {ServerOptions} */\n      (options.server.options).cert =\n        /** @type {ServerOptions} */\n        (options.server.options).cert || fakeCert;\n    }\n\n    if (typeof options.ipc === \"boolean\") {\n      const isWindows = process.platform === \"win32\";\n      const pipePrefix = isWindows ? \"\\\\\\\\.\\\\pipe\\\\\" : os.tmpdir();\n      const pipeName = \"webpack-dev-server.sock\";\n\n      options.ipc = path.join(pipePrefix, pipeName);\n    }\n\n    options.liveReload =\n      typeof options.liveReload !== \"undefined\" ? options.liveReload : true;\n\n    options.magicHtml =\n      typeof options.magicHtml !== \"undefined\" ? options.magicHtml : true;\n\n    // https://github.com/webpack/webpack-dev-server/issues/1990\n    const defaultOpenOptions = { wait: false };\n    /**\n     * @param {any} target\n     * @returns {NormalizedOpen[]}\n     */\n    // TODO: remove --open-app in favor of --open-app-name\n    const getOpenItemsFromObject = ({ target, ...rest }) => {\n      const normalizedOptions = { ...defaultOpenOptions, ...rest };\n\n      if (typeof normalizedOptions.app === \"string\") {\n        normalizedOptions.app = {\n          name: normalizedOptions.app,\n        };\n      }\n\n      const normalizedTarget = typeof target === \"undefined\" ? \"<url>\" : target;\n\n      if (Array.isArray(normalizedTarget)) {\n        return normalizedTarget.map((singleTarget) => {\n          return { target: singleTarget, options: normalizedOptions };\n        });\n      }\n\n      return [{ target: normalizedTarget, options: normalizedOptions }];\n    };\n\n    if (typeof options.open === \"undefined\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [];\n    } else if (typeof options.open === \"boolean\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = options.open\n        ? [\n            {\n              target: \"<url>\",\n              options: /** @type {OpenOptions} */ (defaultOpenOptions),\n            },\n          ]\n        : [];\n    } else if (typeof options.open === \"string\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [{ target: options.open, options: defaultOpenOptions }];\n    } else if (Array.isArray(options.open)) {\n      /**\n       * @type {NormalizedOpen[]}\n       */\n      const result = [];\n\n      options.open.forEach((item) => {\n        if (typeof item === \"string\") {\n          result.push({ target: item, options: defaultOpenOptions });\n\n          return;\n        }\n\n        result.push(...getOpenItemsFromObject(item));\n      });\n\n      /** @type {NormalizedOpen[]} */\n      (options.open) = result;\n    } else {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [...getOpenItemsFromObject(options.open)];\n    }\n\n    if (options.onAfterSetupMiddleware) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\",\n        `DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE`\n      )();\n    }\n\n    if (options.onBeforeSetupMiddleware) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\",\n        `DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE`\n      )();\n    }\n\n    if (typeof options.port === \"string\" && options.port !== \"auto\") {\n      options.port = Number(options.port);\n    }\n\n    /**\n     * Assume a proxy configuration specified as:\n     * proxy: {\n     *   'context': { options }\n     * }\n     * OR\n     * proxy: {\n     *   'context': 'target'\n     * }\n     */\n    if (typeof options.proxy !== \"undefined\") {\n      // TODO remove in the next major release, only accept `Array`\n      if (!Array.isArray(options.proxy)) {\n        if (\n          Object.prototype.hasOwnProperty.call(options.proxy, \"target\") ||\n          Object.prototype.hasOwnProperty.call(options.proxy, \"router\")\n        ) {\n          /** @type {ProxyConfigArray} */\n          (options.proxy) = [/** @type {ProxyConfigMap} */ (options.proxy)];\n        } else {\n          /** @type {ProxyConfigArray} */\n          (options.proxy) = Object.keys(options.proxy).map(\n            /**\n             * @param {string} context\n             * @returns {HttpProxyMiddlewareOptions}\n             */\n            (context) => {\n              let proxyOptions;\n              // For backwards compatibility reasons.\n              const correctedContext = context\n                .replace(/^\\*$/, \"**\")\n                .replace(/\\/\\*$/, \"\");\n\n              if (\n                typeof (\n                  /** @type {ProxyConfigMap} */ (options.proxy)[context]\n                ) === \"string\"\n              ) {\n                proxyOptions = {\n                  context: correctedContext,\n                  target:\n                    /** @type {ProxyConfigMap} */\n                    (options.proxy)[context],\n                };\n              } else {\n                proxyOptions = {\n                  // @ts-ignore\n                  .../** @type {ProxyConfigMap} */ (options.proxy)[context],\n                };\n                proxyOptions.context = correctedContext;\n              }\n\n              return proxyOptions;\n            }\n          );\n        }\n      }\n\n      /** @type {ProxyConfigArray} */\n      (options.proxy) =\n        /** @type {ProxyConfigArray} */\n        (options.proxy).map((item) => {\n          if (typeof item === \"function\") {\n            return item;\n          }\n\n          /**\n           * @param {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined | \"none\" | \"log\" | \"verbose\"} level\n           * @returns {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined}\n           */\n          const getLogLevelForProxy = (level) => {\n            if (level === \"none\") {\n              return \"silent\";\n            }\n\n            if (level === \"log\") {\n              return \"info\";\n            }\n\n            if (level === \"verbose\") {\n              return \"debug\";\n            }\n\n            return level;\n          };\n\n          if (typeof item.logLevel === \"undefined\") {\n            item.logLevel = getLogLevelForProxy(\n              compilerOptions.infrastructureLogging\n                ? compilerOptions.infrastructureLogging.level\n                : \"info\"\n            );\n          }\n\n          if (typeof item.logProvider === \"undefined\") {\n            item.logProvider = () => this.logger;\n          }\n\n          return item;\n        });\n    }\n\n    if (typeof options.setupExitSignals === \"undefined\") {\n      options.setupExitSignals = true;\n    }\n\n    if (typeof options.static === \"undefined\") {\n      options.static = [getStaticItem()];\n    } else if (typeof options.static === \"boolean\") {\n      options.static = options.static ? [getStaticItem()] : false;\n    } else if (typeof options.static === \"string\") {\n      options.static = [getStaticItem(options.static)];\n    } else if (Array.isArray(options.static)) {\n      options.static = options.static.map((item) => getStaticItem(item));\n    } else {\n      options.static = [getStaticItem(options.static)];\n    }\n\n    if (typeof options.watchFiles === \"string\") {\n      options.watchFiles = [\n        { paths: options.watchFiles, options: getWatchOptions() },\n      ];\n    } else if (\n      typeof options.watchFiles === \"object\" &&\n      options.watchFiles !== null &&\n      !Array.isArray(options.watchFiles)\n    ) {\n      options.watchFiles = [\n        {\n          paths: options.watchFiles.paths,\n          options: getWatchOptions(options.watchFiles.options || {}),\n        },\n      ];\n    } else if (Array.isArray(options.watchFiles)) {\n      options.watchFiles = options.watchFiles.map((item) => {\n        if (typeof item === \"string\") {\n          return { paths: item, options: getWatchOptions() };\n        }\n\n        return {\n          paths: item.paths,\n          options: getWatchOptions(item.options || {}),\n        };\n      });\n    } else {\n      options.watchFiles = [];\n    }\n\n    const defaultWebSocketServerType = \"ws\";\n    const defaultWebSocketServerOptions = { path: \"/ws\" };\n\n    if (typeof options.webSocketServer === \"undefined\") {\n      options.webSocketServer = {\n        type: defaultWebSocketServerType,\n        options: defaultWebSocketServerOptions,\n      };\n    } else if (\n      typeof options.webSocketServer === \"boolean\" &&\n      !options.webSocketServer\n    ) {\n      options.webSocketServer = false;\n    } else if (\n      typeof options.webSocketServer === \"string\" ||\n      typeof options.webSocketServer === \"function\"\n    ) {\n      options.webSocketServer = {\n        type: options.webSocketServer,\n        options: defaultWebSocketServerOptions,\n      };\n    } else {\n      options.webSocketServer = {\n        type:\n          /** @type {WebSocketServerConfiguration} */\n          (options.webSocketServer).type || defaultWebSocketServerType,\n        options: {\n          ...defaultWebSocketServerOptions,\n          .../** @type {WebSocketServerConfiguration} */\n          (options.webSocketServer).options,\n        },\n      };\n\n      const webSocketServer =\n        /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n        (options.webSocketServer);\n\n      if (typeof webSocketServer.options.port === \"string\") {\n        webSocketServer.options.port = Number(webSocketServer.options.port);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  getClientTransport() {\n    let clientImplementation;\n    let clientImplementationFound = true;\n\n    const isKnownWebSocketServerImplementation =\n      this.options.webSocketServer &&\n      typeof (\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type\n      ) === \"string\" &&\n      // @ts-ignore\n      (this.options.webSocketServer.type === \"ws\" ||\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type === \"sockjs\");\n\n    let clientTransport;\n\n    if (this.options.client) {\n      if (\n        typeof (\n          /** @type {ClientConfiguration} */\n          (this.options.client).webSocketTransport\n        ) !== \"undefined\"\n      ) {\n        clientTransport =\n          /** @type {ClientConfiguration} */\n          (this.options.client).webSocketTransport;\n      } else if (isKnownWebSocketServerImplementation) {\n        clientTransport =\n          /** @type {WebSocketServerConfiguration} */\n          (this.options.webSocketServer).type;\n      } else {\n        clientTransport = \"ws\";\n      }\n    } else {\n      clientTransport = \"ws\";\n    }\n\n    switch (typeof clientTransport) {\n      case \"string\":\n        // could be 'sockjs', 'ws', or a path that should be required\n        if (clientTransport === \"sockjs\") {\n          clientImplementation = require.resolve(\n            \"../client/clients/SockJSClient\"\n          );\n        } else if (clientTransport === \"ws\") {\n          clientImplementation = require.resolve(\n            \"../client/clients/WebSocketClient\"\n          );\n        } else {\n          try {\n            clientImplementation = require.resolve(clientTransport);\n          } catch (e) {\n            clientImplementationFound = false;\n          }\n        }\n        break;\n      default:\n        clientImplementationFound = false;\n    }\n\n    if (!clientImplementationFound) {\n      throw new Error(\n        `${\n          !isKnownWebSocketServerImplementation\n            ? \"When you use custom web socket implementation you must explicitly specify client.webSocketTransport. \"\n            : \"\"\n        }client.webSocketTransport must be a string denoting a default implementation (e.g. 'sockjs', 'ws') or a full path to a JS file via require.resolve(...) which exports a class `\n      );\n    }\n\n    return /** @type {string} */ (clientImplementation);\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  getServerTransport() {\n    let implementation;\n    let implementationFound = true;\n\n    switch (\n      typeof (\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type\n      )\n    ) {\n      case \"string\":\n        // Could be 'sockjs', in the future 'ws', or a path that should be required\n        if (\n          /** @type {WebSocketServerConfiguration} */ (\n            this.options.webSocketServer\n          ).type === \"sockjs\"\n        ) {\n          implementation = require(\"./servers/SockJSServer\");\n        } else if (\n          /** @type {WebSocketServerConfiguration} */ (\n            this.options.webSocketServer\n          ).type === \"ws\"\n        ) {\n          implementation = require(\"./servers/WebsocketServer\");\n        } else {\n          try {\n            // eslint-disable-next-line import/no-dynamic-require\n            implementation = require(/** @type {WebSocketServerConfiguration} */ (\n              this.options.webSocketServer\n            ).type);\n          } catch (error) {\n            implementationFound = false;\n          }\n        }\n        break;\n      case \"function\":\n        implementation = /** @type {WebSocketServerConfiguration} */ (\n          this.options.webSocketServer\n        ).type;\n        break;\n      default:\n        implementationFound = false;\n    }\n\n    if (!implementationFound) {\n      throw new Error(\n        \"webSocketServer (webSocketServer.type) must be a string denoting a default implementation (e.g. 'ws', 'sockjs'), a full path to \" +\n          \"a JS file which exports a class extending BaseServer (webpack-dev-server/lib/servers/BaseServer.js) \" +\n          \"via require.resolve(...), or the class itself which extends BaseServer\"\n      );\n    }\n\n    return implementation;\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupProgressPlugin() {\n    const { ProgressPlugin } =\n      /** @type {MultiCompiler}*/\n      (this.compiler).compilers\n        ? /** @type {MultiCompiler}*/ (this.compiler).compilers[0].webpack\n        : /** @type {Compiler}*/ (this.compiler).webpack ||\n          // TODO remove me after drop webpack v4\n          require(\"webpack\");\n\n    new ProgressPlugin(\n      /**\n       * @param {number} percent\n       * @param {string} msg\n       * @param {string} addInfo\n       * @param {string} pluginName\n       */\n      (percent, msg, addInfo, pluginName) => {\n        percent = Math.floor(percent * 100);\n\n        if (percent === 100) {\n          msg = \"Compilation completed\";\n        }\n\n        if (addInfo) {\n          msg = `${msg} (${addInfo})`;\n        }\n\n        if (this.webSocketServer) {\n          this.sendMessage(this.webSocketServer.clients, \"progress-update\", {\n            percent,\n            msg,\n            pluginName,\n          });\n        }\n\n        if (this.server) {\n          this.server.emit(\"progress-update\", { percent, msg, pluginName });\n        }\n      }\n    ).apply(this.compiler);\n  }\n\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n  async initialize() {\n    if (this.options.webSocketServer) {\n      const compilers =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers || [this.compiler];\n\n      compilers.forEach((compiler) => {\n        this.addAdditionalEntries(compiler);\n\n        const webpack = compiler.webpack || require(\"webpack\");\n\n        new webpack.ProvidePlugin({\n          __webpack_dev_server_client__: this.getClientTransport(),\n        }).apply(compiler);\n\n        // TODO remove after drop webpack v4 support\n        compiler.options.plugins = compiler.options.plugins || [];\n\n        if (this.options.hot) {\n          const HMRPluginExists = compiler.options.plugins.find(\n            (p) => p.constructor === webpack.HotModuleReplacementPlugin\n          );\n\n          if (HMRPluginExists) {\n            this.logger.warn(\n              `\"hot: true\" automatically applies HMR plugin, you don't have to add it manually to your webpack configuration.`\n            );\n          } else {\n            // Apply the HMR plugin\n            const plugin = new webpack.HotModuleReplacementPlugin();\n\n            plugin.apply(compiler);\n          }\n        }\n      });\n\n      if (\n        this.options.client &&\n        /** @type {ClientConfiguration} */ (this.options.client).progress\n      ) {\n        this.setupProgressPlugin();\n      }\n    }\n\n    this.setupHooks();\n    this.setupApp();\n    this.setupHostHeaderCheck();\n    this.setupDevMiddleware();\n    // Should be after `webpack-dev-middleware`, otherwise other middlewares might rewrite response\n    this.setupBuiltInRoutes();\n    this.setupWatchFiles();\n    this.setupWatchStaticFiles();\n    this.setupMiddlewares();\n    this.createServer();\n\n    if (this.options.setupExitSignals) {\n      const signals = [\"SIGINT\", \"SIGTERM\"];\n\n      let needForceShutdown = false;\n\n      signals.forEach((signal) => {\n        const listener = () => {\n          if (needForceShutdown) {\n            process.exit();\n          }\n\n          this.logger.info(\n            \"Gracefully shutting down. To force exit, press ^C again. Please wait...\"\n          );\n\n          needForceShutdown = true;\n\n          this.stopCallback(() => {\n            if (typeof this.compiler.close === \"function\") {\n              this.compiler.close(() => {\n                process.exit();\n              });\n            } else {\n              process.exit();\n            }\n          });\n        };\n\n        this.listeners.push({ name: signal, listener });\n\n        process.on(signal, listener);\n      });\n    }\n\n    // Proxy WebSocket without the initial http request\n    // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n    /** @type {RequestHandler[]} */\n    (this.webSocketProxies).forEach((webSocketProxy) => {\n      /** @type {import(\"http\").Server} */\n      (this.server).on(\n        \"upgrade\",\n        /** @type {RequestHandler & { upgrade: NonNullable<RequestHandler[\"upgrade\"]> }} */\n        (webSocketProxy).upgrade\n      );\n    }, this);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupApp() {\n    /** @type {import(\"express\").Application | undefined}*/\n    // eslint-disable-next-line new-cap\n    this.app = new /** @type {any} */ (express)();\n  }\n\n  /**\n   * @private\n   * @param {Stats | MultiStats} statsObj\n   * @returns {StatsCompilation}\n   */\n  getStats(statsObj) {\n    const stats = Server.DEFAULT_STATS;\n    const compilerOptions = this.getCompilerOptions();\n\n    // @ts-ignore\n    if (compilerOptions.stats && compilerOptions.stats.warningsFilter) {\n      // @ts-ignore\n      stats.warningsFilter = compilerOptions.stats.warningsFilter;\n    }\n\n    return statsObj.toJson(stats);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupHooks() {\n    this.compiler.hooks.invalid.tap(\"webpack-dev-server\", () => {\n      if (this.webSocketServer) {\n        this.sendMessage(this.webSocketServer.clients, \"invalid\");\n      }\n    });\n    this.compiler.hooks.done.tap(\n      \"webpack-dev-server\",\n      /**\n       * @param {Stats | MultiStats} stats\n       */\n      (stats) => {\n        if (this.webSocketServer) {\n          this.sendStats(this.webSocketServer.clients, this.getStats(stats));\n        }\n\n        /**\n         * @private\n         * @type {Stats | MultiStats}\n         */\n        this.stats = stats;\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupHostHeaderCheck() {\n    /** @type {import(\"express\").Application} */\n    (this.app).all(\n      \"*\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @param {NextFunction} next\n       * @returns {void}\n       */\n      (req, res, next) => {\n        if (\n          this.checkHeader(\n            /** @type {{ [key: string]: string | undefined }} */\n            (req.headers),\n            \"host\"\n          )\n        ) {\n          return next();\n        }\n\n        res.send(\"Invalid Host header\");\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupDevMiddleware() {\n    const webpackDevMiddleware = require(\"webpack-dev-middleware\");\n\n    // middleware for serving webpack bundle\n    this.middleware = webpackDevMiddleware(\n      this.compiler,\n      this.options.devMiddleware\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupBuiltInRoutes() {\n    const { app, middleware } = this;\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/__webpack_dev_server__/sockjs.bundle.js\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (req, res) => {\n        res.setHeader(\"Content-Type\", \"application/javascript\");\n\n        const clientPath = path.join(__dirname, \"..\", \"client\");\n\n        res.sendFile(path.join(clientPath, \"modules/sockjs-client/index.js\"));\n      }\n    );\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/webpack-dev-server/invalidate\",\n      /**\n       * @param {Request} _req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (_req, res) => {\n        this.invalidate();\n\n        res.end();\n      }\n    );\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/webpack-dev-server\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (req, res) => {\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        (middleware).waitUntilValid((stats) => {\n          res.setHeader(\"Content-Type\", \"text/html\");\n          res.write(\n            '<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body>'\n          );\n\n          const statsForPrint =\n            typeof (/** @type {MultiStats} */ (stats).stats) !== \"undefined\"\n              ? /** @type {MultiStats} */ (stats).toJson().children\n              : [/** @type {Stats} */ (stats).toJson()];\n\n          res.write(`<h1>Assets Report:</h1>`);\n\n          /**\n           * @type {StatsCompilation[]}\n           */\n          (statsForPrint).forEach((item, index) => {\n            res.write(\"<div>\");\n\n            const name =\n              // eslint-disable-next-line no-nested-ternary\n              typeof item.name !== \"undefined\"\n                ? item.name\n                : /** @type {MultiStats} */ (stats).stats\n                ? `unnamed[${index}]`\n                : \"unnamed\";\n\n            res.write(`<h2>Compilation: ${name}</h2>`);\n            res.write(\"<ul>\");\n\n            const publicPath =\n              item.publicPath === \"auto\" ? \"\" : item.publicPath;\n\n            for (const asset of /** @type {NonNullable<StatsCompilation[\"assets\"]>} */ (\n              item.assets\n            )) {\n              const assetName = asset.name;\n              const assetURL = `${publicPath}${assetName}`;\n\n              res.write(\n                `<li>\n              <strong><a href=\"${assetURL}\" target=\"_blank\">${assetName}</a></strong>\n            </li>`\n              );\n            }\n\n            res.write(\"</ul>\");\n            res.write(\"</div>\");\n          });\n\n          res.end(\"</body></html>\");\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupWatchStaticFiles() {\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        if (staticOption.watch) {\n          this.watchFiles(staticOption.directory, staticOption.watch);\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupWatchFiles() {\n    const { watchFiles } = this.options;\n\n    if (/** @type {WatchFiles[]} */ (watchFiles).length > 0) {\n      /** @type {WatchFiles[]} */\n      (watchFiles).forEach((item) => {\n        this.watchFiles(item.paths, item.options);\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupMiddlewares() {\n    /**\n     * @type {Array<Middleware>}\n     */\n    let middlewares = [];\n\n    // compress is placed last and uses unshift so that it will be the first middleware used\n    if (this.options.compress) {\n      const compression = require(\"compression\");\n\n      middlewares.push({ name: \"compression\", middleware: compression() });\n    }\n\n    if (typeof this.options.onBeforeSetupMiddleware === \"function\") {\n      this.options.onBeforeSetupMiddleware(this);\n    }\n\n    if (typeof this.options.headers !== \"undefined\") {\n      middlewares.push({\n        name: \"set-headers\",\n        path: \"*\",\n        middleware: this.setHeaders.bind(this),\n      });\n    }\n\n    middlewares.push({\n      name: \"webpack-dev-middleware\",\n      middleware:\n        /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        (this.middleware),\n    });\n\n    if (this.options.proxy) {\n      const { createProxyMiddleware } = require(\"http-proxy-middleware\");\n\n      /**\n       * @param {ProxyConfigArrayItem} proxyConfig\n       * @returns {RequestHandler | undefined}\n       */\n      const getProxyMiddleware = (proxyConfig) => {\n        // It is possible to use the `bypass` method without a `target` or `router`.\n        // However, the proxy middleware has no use in this case, and will fail to instantiate.\n        if (proxyConfig.target) {\n          const context = proxyConfig.context || proxyConfig.path;\n\n          return createProxyMiddleware(\n            /** @type {string} */ (context),\n            proxyConfig\n          );\n        }\n\n        if (proxyConfig.router) {\n          return createProxyMiddleware(proxyConfig);\n        }\n      };\n\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: [\n       *   {\n       *     context: \"value\",\n       *     ...options,\n       *   },\n       *   // or:\n       *   function() {\n       *     return {\n       *       context: \"context\",\n       *       ...options,\n       *     };\n       *   }\n       * ]\n       */\n      /** @type {ProxyConfigArray} */\n      (this.options.proxy).forEach((proxyConfigOrCallback) => {\n        /**\n         * @type {RequestHandler}\n         */\n        let proxyMiddleware;\n\n        let proxyConfig =\n          typeof proxyConfigOrCallback === \"function\"\n            ? proxyConfigOrCallback()\n            : proxyConfigOrCallback;\n\n        proxyMiddleware =\n          /** @type {RequestHandler} */\n          (getProxyMiddleware(proxyConfig));\n\n        if (proxyConfig.ws) {\n          this.webSocketProxies.push(proxyMiddleware);\n        }\n\n        /**\n         * @param {Request} req\n         * @param {Response} res\n         * @param {NextFunction} next\n         * @returns {Promise<void>}\n         */\n        const handler = async (req, res, next) => {\n          if (typeof proxyConfigOrCallback === \"function\") {\n            const newProxyConfig = proxyConfigOrCallback(req, res, next);\n\n            if (newProxyConfig !== proxyConfig) {\n              proxyConfig = newProxyConfig;\n              proxyMiddleware =\n                /** @type {RequestHandler} */\n                (getProxyMiddleware(proxyConfig));\n            }\n          }\n\n          // - Check if we have a bypass function defined\n          // - In case the bypass function is defined we'll retrieve the\n          // bypassUrl from it otherwise bypassUrl would be null\n          // TODO remove in the next major in favor `context` and `router` options\n          const isByPassFuncDefined = typeof proxyConfig.bypass === \"function\";\n          const bypassUrl = isByPassFuncDefined\n            ? await /** @type {ByPass} */ (proxyConfig.bypass)(\n                req,\n                res,\n                proxyConfig\n              )\n            : null;\n\n          if (typeof bypassUrl === \"boolean\") {\n            // skip the proxy\n            // @ts-ignore\n            req.url = null;\n            next();\n          } else if (typeof bypassUrl === \"string\") {\n            // byPass to that url\n            req.url = bypassUrl;\n            next();\n          } else if (proxyMiddleware) {\n            return proxyMiddleware(req, res, next);\n          } else {\n            next();\n          }\n        };\n\n        middlewares.push({\n          name: \"http-proxy-middleware\",\n          middleware: handler,\n        });\n        // Also forward error requests to the proxy so it can handle them.\n        middlewares.push({\n          name: \"http-proxy-middleware-error-handler\",\n          middleware:\n            /**\n             * @param {Error} error\n             * @param {Request} req\n             * @param {Response} res\n             * @param {NextFunction} next\n             * @returns {any}\n             */\n            (error, req, res, next) => handler(req, res, next),\n        });\n      });\n\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n          /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n          (this.middleware),\n      });\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        staticOption.publicPath.forEach((publicPath) => {\n          middlewares.push({\n            name: \"express-static\",\n            path: publicPath,\n            middleware: express.static(\n              staticOption.directory,\n              staticOption.staticOptions\n            ),\n          });\n        });\n      });\n    }\n\n    if (this.options.historyApiFallback) {\n      const connectHistoryApiFallback = require(\"connect-history-api-fallback\");\n      const { historyApiFallback } = this.options;\n\n      if (\n        typeof (\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback).logger\n        ) === \"undefined\" &&\n        !(\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback).verbose\n        )\n      ) {\n        // @ts-ignore\n        historyApiFallback.logger = this.logger.log.bind(\n          this.logger,\n          \"[connect-history-api-fallback]\"\n        );\n      }\n\n      // Fall back to /index.html if nothing else matches.\n      middlewares.push({\n        name: \"connect-history-api-fallback\",\n        middleware: connectHistoryApiFallback(\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback)\n        ),\n      });\n\n      // include our middleware to ensure\n      // it is able to handle '/index.html' request after redirect\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n          /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n          (this.middleware),\n      });\n\n      if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n        /** @type {NormalizedStatic[]} */\n        (this.options.static).forEach((staticOption) => {\n          staticOption.publicPath.forEach((publicPath) => {\n            middlewares.push({\n              name: \"express-static\",\n              path: publicPath,\n              middleware: express.static(\n                staticOption.directory,\n                staticOption.staticOptions\n              ),\n            });\n          });\n        });\n      }\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      const serveIndex = require(\"serve-index\");\n\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        staticOption.publicPath.forEach((publicPath) => {\n          if (staticOption.serveIndex) {\n            middlewares.push({\n              name: \"serve-index\",\n              path: publicPath,\n              /**\n               * @param {Request} req\n               * @param {Response} res\n               * @param {NextFunction} next\n               * @returns {void}\n               */\n              middleware: (req, res, next) => {\n                // serve-index doesn't fallthrough non-get/head request to next middleware\n                if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n                  return next();\n                }\n\n                serveIndex(\n                  staticOption.directory,\n                  /** @type {ServeIndexOptions} */\n                  (staticOption.serveIndex)\n                )(req, res, next);\n              },\n            });\n          }\n        });\n      });\n    }\n\n    if (this.options.magicHtml) {\n      middlewares.push({\n        name: \"serve-magic-html\",\n        middleware: this.serveMagicHtml.bind(this),\n      });\n    }\n\n    // Register this middleware always as the last one so that it's only used as a\n    // fallback when no other middleware responses.\n    middlewares.push({\n      name: \"options-middleware\",\n      path: \"*\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @param {NextFunction} next\n       * @returns {void}\n       */\n      middleware: (req, res, next) => {\n        if (req.method === \"OPTIONS\") {\n          res.statusCode = 204;\n          res.setHeader(\"Content-Length\", \"0\");\n          res.end();\n          return;\n        }\n        next();\n      },\n    });\n\n    if (typeof this.options.setupMiddlewares === \"function\") {\n      middlewares = this.options.setupMiddlewares(middlewares, this);\n    }\n\n    middlewares.forEach((middleware) => {\n      if (typeof middleware === \"function\") {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware);\n      } else if (typeof middleware.path !== \"undefined\") {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware.path, middleware.middleware);\n      } else {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware.middleware);\n      }\n    });\n\n    if (typeof this.options.onAfterSetupMiddleware === \"function\") {\n      this.options.onAfterSetupMiddleware(this);\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  createServer() {\n    const { type, options } = /** @type {ServerConfiguration} */ (\n      this.options.server\n    );\n\n    /** @type {import(\"http\").Server | undefined | null} */\n    // eslint-disable-next-line import/no-dynamic-require\n    this.server = require(/** @type {string} */ (type)).createServer(\n      options,\n      this.app\n    );\n\n    /** @type {import(\"http\").Server} */\n    (this.server).on(\n      \"connection\",\n      /**\n       * @param {Socket} socket\n       */\n      (socket) => {\n        // Add socket to list\n        this.sockets.push(socket);\n\n        socket.once(\"close\", () => {\n          // Remove socket from list\n          this.sockets.splice(this.sockets.indexOf(socket), 1);\n        });\n      }\n    );\n\n    /** @type {import(\"http\").Server} */\n    (this.server).on(\n      \"error\",\n      /**\n       * @param {Error} error\n       */\n      (error) => {\n        throw error;\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  // TODO: remove `--web-socket-server` in favor of `--web-socket-server-type`\n  createWebSocketServer() {\n    /** @type {WebSocketServerImplementation | undefined | null} */\n    this.webSocketServer = new /** @type {any} */ (this.getServerTransport())(\n      this\n    );\n    /** @type {WebSocketServerImplementation} */\n    (this.webSocketServer).implementation.on(\n      \"connection\",\n      /**\n       * @param {ClientConnection} client\n       * @param {IncomingMessage} request\n       */\n      (client, request) => {\n        /** @type {{ [key: string]: string | undefined } | undefined} */\n        const headers =\n          // eslint-disable-next-line no-nested-ternary\n          typeof request !== \"undefined\"\n            ? /** @type {{ [key: string]: string | undefined }} */\n              (request.headers)\n            : typeof (\n                /** @type {import(\"sockjs\").Connection} */ (client).headers\n              ) !== \"undefined\"\n            ? /** @type {import(\"sockjs\").Connection} */ (client).headers\n            : // eslint-disable-next-line no-undefined\n              undefined;\n\n        if (!headers) {\n          this.logger.warn(\n            'webSocketServer implementation must pass headers for the \"connection\" event'\n          );\n        }\n\n        if (\n          !headers ||\n          !this.checkHeader(headers, \"host\") ||\n          !this.checkHeader(headers, \"origin\")\n        ) {\n          this.sendMessage([client], \"error\", \"Invalid Host/Origin header\");\n\n          // With https enabled, the sendMessage above is encrypted asynchronously so not yet sent\n          // Terminate would prevent it sending, so use close to allow it to be sent\n          client.close();\n\n          return;\n        }\n\n        if (this.options.hot === true || this.options.hot === \"only\") {\n          this.sendMessage([client], \"hot\");\n        }\n\n        if (this.options.liveReload) {\n          this.sendMessage([client], \"liveReload\");\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */\n          (this.options.client).progress\n        ) {\n          this.sendMessage(\n            [client],\n            \"progress\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).progress\n          );\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */ (this.options.client).reconnect\n        ) {\n          this.sendMessage(\n            [client],\n            \"reconnect\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).reconnect\n          );\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */\n          (this.options.client).overlay\n        ) {\n          this.sendMessage(\n            [client],\n            \"overlay\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).overlay\n          );\n        }\n\n        if (!this.stats) {\n          return;\n        }\n\n        this.sendStats([client], this.getStats(this.stats), true);\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @param {string} defaultOpenTarget\n   * @returns {void}\n   */\n  openBrowser(defaultOpenTarget) {\n    const open = require(\"open\");\n\n    Promise.all(\n      /** @type {NormalizedOpen[]} */\n      (this.options.open).map((item) => {\n        /**\n         * @type {string}\n         */\n        let openTarget;\n\n        if (item.target === \"<url>\") {\n          openTarget = defaultOpenTarget;\n        } else {\n          openTarget = Server.isAbsoluteURL(item.target)\n            ? item.target\n            : new URL(item.target, defaultOpenTarget).toString();\n        }\n\n        return open(openTarget, item.options).catch(() => {\n          this.logger.warn(\n            `Unable to open \"${openTarget}\" page${\n              item.options.app\n                ? ` in \"${\n                    /** @type {import(\"open\").App} */\n                    (item.options.app).name\n                  }\" app${\n                    /** @type {import(\"open\").App} */\n                    (item.options.app).arguments\n                      ? ` with \"${\n                          /** @type {import(\"open\").App} */\n                          (item.options.app).arguments.join(\" \")\n                        }\" arguments`\n                      : \"\"\n                  }`\n                : \"\"\n            }. If you are running in a headless environment, please do not use the \"open\" option or related flags like \"--open\", \"--open-target\", and \"--open-app\".`\n          );\n        });\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  runBonjour() {\n    const { Bonjour } = require(\"bonjour-service\");\n    /**\n     * @private\n     * @type {Bonjour | undefined}\n     */\n    this.bonjour = new Bonjour();\n    this.bonjour.publish({\n      // @ts-expect-error\n      name: `Webpack Dev Server ${os.hostname()}:${this.options.port}`,\n      // @ts-expect-error\n      port: /** @type {number} */ (this.options.port),\n      // @ts-expect-error\n      type:\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\" ? \"http\" : \"https\",\n      subtypes: [\"webpack\"],\n      .../** @type {BonjourOptions} */ (this.options.bonjour),\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  stopBonjour(callback = () => {}) {\n    /** @type {Bonjour} */\n    (this.bonjour).unpublishAll(() => {\n      /** @type {Bonjour} */\n      (this.bonjour).destroy();\n\n      if (callback) {\n        callback();\n      }\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  logStatus() {\n    const { isColorSupported, cyan, red } = require(\"colorette\");\n\n    /**\n     * @param {Compiler[\"options\"]} compilerOptions\n     * @returns {boolean}\n     */\n    const getColorsOption = (compilerOptions) => {\n      /**\n       * @type {boolean}\n       */\n      let colorsEnabled;\n\n      if (\n        compilerOptions.stats &&\n        typeof (/** @type {StatsOptions} */ (compilerOptions.stats).colors) !==\n          \"undefined\"\n      ) {\n        colorsEnabled =\n          /** @type {boolean} */\n          (/** @type {StatsOptions} */ (compilerOptions.stats).colors);\n      } else {\n        colorsEnabled = isColorSupported;\n      }\n\n      return colorsEnabled;\n    };\n\n    const colors = {\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      info(useColor, msg) {\n        if (useColor) {\n          return cyan(msg);\n        }\n\n        return msg;\n      },\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      error(useColor, msg) {\n        if (useColor) {\n          return red(msg);\n        }\n\n        return msg;\n      },\n    };\n    const useColor = getColorsOption(this.getCompilerOptions());\n\n    if (this.options.ipc) {\n      this.logger.info(\n        `Project is running at: \"${\n          /** @type {import(\"http\").Server} */\n          (this.server).address()\n        }\"`\n      );\n    } else {\n      const protocol =\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\" ? \"http\" : \"https\";\n      const { address, port } =\n        /** @type {import(\"net\").AddressInfo} */\n        (\n          /** @type {import(\"http\").Server} */\n          (this.server).address()\n        );\n      /**\n       * @param {string} newHostname\n       * @returns {string}\n       */\n      const prettyPrintURL = (newHostname) =>\n        url.format({ protocol, hostname: newHostname, port, pathname: \"/\" });\n\n      let server;\n      let localhost;\n      let loopbackIPv4;\n      let loopbackIPv6;\n      let networkUrlIPv4;\n      let networkUrlIPv6;\n\n      if (this.options.host) {\n        if (this.options.host === \"localhost\") {\n          localhost = prettyPrintURL(\"localhost\");\n        } else {\n          let isIP;\n\n          try {\n            isIP = ipaddr.parse(this.options.host);\n          } catch (error) {\n            // Ignore\n          }\n\n          if (!isIP) {\n            server = prettyPrintURL(this.options.host);\n          }\n        }\n      }\n\n      const parsedIP = ipaddr.parse(address);\n\n      if (parsedIP.range() === \"unspecified\") {\n        localhost = prettyPrintURL(\"localhost\");\n\n        const networkIPv4 = Server.internalIPSync(\"v4\");\n\n        if (networkIPv4) {\n          networkUrlIPv4 = prettyPrintURL(networkIPv4);\n        }\n\n        const networkIPv6 = Server.internalIPSync(\"v6\");\n\n        if (networkIPv6) {\n          networkUrlIPv6 = prettyPrintURL(networkIPv6);\n        }\n      } else if (parsedIP.range() === \"loopback\") {\n        if (parsedIP.kind() === \"ipv4\") {\n          loopbackIPv4 = prettyPrintURL(parsedIP.toString());\n        } else if (parsedIP.kind() === \"ipv6\") {\n          loopbackIPv6 = prettyPrintURL(parsedIP.toString());\n        }\n      } else {\n        networkUrlIPv4 =\n          parsedIP.kind() === \"ipv6\" &&\n          /** @type {IPv6} */\n          (parsedIP).isIPv4MappedAddress()\n            ? prettyPrintURL(\n                /** @type {IPv6} */\n                (parsedIP).toIPv4Address().toString()\n              )\n            : prettyPrintURL(address);\n\n        if (parsedIP.kind() === \"ipv6\") {\n          networkUrlIPv6 = prettyPrintURL(address);\n        }\n      }\n\n      this.logger.info(\"Project is running at:\");\n\n      if (server) {\n        this.logger.info(`Server: ${colors.info(useColor, server)}`);\n      }\n\n      if (localhost || loopbackIPv4 || loopbackIPv6) {\n        const loopbacks = [];\n\n        if (localhost) {\n          loopbacks.push([colors.info(useColor, localhost)]);\n        }\n\n        if (loopbackIPv4) {\n          loopbacks.push([colors.info(useColor, loopbackIPv4)]);\n        }\n\n        if (loopbackIPv6) {\n          loopbacks.push([colors.info(useColor, loopbackIPv6)]);\n        }\n\n        this.logger.info(`Loopback: ${loopbacks.join(\", \")}`);\n      }\n\n      if (networkUrlIPv4) {\n        this.logger.info(\n          `On Your Network (IPv4): ${colors.info(useColor, networkUrlIPv4)}`\n        );\n      }\n\n      if (networkUrlIPv6) {\n        this.logger.info(\n          `On Your Network (IPv6): ${colors.info(useColor, networkUrlIPv6)}`\n        );\n      }\n\n      if (/** @type {NormalizedOpen[]} */ (this.options.open).length > 0) {\n        const openTarget = prettyPrintURL(this.options.host || \"localhost\");\n\n        this.openBrowser(openTarget);\n      }\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      this.logger.info(\n        `Content not from webpack is served from '${colors.info(\n          useColor,\n          /** @type {NormalizedStatic[]} */\n          (this.options.static)\n            .map((staticOption) => staticOption.directory)\n            .join(\", \")\n        )}' directory`\n      );\n    }\n\n    if (this.options.historyApiFallback) {\n      this.logger.info(\n        `404s will fallback to '${colors.info(\n          useColor,\n          /** @type {ConnectHistoryApiFallbackOptions} */ (\n            this.options.historyApiFallback\n          ).index || \"/index.html\"\n        )}'`\n      );\n    }\n\n    if (this.options.bonjour) {\n      const bonjourProtocol =\n        /** @type {BonjourOptions} */\n        (this.options.bonjour).type ||\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\"\n          ? \"http\"\n          : \"https\";\n\n      this.logger.info(\n        `Broadcasting \"${bonjourProtocol}\" with subtype of \"webpack\" via ZeroConf DNS (Bonjour)`\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   */\n  setHeaders(req, res, next) {\n    let { headers } = this.options;\n\n    if (headers) {\n      if (typeof headers === \"function\") {\n        headers = headers(\n          req,\n          res,\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          (this.middleware).context\n        );\n      }\n\n      /**\n       * @type {{key: string, value: string}[]}\n       */\n      const allHeaders = [];\n\n      if (!Array.isArray(headers)) {\n        // eslint-disable-next-line guard-for-in\n        for (const name in headers) {\n          // @ts-ignore\n          allHeaders.push({ key: name, value: headers[name] });\n        }\n\n        headers = allHeaders;\n      }\n\n      headers.forEach(\n        /**\n         * @param {{key: string, value: any}} header\n         */\n        (header) => {\n          res.setHeader(header.key, header.value);\n        }\n      );\n    }\n\n    next();\n  }\n\n  /**\n   * @private\n   * @param {{ [key: string]: string | undefined }} headers\n   * @param {string} headerToCheck\n   * @returns {boolean}\n   */\n  checkHeader(headers, headerToCheck) {\n    // allow user to opt out of this security check, at their own risk\n    // by explicitly enabling allowedHosts\n    if (this.options.allowedHosts === \"all\") {\n      return true;\n    }\n\n    // get the Host header and extract hostname\n    // we don't care about port not matching\n    const hostHeader = headers[headerToCheck];\n\n    if (!hostHeader) {\n      return false;\n    }\n\n    if (/^(file|.+-extension):/i.test(hostHeader)) {\n      return true;\n    }\n\n    // use the node url-parser to retrieve the hostname from the host-header.\n    const hostname = url.parse(\n      // if hostHeader doesn't have scheme, add // for parsing.\n      /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : `//${hostHeader}`,\n      false,\n      true\n    ).hostname;\n\n    // always allow requests with explicit IPv4 or IPv6-address.\n    // A note on IPv6 addresses:\n    // hostHeader will always contain the brackets denoting\n    // an IPv6-address in URLs,\n    // these are removed from the hostname in url.parse(),\n    // so we have the pure IPv6-address in hostname.\n    // For convenience, always allow localhost (hostname === 'localhost')\n    // and its subdomains (hostname.endsWith(\".localhost\")).\n    // allow hostname of listening address  (hostname === this.options.host)\n    const isValidHostname =\n      (hostname !== null && ipaddr.IPv4.isValid(hostname)) ||\n      (hostname !== null && ipaddr.IPv6.isValid(hostname)) ||\n      hostname === \"localhost\" ||\n      (hostname !== null && hostname.endsWith(\".localhost\")) ||\n      hostname === this.options.host;\n\n    if (isValidHostname) {\n      return true;\n    }\n\n    const { allowedHosts } = this.options;\n\n    // always allow localhost host, for convenience\n    // allow if hostname is in allowedHosts\n    if (Array.isArray(allowedHosts) && allowedHosts.length > 0) {\n      for (let hostIdx = 0; hostIdx < allowedHosts.length; hostIdx++) {\n        const allowedHost = allowedHosts[hostIdx];\n\n        if (allowedHost === hostname) {\n          return true;\n        }\n\n        // support \".\" as a subdomain wildcard\n        // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n        if (allowedHost[0] === \".\") {\n          // \"example.com\"  (hostname === allowedHost.substring(1))\n          // \"*.example.com\"  (hostname.endsWith(allowedHost))\n          if (\n            hostname === allowedHost.substring(1) ||\n            /** @type {string} */ (hostname).endsWith(allowedHost)\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n\n    // Also allow if `client.webSocketURL.hostname` provided\n    if (\n      this.options.client &&\n      typeof (\n        /** @type {ClientConfiguration} */ (this.options.client).webSocketURL\n      ) !== \"undefined\"\n    ) {\n      return (\n        /** @type {WebSocketURL} */\n        (/** @type {ClientConfiguration} */ (this.options.client).webSocketURL)\n          .hostname === hostname\n      );\n    }\n\n    // disallow\n    return false;\n  }\n\n  /**\n   * @param {ClientConnection[]} clients\n   * @param {string} type\n   * @param {any} [data]\n   * @param {any} [params]\n   */\n  // eslint-disable-next-line class-methods-use-this\n  sendMessage(clients, type, data, params) {\n    for (const client of clients) {\n      // `sockjs` uses `1` to indicate client is ready to accept data\n      // `ws` uses `WebSocket.OPEN`, but it is mean `1` too\n      if (client.readyState === 1) {\n        client.send(JSON.stringify({ type, data, params }));\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   * @returns {void}\n   */\n  serveMagicHtml(req, res, next) {\n    if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n      return next();\n    }\n\n    /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n    (this.middleware).waitUntilValid(() => {\n      const _path = req.path;\n\n      try {\n        const filename =\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          (this.middleware).getFilenameFromUrl(`${_path}.js`);\n        const isFile =\n          /** @type {Compiler[\"outputFileSystem\"] & { statSync: import(\"fs\").StatSyncFn }}*/\n          (\n            /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n            (this.middleware).context.outputFileSystem\n          )\n            .statSync(/** @type {import(\"fs\").PathLike} */ (filename))\n            .isFile();\n\n        if (!isFile) {\n          return next();\n        }\n\n        // Serve a page that executes the javascript\n        // @ts-ignore\n        const queries = req._parsedUrl.search || \"\";\n        const responsePage = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body><script type=\"text/javascript\" charset=\"utf-8\" src=\"${_path}.js${queries}\"></script></body></html>`;\n\n        res.send(responsePage);\n      } catch (error) {\n        return next();\n      }\n    });\n  }\n\n  // Send stats to a socket or multiple sockets\n  /**\n   * @private\n   * @param {ClientConnection[]} clients\n   * @param {StatsCompilation} stats\n   * @param {boolean} [force]\n   */\n  sendStats(clients, stats, force) {\n    const shouldEmit =\n      !force &&\n      stats &&\n      (!stats.errors || stats.errors.length === 0) &&\n      (!stats.warnings || stats.warnings.length === 0) &&\n      this.currentHash === stats.hash;\n\n    if (shouldEmit) {\n      this.sendMessage(clients, \"still-ok\");\n\n      return;\n    }\n\n    this.currentHash = stats.hash;\n    this.sendMessage(clients, \"hash\", stats.hash);\n\n    if (\n      /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n      (stats.errors).length > 0 ||\n      /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n      (stats.warnings).length > 0\n    ) {\n      const hasErrors =\n        /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n        (stats.errors).length > 0;\n\n      if (\n        /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n        (stats.warnings).length > 0\n      ) {\n        let params;\n\n        if (hasErrors) {\n          params = { preventReloading: true };\n        }\n\n        this.sendMessage(clients, \"warnings\", stats.warnings, params);\n      }\n\n      if (\n        /** @type {NonNullable<StatsCompilation[\"errors\"]>} */ (stats.errors)\n          .length > 0\n      ) {\n        this.sendMessage(clients, \"errors\", stats.errors);\n      }\n    } else {\n      this.sendMessage(clients, \"ok\");\n    }\n  }\n\n  /**\n   * @param {string | string[]} watchPath\n   * @param {WatchOptions} [watchOptions]\n   */\n  watchFiles(watchPath, watchOptions) {\n    const chokidar = require(\"chokidar\");\n    const watcher = chokidar.watch(watchPath, watchOptions);\n\n    // disabling refreshing on changing the content\n    if (this.options.liveReload) {\n      watcher.on(\"change\", (item) => {\n        if (this.webSocketServer) {\n          this.sendMessage(\n            this.webSocketServer.clients,\n            \"static-changed\",\n            item\n          );\n        }\n      });\n    }\n\n    this.staticWatchers.push(watcher);\n  }\n\n  /**\n   * @param {import(\"webpack-dev-middleware\").Callback} [callback]\n   */\n  invalidate(callback = () => {}) {\n    if (this.middleware) {\n      this.middleware.invalidate(callback);\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async start() {\n    await this.normalizeOptions();\n\n    if (this.options.ipc) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve, reject) => {\n          const net = require(\"net\");\n          const socket = new net.Socket();\n\n          socket.on(\n            \"error\",\n            /**\n             * @param {Error & { code?: string }} error\n             */\n            (error) => {\n              if (error.code === \"ECONNREFUSED\") {\n                // No other server listening on this socket so it can be safely removed\n                fs.unlinkSync(/** @type {string} */ (this.options.ipc));\n\n                resolve();\n\n                return;\n              } else if (error.code === \"ENOENT\") {\n                resolve();\n\n                return;\n              }\n\n              reject(error);\n            }\n          );\n\n          socket.connect(\n            { path: /** @type {string} */ (this.options.ipc) },\n            () => {\n              throw new Error(`IPC \"${this.options.ipc}\" is already used`);\n            }\n          );\n        })\n      );\n    } else {\n      this.options.host = await Server.getHostname(\n        /** @type {Host} */ (this.options.host)\n      );\n      this.options.port = await Server.getFreePort(\n        /** @type {Port} */ (this.options.port),\n        this.options.host\n      );\n    }\n\n    await this.initialize();\n\n    const listenOptions = this.options.ipc\n      ? { path: this.options.ipc }\n      : { host: this.options.host, port: this.options.port };\n\n    await /** @type {Promise<void>} */ (\n      new Promise((resolve) => {\n        /** @type {import(\"http\").Server} */\n        (this.server).listen(listenOptions, () => {\n          resolve();\n        });\n      })\n    );\n\n    if (this.options.ipc) {\n      // chmod 666 (rw rw rw)\n      const READ_WRITE = 438;\n\n      await fs.promises.chmod(\n        /** @type {string} */ (this.options.ipc),\n        READ_WRITE\n      );\n    }\n\n    if (this.options.webSocketServer) {\n      this.createWebSocketServer();\n    }\n\n    if (this.options.bonjour) {\n      this.runBonjour();\n    }\n\n    this.logStatus();\n\n    if (typeof this.options.onListening === \"function\") {\n      this.options.onListening(this);\n    }\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n  startCallback(callback = () => {}) {\n    this.start()\n      .then(() => callback(), callback)\n      .catch(callback);\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async stop() {\n    if (this.bonjour) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          this.stopBonjour(() => {\n            resolve();\n          });\n        })\n      );\n    }\n\n    this.webSocketProxies = [];\n\n    await Promise.all(this.staticWatchers.map((watcher) => watcher.close()));\n\n    this.staticWatchers = [];\n\n    if (this.webSocketServer) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          /** @type {WebSocketServerImplementation} */\n          (this.webSocketServer).implementation.close(() => {\n            this.webSocketServer = null;\n\n            resolve();\n          });\n\n          for (const client of /** @type {WebSocketServerImplementation} */ (\n            this.webSocketServer\n          ).clients) {\n            client.terminate();\n          }\n\n          /** @type {WebSocketServerImplementation} */\n          (this.webSocketServer).clients = [];\n        })\n      );\n    }\n\n    if (this.server) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          /** @type {import(\"http\").Server} */\n          (this.server).close(() => {\n            this.server = null;\n\n            resolve();\n          });\n\n          for (const socket of this.sockets) {\n            socket.destroy();\n          }\n\n          this.sockets = [];\n        })\n      );\n\n      if (this.middleware) {\n        await /** @type {Promise<void>} */ (\n          new Promise((resolve, reject) => {\n            /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n            (this.middleware).close((error) => {\n              if (error) {\n                reject(error);\n\n                return;\n              }\n\n              resolve();\n            });\n          })\n        );\n\n        this.middleware = null;\n      }\n    }\n\n    // We add listeners to signals when creating a new Server instance\n    // So ensure they are removed to prevent EventEmitter memory leak warnings\n    for (const item of this.listeners) {\n      process.removeListener(item.name, item.listener);\n    }\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n  stopCallback(callback = () => {}) {\n    this.stop()\n      .then(() => callback(), callback)\n      .catch(callback);\n  }\n\n  // TODO remove in the next major release\n  /**\n   * @param {Port} port\n   * @param {Host} hostname\n   * @param {(err?: Error) => void} fn\n   * @returns {void}\n   */\n  listen(port, hostname, fn) {\n    util.deprecate(\n      () => {},\n      \"'listen' is deprecated. Please use the async 'start' or 'startCallback' method.\",\n      \"DEP_WEBPACK_DEV_SERVER_LISTEN\"\n    )();\n\n    if (typeof port === \"function\") {\n      fn = port;\n    }\n\n    if (\n      typeof port !== \"undefined\" &&\n      typeof this.options.port !== \"undefined\" &&\n      port !== this.options.port\n    ) {\n      this.options.port = port;\n\n      this.logger.warn(\n        'The \"port\" specified in options is different from the port passed as an argument. Will be used from arguments.'\n      );\n    }\n\n    if (!this.options.port) {\n      this.options.port = port;\n    }\n\n    if (\n      typeof hostname !== \"undefined\" &&\n      typeof this.options.host !== \"undefined\" &&\n      hostname !== this.options.host\n    ) {\n      this.options.host = hostname;\n\n      this.logger.warn(\n        'The \"host\" specified in options is different from the host passed as an argument. Will be used from arguments.'\n      );\n    }\n\n    if (!this.options.host) {\n      this.options.host = hostname;\n    }\n\n    this.start()\n      .then(() => {\n        if (fn) {\n          fn.call(this.server);\n        }\n      })\n      .catch((error) => {\n        // Nothing\n        if (fn) {\n          fn.call(this.server, error);\n        }\n      });\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   * @returns {void}\n   */\n  // TODO remove in the next major release\n  close(callback) {\n    util.deprecate(\n      () => {},\n      \"'close' is deprecated. Please use the async 'stop' or 'stopCallback' method.\",\n      \"DEP_WEBPACK_DEV_SERVER_CLOSE\"\n    )();\n\n    this.stop()\n      .then(() => {\n        if (callback) {\n          callback();\n        }\n      })\n      .catch((error) => {\n        if (callback) {\n          callback(error);\n        }\n      });\n  }\n}\n\nmodule.exports = Server;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}