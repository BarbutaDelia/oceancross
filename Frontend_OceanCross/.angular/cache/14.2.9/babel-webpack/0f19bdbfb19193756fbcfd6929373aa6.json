{"ast":null,"code":"/**\n * Karma middleware is responsible for serving:\n * - client.html (the entrypoint for capturing a browser)\n * - debug.html\n * - context.html (the execution context, loaded within an iframe)\n * - karma.js\n *\n * The main part is generating context.html, as it contains:\n * - generating mappings\n * - including <script> and <link> tags\n * - setting propert caching headers\n */\nconst url = require('url');\n\nconst log = require('../logger').create('middleware:karma');\n\nconst stripHost = require('./strip_host').stripHost;\n\nconst common = require('./common');\n\nconst VERSION = require('../constants').VERSION;\n\nconst SCRIPT_TYPE = {\n  js: 'text/javascript',\n  module: 'module'\n};\nconst FILE_TYPES = ['css', 'html', 'js', 'module', 'dom'];\n\nfunction filePathToUrlPath(filePath, basePath, urlRoot, proxyPath) {\n  if (filePath.startsWith(basePath)) {\n    return proxyPath + urlRoot.slice(1) + 'base' + filePath.slice(basePath.length);\n  }\n\n  return proxyPath + urlRoot.slice(1) + 'absolute' + filePath;\n}\n\nfunction getQuery(urlStr) {\n  // eslint-disable-next-line node/no-deprecated-api\n  return url.parse(urlStr, true).query || {};\n}\n\nfunction getXUACompatibleMetaElement(url) {\n  const query = getQuery(url);\n\n  if (query['x-ua-compatible']) {\n    return `<meta http-equiv=\"X-UA-Compatible\" content=\"${query['x-ua-compatible']}\"/>`;\n  }\n\n  return '';\n}\n\nfunction getXUACompatibleUrl(url) {\n  const query = getQuery(url);\n\n  if (query['x-ua-compatible']) {\n    return '?x-ua-compatible=' + encodeURIComponent(query['x-ua-compatible']);\n  }\n\n  return '';\n}\n\nfunction createKarmaMiddleware(filesPromise, serveStaticFile, serveFile, injector, basePath, urlRoot, upstreamProxy, browserSocketTimeout) {\n  const proxyPath = upstreamProxy ? upstreamProxy.path : '/';\n  return function (request, response, next) {\n    // These config values should be up to date on every request\n    const client = injector.get('config.client');\n    const customContextFile = injector.get('config.customContextFile');\n    const customDebugFile = injector.get('config.customDebugFile');\n    const customClientContextFile = injector.get('config.customClientContextFile');\n    const includeCrossOriginAttribute = injector.get('config.crossOriginAttribute');\n    const normalizedUrl = stripHost(request.url) || request.url; // For backwards compatibility in middleware plugins, remove in v4.\n\n    request.normalizedUrl = normalizedUrl;\n    let requestUrl = normalizedUrl.replace(/\\?.*/, '');\n    const requestedRangeHeader = request.headers.range; // redirect /__karma__ to /__karma__ (trailing slash)\n\n    if (requestUrl === urlRoot.slice(0, -1)) {\n      response.setHeader('Location', proxyPath + urlRoot.slice(1));\n      response.writeHead(301);\n      return response.end('MOVED PERMANENTLY');\n    } // ignore urls outside urlRoot\n\n\n    if (!requestUrl.startsWith(urlRoot)) {\n      return next();\n    } // remove urlRoot prefix\n\n\n    requestUrl = requestUrl.slice(urlRoot.length - 1); // serve client.html\n\n    if (requestUrl === '/') {\n      // redirect client_with_context.html\n      if (!client.useIframe && client.runInParent) {\n        requestUrl = '/client_with_context.html';\n      } else {\n        // serve client.html\n        return serveStaticFile('/client.html', requestedRangeHeader, response, data => data.replace('%X_UA_COMPATIBLE%', getXUACompatibleMetaElement(request.url)).replace('%X_UA_COMPATIBLE_URL%', getXUACompatibleUrl(request.url)));\n      }\n    }\n\n    if (['/karma.js', '/context.js', '/debug.js'].includes(requestUrl)) {\n      return serveStaticFile(requestUrl, requestedRangeHeader, response, data => data.replace('%KARMA_URL_ROOT%', urlRoot).replace('%KARMA_VERSION%', VERSION).replace('%KARMA_PROXY_PATH%', proxyPath).replace('%BROWSER_SOCKET_TIMEOUT%', browserSocketTimeout));\n    } // serve the favicon\n\n\n    if (requestUrl === '/favicon.ico') {\n      return serveStaticFile(requestUrl, requestedRangeHeader, response);\n    } // serve context.html - execution context within the iframe\n    // or debug.html - execution context without channel to the server\n\n\n    const isRequestingContextFile = requestUrl === '/context.html';\n    const isRequestingDebugFile = requestUrl === '/debug.html';\n    const isRequestingClientContextFile = requestUrl === '/client_with_context.html';\n\n    if (isRequestingContextFile || isRequestingDebugFile || isRequestingClientContextFile) {\n      return filesPromise.then(files => {\n        let fileServer;\n        let requestedFileUrl;\n        log.debug('custom files', customContextFile, customDebugFile, customClientContextFile);\n\n        if (isRequestingContextFile && customContextFile) {\n          log.debug(`Serving customContextFile ${customContextFile}`);\n          fileServer = serveFile;\n          requestedFileUrl = customContextFile;\n        } else if (isRequestingDebugFile && customDebugFile) {\n          log.debug(`Serving customDebugFile ${customDebugFile}`);\n          fileServer = serveFile;\n          requestedFileUrl = customDebugFile;\n        } else if (isRequestingClientContextFile && customClientContextFile) {\n          log.debug(`Serving customClientContextFile ${customClientContextFile}`);\n          fileServer = serveFile;\n          requestedFileUrl = customClientContextFile;\n        } else {\n          log.debug(`Serving static request ${requestUrl}`);\n          fileServer = serveStaticFile;\n          requestedFileUrl = requestUrl;\n        }\n\n        fileServer(requestedFileUrl, requestedRangeHeader, response, function (data) {\n          common.setNoCacheHeaders(response);\n          const scriptTags = [];\n\n          for (const file of files.included) {\n            let filePath = file.path;\n            const fileType = file.type || file.detectType();\n\n            if (!FILE_TYPES.includes(fileType)) {\n              if (file.type == null) {\n                log.warn('Unable to determine file type from the file extension, defaulting to js.\\n' + `  To silence the warning specify a valid type for ${file.originalPath} in the configuration file.\\n` + '  See https://karma-runner.github.io/latest/config/files.html');\n              } else {\n                log.warn(`Invalid file type (${file.type || 'empty string'}), defaulting to js.`);\n              }\n            }\n\n            if (!file.isUrl) {\n              filePath = filePathToUrlPath(filePath, basePath, urlRoot, proxyPath);\n\n              if (requestUrl === '/context.html') {\n                filePath += '?' + file.sha;\n              }\n            }\n\n            const integrityAttribute = file.integrity ? ` integrity=\"${file.integrity}\"` : '';\n            const crossOriginAttribute = includeCrossOriginAttribute ? ' crossorigin=\"anonymous\"' : '';\n\n            if (fileType === 'css') {\n              scriptTags.push(`<link type=\"text/css\" href=\"${filePath}\" rel=\"stylesheet\"${integrityAttribute}${crossOriginAttribute}>`);\n            } else if (fileType === 'dom') {\n              scriptTags.push(file.content);\n            } else if (fileType === 'html') {\n              scriptTags.push(`<link href=\"${filePath}\" rel=\"import\"${integrityAttribute}${crossOriginAttribute}>`);\n            } else {\n              const scriptType = SCRIPT_TYPE[fileType] || 'text/javascript';\n\n              if (fileType === 'module') {\n                scriptTags.push(`<script onerror=\"throw 'Error loading ${filePath}'\" type=\"${scriptType}\" src=\"${filePath}\"${integrityAttribute}${crossOriginAttribute}></script>`);\n              } else {\n                scriptTags.push(`<script type=\"${scriptType}\" src=\"${filePath}\"${integrityAttribute}${crossOriginAttribute}></script>`);\n              }\n            }\n          }\n\n          const scriptUrls = []; // For client_with_context, html elements are not added directly through an iframe.\n          // Instead, scriptTags is stored to window.__karma__.scriptUrls first. Later, the\n          // client will read window.__karma__.scriptUrls and dynamically add them to the DOM\n          // using DOMParser.\n\n          if (requestUrl === '/client_with_context.html') {\n            for (const script of scriptTags) {\n              scriptUrls.push( // Escape characters with special roles (tags) in HTML. Open angle brackets are parsed as tags\n              // immediately, even if it is within double quotations in browsers\n              script.replace(/</g, '\\\\x3C').replace(/>/g, '\\\\x3E'));\n            }\n          }\n\n          const mappings = data.includes('%MAPPINGS%') ? files.served.map(file => {\n            const filePath = filePathToUrlPath(file.path, basePath, urlRoot, proxyPath).replace(/\\\\/g, '\\\\\\\\') // Windows paths contain backslashes and generate bad IDs if not escaped\n            .replace(/'/g, '\\\\\\''); // Escape single quotes - double quotes should not be allowed!\n\n            return `  '${filePath}': '${file.sha}'`;\n          }) : [];\n          return data.replace('%SCRIPTS%', () => scriptTags.join('\\n')).replace('%CLIENT_CONFIG%', 'window.__karma__.config = ' + JSON.stringify(client) + ';\\n').replace('%SCRIPT_URL_ARRAY%', () => 'window.__karma__.scriptUrls = ' + JSON.stringify(scriptUrls) + ';\\n').replace('%MAPPINGS%', () => 'window.__karma__.files = {\\n' + mappings.join(',\\n') + '\\n};\\n').replace('%X_UA_COMPATIBLE%', getXUACompatibleMetaElement(request.url));\n        });\n      });\n    } else if (requestUrl === '/context.json') {\n      return filesPromise.then(files => {\n        common.setNoCacheHeaders(response);\n        response.writeHead(200);\n        response.end(JSON.stringify({\n          files: files.included.map(file => filePathToUrlPath(file.path + '?' + file.sha, basePath, urlRoot, proxyPath))\n        }));\n      });\n    }\n\n    return next();\n  };\n}\n\ncreateKarmaMiddleware.$inject = ['filesPromise', 'serveStaticFile', 'serveFile', 'injector', 'config.basePath', 'config.urlRoot', 'config.upstreamProxy', 'config.browserSocketTimeout']; // PUBLIC API\n\nexports.create = createKarmaMiddleware;","map":{"version":3,"names":["url","require","log","create","stripHost","common","VERSION","SCRIPT_TYPE","js","module","FILE_TYPES","filePathToUrlPath","filePath","basePath","urlRoot","proxyPath","startsWith","slice","length","getQuery","urlStr","parse","query","getXUACompatibleMetaElement","getXUACompatibleUrl","encodeURIComponent","createKarmaMiddleware","filesPromise","serveStaticFile","serveFile","injector","upstreamProxy","browserSocketTimeout","path","request","response","next","client","get","customContextFile","customDebugFile","customClientContextFile","includeCrossOriginAttribute","normalizedUrl","requestUrl","replace","requestedRangeHeader","headers","range","setHeader","writeHead","end","useIframe","runInParent","data","includes","isRequestingContextFile","isRequestingDebugFile","isRequestingClientContextFile","then","files","fileServer","requestedFileUrl","debug","setNoCacheHeaders","scriptTags","file","included","fileType","type","detectType","warn","originalPath","isUrl","sha","integrityAttribute","integrity","crossOriginAttribute","push","content","scriptType","scriptUrls","script","mappings","served","map","join","JSON","stringify","$inject","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/middleware/karma.js"],"sourcesContent":["/**\n * Karma middleware is responsible for serving:\n * - client.html (the entrypoint for capturing a browser)\n * - debug.html\n * - context.html (the execution context, loaded within an iframe)\n * - karma.js\n *\n * The main part is generating context.html, as it contains:\n * - generating mappings\n * - including <script> and <link> tags\n * - setting propert caching headers\n */\n\nconst url = require('url')\n\nconst log = require('../logger').create('middleware:karma')\nconst stripHost = require('./strip_host').stripHost\nconst common = require('./common')\n\nconst VERSION = require('../constants').VERSION\nconst SCRIPT_TYPE = {\n  js: 'text/javascript',\n  module: 'module'\n}\nconst FILE_TYPES = [\n  'css',\n  'html',\n  'js',\n  'module',\n  'dom'\n]\n\nfunction filePathToUrlPath (filePath, basePath, urlRoot, proxyPath) {\n  if (filePath.startsWith(basePath)) {\n    return proxyPath + urlRoot.slice(1) + 'base' + filePath.slice(basePath.length)\n  }\n  return proxyPath + urlRoot.slice(1) + 'absolute' + filePath\n}\n\nfunction getQuery (urlStr) {\n  // eslint-disable-next-line node/no-deprecated-api\n  return url.parse(urlStr, true).query || {}\n}\n\nfunction getXUACompatibleMetaElement (url) {\n  const query = getQuery(url)\n  if (query['x-ua-compatible']) {\n    return `<meta http-equiv=\"X-UA-Compatible\" content=\"${query['x-ua-compatible']}\"/>`\n  }\n  return ''\n}\n\nfunction getXUACompatibleUrl (url) {\n  const query = getQuery(url)\n  if (query['x-ua-compatible']) {\n    return '?x-ua-compatible=' + encodeURIComponent(query['x-ua-compatible'])\n  }\n  return ''\n}\n\nfunction createKarmaMiddleware (\n  filesPromise,\n  serveStaticFile,\n  serveFile,\n  injector,\n  basePath,\n  urlRoot,\n  upstreamProxy,\n  browserSocketTimeout\n) {\n  const proxyPath = upstreamProxy ? upstreamProxy.path : '/'\n  return function (request, response, next) {\n    // These config values should be up to date on every request\n    const client = injector.get('config.client')\n    const customContextFile = injector.get('config.customContextFile')\n    const customDebugFile = injector.get('config.customDebugFile')\n    const customClientContextFile = injector.get('config.customClientContextFile')\n    const includeCrossOriginAttribute = injector.get('config.crossOriginAttribute')\n\n    const normalizedUrl = stripHost(request.url) || request.url\n    // For backwards compatibility in middleware plugins, remove in v4.\n    request.normalizedUrl = normalizedUrl\n\n    let requestUrl = normalizedUrl.replace(/\\?.*/, '')\n    const requestedRangeHeader = request.headers.range\n\n    // redirect /__karma__ to /__karma__ (trailing slash)\n    if (requestUrl === urlRoot.slice(0, -1)) {\n      response.setHeader('Location', proxyPath + urlRoot.slice(1))\n      response.writeHead(301)\n      return response.end('MOVED PERMANENTLY')\n    }\n\n    // ignore urls outside urlRoot\n    if (!requestUrl.startsWith(urlRoot)) {\n      return next()\n    }\n\n    // remove urlRoot prefix\n    requestUrl = requestUrl.slice(urlRoot.length - 1)\n\n    // serve client.html\n    if (requestUrl === '/') {\n      // redirect client_with_context.html\n      if (!client.useIframe && client.runInParent) {\n        requestUrl = '/client_with_context.html'\n      } else { // serve client.html\n        return serveStaticFile('/client.html', requestedRangeHeader, response, (data) =>\n          data\n            .replace('%X_UA_COMPATIBLE%', getXUACompatibleMetaElement(request.url))\n            .replace('%X_UA_COMPATIBLE_URL%', getXUACompatibleUrl(request.url)))\n      }\n    }\n\n    if (['/karma.js', '/context.js', '/debug.js'].includes(requestUrl)) {\n      return serveStaticFile(requestUrl, requestedRangeHeader, response, (data) =>\n        data\n          .replace('%KARMA_URL_ROOT%', urlRoot)\n          .replace('%KARMA_VERSION%', VERSION)\n          .replace('%KARMA_PROXY_PATH%', proxyPath)\n          .replace('%BROWSER_SOCKET_TIMEOUT%', browserSocketTimeout))\n    }\n\n    // serve the favicon\n    if (requestUrl === '/favicon.ico') {\n      return serveStaticFile(requestUrl, requestedRangeHeader, response)\n    }\n\n    // serve context.html - execution context within the iframe\n    // or debug.html - execution context without channel to the server\n    const isRequestingContextFile = requestUrl === '/context.html'\n    const isRequestingDebugFile = requestUrl === '/debug.html'\n    const isRequestingClientContextFile = requestUrl === '/client_with_context.html'\n    if (isRequestingContextFile || isRequestingDebugFile || isRequestingClientContextFile) {\n      return filesPromise.then((files) => {\n        let fileServer\n        let requestedFileUrl\n        log.debug('custom files', customContextFile, customDebugFile, customClientContextFile)\n        if (isRequestingContextFile && customContextFile) {\n          log.debug(`Serving customContextFile ${customContextFile}`)\n          fileServer = serveFile\n          requestedFileUrl = customContextFile\n        } else if (isRequestingDebugFile && customDebugFile) {\n          log.debug(`Serving customDebugFile ${customDebugFile}`)\n          fileServer = serveFile\n          requestedFileUrl = customDebugFile\n        } else if (isRequestingClientContextFile && customClientContextFile) {\n          log.debug(`Serving customClientContextFile ${customClientContextFile}`)\n          fileServer = serveFile\n          requestedFileUrl = customClientContextFile\n        } else {\n          log.debug(`Serving static request ${requestUrl}`)\n          fileServer = serveStaticFile\n          requestedFileUrl = requestUrl\n        }\n\n        fileServer(requestedFileUrl, requestedRangeHeader, response, function (data) {\n          common.setNoCacheHeaders(response)\n\n          const scriptTags = []\n          for (const file of files.included) {\n            let filePath = file.path\n            const fileType = file.type || file.detectType()\n\n            if (!FILE_TYPES.includes(fileType)) {\n              if (file.type == null) {\n                log.warn(\n                  'Unable to determine file type from the file extension, defaulting to js.\\n' +\n                  `  To silence the warning specify a valid type for ${file.originalPath} in the configuration file.\\n` +\n                  '  See https://karma-runner.github.io/latest/config/files.html'\n                )\n              } else {\n                log.warn(`Invalid file type (${file.type || 'empty string'}), defaulting to js.`)\n              }\n            }\n\n            if (!file.isUrl) {\n              filePath = filePathToUrlPath(filePath, basePath, urlRoot, proxyPath)\n\n              if (requestUrl === '/context.html') {\n                filePath += '?' + file.sha\n              }\n            }\n\n            const integrityAttribute = file.integrity ? ` integrity=\"${file.integrity}\"` : ''\n            const crossOriginAttribute = includeCrossOriginAttribute ? ' crossorigin=\"anonymous\"' : ''\n            if (fileType === 'css') {\n              scriptTags.push(`<link type=\"text/css\" href=\"${filePath}\" rel=\"stylesheet\"${integrityAttribute}${crossOriginAttribute}>`)\n            } else if (fileType === 'dom') {\n              scriptTags.push(file.content)\n            } else if (fileType === 'html') {\n              scriptTags.push(`<link href=\"${filePath}\" rel=\"import\"${integrityAttribute}${crossOriginAttribute}>`)\n            } else {\n              const scriptType = (SCRIPT_TYPE[fileType] || 'text/javascript')\n              if (fileType === 'module') {\n                scriptTags.push(`<script onerror=\"throw 'Error loading ${filePath}'\" type=\"${scriptType}\" src=\"${filePath}\"${integrityAttribute}${crossOriginAttribute}></script>`)\n              } else {\n                scriptTags.push(`<script type=\"${scriptType}\" src=\"${filePath}\"${integrityAttribute}${crossOriginAttribute}></script>`)\n              }\n            }\n          }\n\n          const scriptUrls = []\n          // For client_with_context, html elements are not added directly through an iframe.\n          // Instead, scriptTags is stored to window.__karma__.scriptUrls first. Later, the\n          // client will read window.__karma__.scriptUrls and dynamically add them to the DOM\n          // using DOMParser.\n          if (requestUrl === '/client_with_context.html') {\n            for (const script of scriptTags) {\n              scriptUrls.push(\n                // Escape characters with special roles (tags) in HTML. Open angle brackets are parsed as tags\n                // immediately, even if it is within double quotations in browsers\n                script.replace(/</g, '\\\\x3C').replace(/>/g, '\\\\x3E'))\n            }\n          }\n\n          const mappings = data.includes('%MAPPINGS%') ? files.served.map((file) => {\n            const filePath = filePathToUrlPath(file.path, basePath, urlRoot, proxyPath)\n              .replace(/\\\\/g, '\\\\\\\\') // Windows paths contain backslashes and generate bad IDs if not escaped\n              .replace(/'/g, '\\\\\\'') // Escape single quotes - double quotes should not be allowed!\n\n            return `  '${filePath}': '${file.sha}'`\n          }) : []\n\n          return data\n            .replace('%SCRIPTS%', () => scriptTags.join('\\n'))\n            .replace('%CLIENT_CONFIG%', 'window.__karma__.config = ' + JSON.stringify(client) + ';\\n')\n            .replace('%SCRIPT_URL_ARRAY%', () => 'window.__karma__.scriptUrls = ' + JSON.stringify(scriptUrls) + ';\\n')\n            .replace('%MAPPINGS%', () => 'window.__karma__.files = {\\n' + mappings.join(',\\n') + '\\n};\\n')\n            .replace('%X_UA_COMPATIBLE%', getXUACompatibleMetaElement(request.url))\n        })\n      })\n    } else if (requestUrl === '/context.json') {\n      return filesPromise.then((files) => {\n        common.setNoCacheHeaders(response)\n        response.writeHead(200)\n        response.end(JSON.stringify({\n          files: files.included.map((file) => filePathToUrlPath(file.path + '?' + file.sha, basePath, urlRoot, proxyPath))\n        }))\n      })\n    }\n\n    return next()\n  }\n}\n\ncreateKarmaMiddleware.$inject = [\n  'filesPromise',\n  'serveStaticFile',\n  'serveFile',\n  'injector',\n  'config.basePath',\n  'config.urlRoot',\n  'config.upstreamProxy',\n  'config.browserSocketTimeout'\n]\n\n// PUBLIC API\nexports.create = createKarmaMiddleware\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AAEA,MAAMC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAP,CAAqBE,MAArB,CAA4B,kBAA5B,CAAZ;;AACA,MAAMC,SAAS,GAAGH,OAAO,CAAC,cAAD,CAAP,CAAwBG,SAA1C;;AACA,MAAMC,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMK,OAAO,GAAGL,OAAO,CAAC,cAAD,CAAP,CAAwBK,OAAxC;;AACA,MAAMC,WAAW,GAAG;EAClBC,EAAE,EAAE,iBADc;EAElBC,MAAM,EAAE;AAFU,CAApB;AAIA,MAAMC,UAAU,GAAG,CACjB,KADiB,EAEjB,MAFiB,EAGjB,IAHiB,EAIjB,QAJiB,EAKjB,KALiB,CAAnB;;AAQA,SAASC,iBAAT,CAA4BC,QAA5B,EAAsCC,QAAtC,EAAgDC,OAAhD,EAAyDC,SAAzD,EAAoE;EAClE,IAAIH,QAAQ,CAACI,UAAT,CAAoBH,QAApB,CAAJ,EAAmC;IACjC,OAAOE,SAAS,GAAGD,OAAO,CAACG,KAAR,CAAc,CAAd,CAAZ,GAA+B,MAA/B,GAAwCL,QAAQ,CAACK,KAAT,CAAeJ,QAAQ,CAACK,MAAxB,CAA/C;EACD;;EACD,OAAOH,SAAS,GAAGD,OAAO,CAACG,KAAR,CAAc,CAAd,CAAZ,GAA+B,UAA/B,GAA4CL,QAAnD;AACD;;AAED,SAASO,QAAT,CAAmBC,MAAnB,EAA2B;EACzB;EACA,OAAOpB,GAAG,CAACqB,KAAJ,CAAUD,MAAV,EAAkB,IAAlB,EAAwBE,KAAxB,IAAiC,EAAxC;AACD;;AAED,SAASC,2BAAT,CAAsCvB,GAAtC,EAA2C;EACzC,MAAMsB,KAAK,GAAGH,QAAQ,CAACnB,GAAD,CAAtB;;EACA,IAAIsB,KAAK,CAAC,iBAAD,CAAT,EAA8B;IAC5B,OAAQ,+CAA8CA,KAAK,CAAC,iBAAD,CAAoB,KAA/E;EACD;;EACD,OAAO,EAAP;AACD;;AAED,SAASE,mBAAT,CAA8BxB,GAA9B,EAAmC;EACjC,MAAMsB,KAAK,GAAGH,QAAQ,CAACnB,GAAD,CAAtB;;EACA,IAAIsB,KAAK,CAAC,iBAAD,CAAT,EAA8B;IAC5B,OAAO,sBAAsBG,kBAAkB,CAACH,KAAK,CAAC,iBAAD,CAAN,CAA/C;EACD;;EACD,OAAO,EAAP;AACD;;AAED,SAASI,qBAAT,CACEC,YADF,EAEEC,eAFF,EAGEC,SAHF,EAIEC,QAJF,EAKEjB,QALF,EAMEC,OANF,EAOEiB,aAPF,EAQEC,oBARF,EASE;EACA,MAAMjB,SAAS,GAAGgB,aAAa,GAAGA,aAAa,CAACE,IAAjB,GAAwB,GAAvD;EACA,OAAO,UAAUC,OAAV,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;IACxC;IACA,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,GAAT,CAAa,eAAb,CAAf;IACA,MAAMC,iBAAiB,GAAGT,QAAQ,CAACQ,GAAT,CAAa,0BAAb,CAA1B;IACA,MAAME,eAAe,GAAGV,QAAQ,CAACQ,GAAT,CAAa,wBAAb,CAAxB;IACA,MAAMG,uBAAuB,GAAGX,QAAQ,CAACQ,GAAT,CAAa,gCAAb,CAAhC;IACA,MAAMI,2BAA2B,GAAGZ,QAAQ,CAACQ,GAAT,CAAa,6BAAb,CAApC;IAEA,MAAMK,aAAa,GAAGvC,SAAS,CAAC8B,OAAO,CAAClC,GAAT,CAAT,IAA0BkC,OAAO,CAAClC,GAAxD,CARwC,CASxC;;IACAkC,OAAO,CAACS,aAAR,GAAwBA,aAAxB;IAEA,IAAIC,UAAU,GAAGD,aAAa,CAACE,OAAd,CAAsB,MAAtB,EAA8B,EAA9B,CAAjB;IACA,MAAMC,oBAAoB,GAAGZ,OAAO,CAACa,OAAR,CAAgBC,KAA7C,CAbwC,CAexC;;IACA,IAAIJ,UAAU,KAAK9B,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAnB,EAAyC;MACvCkB,QAAQ,CAACc,SAAT,CAAmB,UAAnB,EAA+BlC,SAAS,GAAGD,OAAO,CAACG,KAAR,CAAc,CAAd,CAA3C;MACAkB,QAAQ,CAACe,SAAT,CAAmB,GAAnB;MACA,OAAOf,QAAQ,CAACgB,GAAT,CAAa,mBAAb,CAAP;IACD,CApBuC,CAsBxC;;;IACA,IAAI,CAACP,UAAU,CAAC5B,UAAX,CAAsBF,OAAtB,CAAL,EAAqC;MACnC,OAAOsB,IAAI,EAAX;IACD,CAzBuC,CA2BxC;;;IACAQ,UAAU,GAAGA,UAAU,CAAC3B,KAAX,CAAiBH,OAAO,CAACI,MAAR,GAAiB,CAAlC,CAAb,CA5BwC,CA8BxC;;IACA,IAAI0B,UAAU,KAAK,GAAnB,EAAwB;MACtB;MACA,IAAI,CAACP,MAAM,CAACe,SAAR,IAAqBf,MAAM,CAACgB,WAAhC,EAA6C;QAC3CT,UAAU,GAAG,2BAAb;MACD,CAFD,MAEO;QAAE;QACP,OAAOhB,eAAe,CAAC,cAAD,EAAiBkB,oBAAjB,EAAuCX,QAAvC,EAAkDmB,IAAD,IACrEA,IAAI,CACDT,OADH,CACW,mBADX,EACgCtB,2BAA2B,CAACW,OAAO,CAAClC,GAAT,CAD3D,EAEG6C,OAFH,CAEW,uBAFX,EAEoCrB,mBAAmB,CAACU,OAAO,CAAClC,GAAT,CAFvD,CADoB,CAAtB;MAID;IACF;;IAED,IAAI,CAAC,WAAD,EAAc,aAAd,EAA6B,WAA7B,EAA0CuD,QAA1C,CAAmDX,UAAnD,CAAJ,EAAoE;MAClE,OAAOhB,eAAe,CAACgB,UAAD,EAAaE,oBAAb,EAAmCX,QAAnC,EAA8CmB,IAAD,IACjEA,IAAI,CACDT,OADH,CACW,kBADX,EAC+B/B,OAD/B,EAEG+B,OAFH,CAEW,iBAFX,EAE8BvC,OAF9B,EAGGuC,OAHH,CAGW,oBAHX,EAGiC9B,SAHjC,EAIG8B,OAJH,CAIW,0BAJX,EAIuCb,oBAJvC,CADoB,CAAtB;IAMD,CAlDuC,CAoDxC;;;IACA,IAAIY,UAAU,KAAK,cAAnB,EAAmC;MACjC,OAAOhB,eAAe,CAACgB,UAAD,EAAaE,oBAAb,EAAmCX,QAAnC,CAAtB;IACD,CAvDuC,CAyDxC;IACA;;;IACA,MAAMqB,uBAAuB,GAAGZ,UAAU,KAAK,eAA/C;IACA,MAAMa,qBAAqB,GAAGb,UAAU,KAAK,aAA7C;IACA,MAAMc,6BAA6B,GAAGd,UAAU,KAAK,2BAArD;;IACA,IAAIY,uBAAuB,IAAIC,qBAA3B,IAAoDC,6BAAxD,EAAuF;MACrF,OAAO/B,YAAY,CAACgC,IAAb,CAAmBC,KAAD,IAAW;QAClC,IAAIC,UAAJ;QACA,IAAIC,gBAAJ;QACA5D,GAAG,CAAC6D,KAAJ,CAAU,cAAV,EAA0BxB,iBAA1B,EAA6CC,eAA7C,EAA8DC,uBAA9D;;QACA,IAAIe,uBAAuB,IAAIjB,iBAA/B,EAAkD;UAChDrC,GAAG,CAAC6D,KAAJ,CAAW,6BAA4BxB,iBAAkB,EAAzD;UACAsB,UAAU,GAAGhC,SAAb;UACAiC,gBAAgB,GAAGvB,iBAAnB;QACD,CAJD,MAIO,IAAIkB,qBAAqB,IAAIjB,eAA7B,EAA8C;UACnDtC,GAAG,CAAC6D,KAAJ,CAAW,2BAA0BvB,eAAgB,EAArD;UACAqB,UAAU,GAAGhC,SAAb;UACAiC,gBAAgB,GAAGtB,eAAnB;QACD,CAJM,MAIA,IAAIkB,6BAA6B,IAAIjB,uBAArC,EAA8D;UACnEvC,GAAG,CAAC6D,KAAJ,CAAW,mCAAkCtB,uBAAwB,EAArE;UACAoB,UAAU,GAAGhC,SAAb;UACAiC,gBAAgB,GAAGrB,uBAAnB;QACD,CAJM,MAIA;UACLvC,GAAG,CAAC6D,KAAJ,CAAW,0BAAyBnB,UAAW,EAA/C;UACAiB,UAAU,GAAGjC,eAAb;UACAkC,gBAAgB,GAAGlB,UAAnB;QACD;;QAEDiB,UAAU,CAACC,gBAAD,EAAmBhB,oBAAnB,EAAyCX,QAAzC,EAAmD,UAAUmB,IAAV,EAAgB;UAC3EjD,MAAM,CAAC2D,iBAAP,CAAyB7B,QAAzB;UAEA,MAAM8B,UAAU,GAAG,EAAnB;;UACA,KAAK,MAAMC,IAAX,IAAmBN,KAAK,CAACO,QAAzB,EAAmC;YACjC,IAAIvD,QAAQ,GAAGsD,IAAI,CAACjC,IAApB;YACA,MAAMmC,QAAQ,GAAGF,IAAI,CAACG,IAAL,IAAaH,IAAI,CAACI,UAAL,EAA9B;;YAEA,IAAI,CAAC5D,UAAU,CAAC6C,QAAX,CAAoBa,QAApB,CAAL,EAAoC;cAClC,IAAIF,IAAI,CAACG,IAAL,IAAa,IAAjB,EAAuB;gBACrBnE,GAAG,CAACqE,IAAJ,CACE,+EACC,qDAAoDL,IAAI,CAACM,YAAa,+BADvE,GAEA,+DAHF;cAKD,CAND,MAMO;gBACLtE,GAAG,CAACqE,IAAJ,CAAU,sBAAqBL,IAAI,CAACG,IAAL,IAAa,cAAe,sBAA3D;cACD;YACF;;YAED,IAAI,CAACH,IAAI,CAACO,KAAV,EAAiB;cACf7D,QAAQ,GAAGD,iBAAiB,CAACC,QAAD,EAAWC,QAAX,EAAqBC,OAArB,EAA8BC,SAA9B,CAA5B;;cAEA,IAAI6B,UAAU,KAAK,eAAnB,EAAoC;gBAClChC,QAAQ,IAAI,MAAMsD,IAAI,CAACQ,GAAvB;cACD;YACF;;YAED,MAAMC,kBAAkB,GAAGT,IAAI,CAACU,SAAL,GAAkB,eAAcV,IAAI,CAACU,SAAU,GAA/C,GAAoD,EAA/E;YACA,MAAMC,oBAAoB,GAAGnC,2BAA2B,GAAG,0BAAH,GAAgC,EAAxF;;YACA,IAAI0B,QAAQ,KAAK,KAAjB,EAAwB;cACtBH,UAAU,CAACa,IAAX,CAAiB,+BAA8BlE,QAAS,qBAAoB+D,kBAAmB,GAAEE,oBAAqB,GAAtH;YACD,CAFD,MAEO,IAAIT,QAAQ,KAAK,KAAjB,EAAwB;cAC7BH,UAAU,CAACa,IAAX,CAAgBZ,IAAI,CAACa,OAArB;YACD,CAFM,MAEA,IAAIX,QAAQ,KAAK,MAAjB,EAAyB;cAC9BH,UAAU,CAACa,IAAX,CAAiB,eAAclE,QAAS,iBAAgB+D,kBAAmB,GAAEE,oBAAqB,GAAlG;YACD,CAFM,MAEA;cACL,MAAMG,UAAU,GAAIzE,WAAW,CAAC6D,QAAD,CAAX,IAAyB,iBAA7C;;cACA,IAAIA,QAAQ,KAAK,QAAjB,EAA2B;gBACzBH,UAAU,CAACa,IAAX,CAAiB,yCAAwClE,QAAS,YAAWoE,UAAW,UAASpE,QAAS,IAAG+D,kBAAmB,GAAEE,oBAAqB,YAAvJ;cACD,CAFD,MAEO;gBACLZ,UAAU,CAACa,IAAX,CAAiB,iBAAgBE,UAAW,UAASpE,QAAS,IAAG+D,kBAAmB,GAAEE,oBAAqB,YAA3G;cACD;YACF;UACF;;UAED,MAAMI,UAAU,GAAG,EAAnB,CA9C2E,CA+C3E;UACA;UACA;UACA;;UACA,IAAIrC,UAAU,KAAK,2BAAnB,EAAgD;YAC9C,KAAK,MAAMsC,MAAX,IAAqBjB,UAArB,EAAiC;cAC/BgB,UAAU,CAACH,IAAX,EACE;cACA;cACAI,MAAM,CAACrC,OAAP,CAAe,IAAf,EAAqB,OAArB,EAA8BA,OAA9B,CAAsC,IAAtC,EAA4C,OAA5C,CAHF;YAID;UACF;;UAED,MAAMsC,QAAQ,GAAG7B,IAAI,CAACC,QAAL,CAAc,YAAd,IAA8BK,KAAK,CAACwB,MAAN,CAAaC,GAAb,CAAkBnB,IAAD,IAAU;YACxE,MAAMtD,QAAQ,GAAGD,iBAAiB,CAACuD,IAAI,CAACjC,IAAN,EAAYpB,QAAZ,EAAsBC,OAAtB,EAA+BC,SAA/B,CAAjB,CACd8B,OADc,CACN,KADM,EACC,MADD,EACS;YADT,CAEdA,OAFc,CAEN,IAFM,EAEA,MAFA,CAAjB,CADwE,CAG/C;;YAEzB,OAAQ,MAAKjC,QAAS,OAAMsD,IAAI,CAACQ,GAAI,GAArC;UACD,CAN8C,CAA9B,GAMZ,EANL;UAQA,OAAOpB,IAAI,CACRT,OADI,CACI,WADJ,EACiB,MAAMoB,UAAU,CAACqB,IAAX,CAAgB,IAAhB,CADvB,EAEJzC,OAFI,CAEI,iBAFJ,EAEuB,+BAA+B0C,IAAI,CAACC,SAAL,CAAenD,MAAf,CAA/B,GAAwD,KAF/E,EAGJQ,OAHI,CAGI,oBAHJ,EAG0B,MAAM,mCAAmC0C,IAAI,CAACC,SAAL,CAAeP,UAAf,CAAnC,GAAgE,KAHhG,EAIJpC,OAJI,CAII,YAJJ,EAIkB,MAAM,iCAAiCsC,QAAQ,CAACG,IAAT,CAAc,KAAd,CAAjC,GAAwD,QAJhF,EAKJzC,OALI,CAKI,mBALJ,EAKyBtB,2BAA2B,CAACW,OAAO,CAAClC,GAAT,CALpD,CAAP;QAMD,CA1ES,CAAV;MA2ED,CAjGM,CAAP;IAkGD,CAnGD,MAmGO,IAAI4C,UAAU,KAAK,eAAnB,EAAoC;MACzC,OAAOjB,YAAY,CAACgC,IAAb,CAAmBC,KAAD,IAAW;QAClCvD,MAAM,CAAC2D,iBAAP,CAAyB7B,QAAzB;QACAA,QAAQ,CAACe,SAAT,CAAmB,GAAnB;QACAf,QAAQ,CAACgB,GAAT,CAAaoC,IAAI,CAACC,SAAL,CAAe;UAC1B5B,KAAK,EAAEA,KAAK,CAACO,QAAN,CAAekB,GAAf,CAAoBnB,IAAD,IAAUvD,iBAAiB,CAACuD,IAAI,CAACjC,IAAL,GAAY,GAAZ,GAAkBiC,IAAI,CAACQ,GAAxB,EAA6B7D,QAA7B,EAAuCC,OAAvC,EAAgDC,SAAhD,CAA9C;QADmB,CAAf,CAAb;MAGD,CANM,CAAP;IAOD;;IAED,OAAOqB,IAAI,EAAX;EACD,CA5KD;AA6KD;;AAEDV,qBAAqB,CAAC+D,OAAtB,GAAgC,CAC9B,cAD8B,EAE9B,iBAF8B,EAG9B,WAH8B,EAI9B,UAJ8B,EAK9B,iBAL8B,EAM9B,gBAN8B,EAO9B,sBAP8B,EAQ9B,6BAR8B,CAAhC,C,CAWA;;AACAC,OAAO,CAACvF,MAAR,GAAiBuB,qBAAjB"},"metadata":{},"sourceType":"script"}