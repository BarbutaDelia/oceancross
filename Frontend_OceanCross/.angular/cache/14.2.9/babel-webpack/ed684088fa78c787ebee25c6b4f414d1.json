{"ast":null,"code":"'use strict';\n\nconst http = require('http');\n\nconst constant = require('./constants');\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst helper = require('./helper');\n\nconst cfg = require('./config');\n\nconst logger = require('./logger');\n\nconst {\n  lookup\n} = require('./utils/dns-utils');\n\nconst log = logger.create('runner');\n\nfunction parseExitCode(buffer, defaultExitCode, failOnEmptyTestSuite) {\n  const tailPos = buffer.length - Buffer.byteLength(constant.EXIT_CODE) - 2;\n\n  if (tailPos < 0) {\n    return {\n      exitCode: defaultExitCode,\n      buffer\n    };\n  }\n\n  const tail = buffer.slice(tailPos);\n  const tailStr = tail.toString();\n\n  if (tailStr.slice(0, -2) === constant.EXIT_CODE) {\n    const emptyInt = parseInt(tailStr.slice(-2, -1), 10);\n    let exitCode = parseInt(tailStr.slice(-1), 10);\n\n    if (failOnEmptyTestSuite === false && emptyInt === 0) {\n      log.warn('Test suite was empty.');\n      exitCode = 0;\n    }\n\n    return {\n      exitCode,\n      buffer: buffer.slice(0, tailPos)\n    };\n  }\n\n  return {\n    exitCode: defaultExitCode,\n    buffer\n  };\n} // TODO(vojta): read config file (port, host, urlRoot)\n\n\nfunction run(cliOptionsOrConfig, done) {\n  cliOptionsOrConfig = cliOptionsOrConfig || {};\n  done = helper.isFunction(done) ? done : process.exit;\n  let config;\n\n  if (cliOptionsOrConfig instanceof cfg.Config) {\n    config = cliOptionsOrConfig;\n  } else {\n    logger.setupFromConfig({\n      colors: cliOptionsOrConfig.colors,\n      logLevel: cliOptionsOrConfig.logLevel\n    });\n    const deprecatedCliOptionsMessage = 'Passing raw CLI options to `runner(config, done)` is deprecated. Use ' + '`parseConfig(configFilePath, cliOptions, {promiseConfig: true, throwErrors: true})` ' + 'to prepare a processed `Config` instance and pass that as the ' + '`config` argument instead.';\n    log.warn(deprecatedCliOptionsMessage);\n\n    try {\n      config = cfg.parseConfig(cliOptionsOrConfig.configFile, cliOptionsOrConfig, {\n        promiseConfig: false,\n        throwErrors: true\n      });\n    } catch (parseConfigError) {\n      // TODO: change how `done` falls back to exit in next major version\n      //  SEE: https://github.com/karma-runner/karma/pull/3635#discussion_r565399378\n      done(1);\n    }\n  }\n\n  let exitCode = 1;\n  const emitter = new EventEmitter();\n  const options = {\n    hostname: config.hostname,\n    path: config.urlRoot + 'run',\n    port: config.port,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    lookup\n  };\n  const request = http.request(options, function (response) {\n    response.on('data', function (buffer) {\n      const parsedResult = parseExitCode(buffer, exitCode, config.failOnEmptyTestSuite);\n      exitCode = parsedResult.exitCode;\n      emitter.emit('progress', parsedResult.buffer);\n    });\n    response.on('end', () => done(exitCode));\n  });\n  request.on('error', function (e) {\n    if (e.code === 'ECONNREFUSED') {\n      log.error('There is no server listening on port %d', options.port);\n      done(1, e.code);\n    } else {\n      throw e;\n    }\n  });\n  request.end(JSON.stringify({\n    args: config.clientArgs,\n    removedFiles: config.removedFiles,\n    changedFiles: config.changedFiles,\n    addedFiles: config.addedFiles,\n    refresh: config.refresh,\n    colors: config.colors\n  }));\n  return emitter;\n}\n\nexports.run = run;","map":{"version":3,"names":["http","require","constant","EventEmitter","helper","cfg","logger","lookup","log","create","parseExitCode","buffer","defaultExitCode","failOnEmptyTestSuite","tailPos","length","Buffer","byteLength","EXIT_CODE","exitCode","tail","slice","tailStr","toString","emptyInt","parseInt","warn","run","cliOptionsOrConfig","done","isFunction","process","exit","config","Config","setupFromConfig","colors","logLevel","deprecatedCliOptionsMessage","parseConfig","configFile","promiseConfig","throwErrors","parseConfigError","emitter","options","hostname","path","urlRoot","port","method","headers","request","response","on","parsedResult","emit","e","code","error","end","JSON","stringify","args","clientArgs","removedFiles","changedFiles","addedFiles","refresh","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/runner.js"],"sourcesContent":["'use strict'\n\nconst http = require('http')\n\nconst constant = require('./constants')\nconst EventEmitter = require('events').EventEmitter\nconst helper = require('./helper')\nconst cfg = require('./config')\nconst logger = require('./logger')\nconst { lookup } = require('./utils/dns-utils')\nconst log = logger.create('runner')\n\nfunction parseExitCode (buffer, defaultExitCode, failOnEmptyTestSuite) {\n  const tailPos = buffer.length - Buffer.byteLength(constant.EXIT_CODE) - 2\n\n  if (tailPos < 0) {\n    return { exitCode: defaultExitCode, buffer }\n  }\n\n  const tail = buffer.slice(tailPos)\n  const tailStr = tail.toString()\n  if (tailStr.slice(0, -2) === constant.EXIT_CODE) {\n    const emptyInt = parseInt(tailStr.slice(-2, -1), 10)\n    let exitCode = parseInt(tailStr.slice(-1), 10)\n    if (failOnEmptyTestSuite === false && emptyInt === 0) {\n      log.warn('Test suite was empty.')\n      exitCode = 0\n    }\n    return { exitCode, buffer: buffer.slice(0, tailPos) }\n  }\n\n  return { exitCode: defaultExitCode, buffer }\n}\n\n// TODO(vojta): read config file (port, host, urlRoot)\nfunction run (cliOptionsOrConfig, done) {\n  cliOptionsOrConfig = cliOptionsOrConfig || {}\n  done = helper.isFunction(done) ? done : process.exit\n\n  let config\n  if (cliOptionsOrConfig instanceof cfg.Config) {\n    config = cliOptionsOrConfig\n  } else {\n    logger.setupFromConfig({\n      colors: cliOptionsOrConfig.colors,\n      logLevel: cliOptionsOrConfig.logLevel\n    })\n    const deprecatedCliOptionsMessage =\n      'Passing raw CLI options to `runner(config, done)` is deprecated. Use ' +\n      '`parseConfig(configFilePath, cliOptions, {promiseConfig: true, throwErrors: true})` ' +\n      'to prepare a processed `Config` instance and pass that as the ' +\n      '`config` argument instead.'\n    log.warn(deprecatedCliOptionsMessage)\n    try {\n      config = cfg.parseConfig(\n        cliOptionsOrConfig.configFile,\n        cliOptionsOrConfig,\n        {\n          promiseConfig: false,\n          throwErrors: true\n        }\n      )\n    } catch (parseConfigError) {\n      // TODO: change how `done` falls back to exit in next major version\n      //  SEE: https://github.com/karma-runner/karma/pull/3635#discussion_r565399378\n      done(1)\n    }\n  }\n  let exitCode = 1\n  const emitter = new EventEmitter()\n  const options = {\n    hostname: config.hostname,\n    path: config.urlRoot + 'run',\n    port: config.port,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    lookup\n  }\n\n  const request = http.request(options, function (response) {\n    response.on('data', function (buffer) {\n      const parsedResult = parseExitCode(buffer, exitCode, config.failOnEmptyTestSuite)\n      exitCode = parsedResult.exitCode\n      emitter.emit('progress', parsedResult.buffer)\n    })\n\n    response.on('end', () => done(exitCode))\n  })\n\n  request.on('error', function (e) {\n    if (e.code === 'ECONNREFUSED') {\n      log.error('There is no server listening on port %d', options.port)\n      done(1, e.code)\n    } else {\n      throw e\n    }\n  })\n\n  request.end(JSON.stringify({\n    args: config.clientArgs,\n    removedFiles: config.removedFiles,\n    changedFiles: config.changedFiles,\n    addedFiles: config.addedFiles,\n    refresh: config.refresh,\n    colors: config.colors\n  }))\n\n  return emitter\n}\n\nexports.run = run\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}