{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SuppressExtractedTextChunksWebpackPlugin = void 0;\n/**\n * Remove .js files from entry points consisting entirely of stylesheets.\n * To be used together with mini-css-extract-plugin.\n */\n\nclass SuppressExtractedTextChunksWebpackPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap('SuppressExtractedTextChunks', compilation => {\n      compilation.hooks.chunkAsset.tap('SuppressExtractedTextChunks', (chunk, filename) => {\n        // Remove only JavaScript assets\n        if (!filename.endsWith('.js')) {\n          return;\n        } // Only chunks with a css asset should have JavaScript assets removed\n\n\n        let hasCssFile = false;\n\n        for (const file of chunk.files) {\n          if (file.endsWith('.css')) {\n            hasCssFile = true;\n            break;\n          }\n        }\n\n        if (!hasCssFile) {\n          return;\n        } // Only chunks with all CSS entry dependencies should have JavaScript assets removed\n\n\n        let cssOnly = false;\n        const entryModules = compilation.chunkGraph.getChunkEntryModulesIterable(chunk);\n\n        for (const module of entryModules) {\n          cssOnly = module.dependencies.every(dependency => dependency.constructor.name === 'CssDependency');\n\n          if (!cssOnly) {\n            break;\n          }\n        }\n\n        if (cssOnly) {\n          chunk.files.delete(filename);\n          compilation.deleteAsset(filename);\n        }\n      });\n    });\n  }\n\n}\n\nexports.SuppressExtractedTextChunksWebpackPlugin = SuppressExtractedTextChunksWebpackPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","SuppressExtractedTextChunksWebpackPlugin","apply","compiler","hooks","compilation","tap","chunkAsset","chunk","filename","endsWith","hasCssFile","file","files","cssOnly","entryModules","chunkGraph","getChunkEntryModulesIterable","module","dependencies","every","dependency","constructor","name","delete","deleteAsset"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@angular-devkit/build-angular/src/webpack/plugins/suppress-entry-chunks-webpack-plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuppressExtractedTextChunksWebpackPlugin = void 0;\n/**\n * Remove .js files from entry points consisting entirely of stylesheets.\n * To be used together with mini-css-extract-plugin.\n */\nclass SuppressExtractedTextChunksWebpackPlugin {\n    apply(compiler) {\n        compiler.hooks.compilation.tap('SuppressExtractedTextChunks', (compilation) => {\n            compilation.hooks.chunkAsset.tap('SuppressExtractedTextChunks', (chunk, filename) => {\n                // Remove only JavaScript assets\n                if (!filename.endsWith('.js')) {\n                    return;\n                }\n                // Only chunks with a css asset should have JavaScript assets removed\n                let hasCssFile = false;\n                for (const file of chunk.files) {\n                    if (file.endsWith('.css')) {\n                        hasCssFile = true;\n                        break;\n                    }\n                }\n                if (!hasCssFile) {\n                    return;\n                }\n                // Only chunks with all CSS entry dependencies should have JavaScript assets removed\n                let cssOnly = false;\n                const entryModules = compilation.chunkGraph.getChunkEntryModulesIterable(chunk);\n                for (const module of entryModules) {\n                    cssOnly = module.dependencies.every((dependency) => dependency.constructor.name === 'CssDependency');\n                    if (!cssOnly) {\n                        break;\n                    }\n                }\n                if (cssOnly) {\n                    chunk.files.delete(filename);\n                    compilation.deleteAsset(filename);\n                }\n            });\n        });\n    }\n}\nexports.SuppressExtractedTextChunksWebpackPlugin = SuppressExtractedTextChunksWebpackPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,wCAAR,GAAmD,KAAK,CAAxD;AACA;AACA;AACA;AACA;;AACA,MAAMA,wCAAN,CAA+C;EAC3CC,KAAK,CAACC,QAAD,EAAW;IACZA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,6BAA/B,EAA+DD,WAAD,IAAiB;MAC3EA,WAAW,CAACD,KAAZ,CAAkBG,UAAlB,CAA6BD,GAA7B,CAAiC,6BAAjC,EAAgE,CAACE,KAAD,EAAQC,QAAR,KAAqB;QACjF;QACA,IAAI,CAACA,QAAQ,CAACC,QAAT,CAAkB,KAAlB,CAAL,EAA+B;UAC3B;QACH,CAJgF,CAKjF;;;QACA,IAAIC,UAAU,GAAG,KAAjB;;QACA,KAAK,MAAMC,IAAX,IAAmBJ,KAAK,CAACK,KAAzB,EAAgC;UAC5B,IAAID,IAAI,CAACF,QAAL,CAAc,MAAd,CAAJ,EAA2B;YACvBC,UAAU,GAAG,IAAb;YACA;UACH;QACJ;;QACD,IAAI,CAACA,UAAL,EAAiB;UACb;QACH,CAfgF,CAgBjF;;;QACA,IAAIG,OAAO,GAAG,KAAd;QACA,MAAMC,YAAY,GAAGV,WAAW,CAACW,UAAZ,CAAuBC,4BAAvB,CAAoDT,KAApD,CAArB;;QACA,KAAK,MAAMU,MAAX,IAAqBH,YAArB,EAAmC;UAC/BD,OAAO,GAAGI,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA2BC,UAAD,IAAgBA,UAAU,CAACC,WAAX,CAAuBC,IAAvB,KAAgC,eAA1E,CAAV;;UACA,IAAI,CAACT,OAAL,EAAc;YACV;UACH;QACJ;;QACD,IAAIA,OAAJ,EAAa;UACTN,KAAK,CAACK,KAAN,CAAYW,MAAZ,CAAmBf,QAAnB;UACAJ,WAAW,CAACoB,WAAZ,CAAwBhB,QAAxB;QACH;MACJ,CA7BD;IA8BH,CA/BD;EAgCH;;AAlC0C;;AAoC/CV,OAAO,CAACE,wCAAR,GAAmDA,wCAAnD"},"metadata":{},"sourceType":"script"}