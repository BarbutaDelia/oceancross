{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.kFieldCount = exports.kResponseCountField = exports.kRequestCountField = exports.isTaskQueue = exports.markMovable = exports.isMovable = exports.isTransferable = exports.kQueueOptions = exports.kValue = exports.kTransferable = exports.commonState = void 0;\n;\nexports.commonState = {\n  isWorkerThread: false,\n  workerData: undefined\n}; // Internal symbol used to mark Transferable objects returned\n// by the Piscina.move() function\n\nconst kMovable = Symbol('Piscina.kMovable');\nexports.kTransferable = Symbol.for('Piscina.transferable');\nexports.kValue = Symbol.for('Piscina.valueOf');\nexports.kQueueOptions = Symbol.for('Piscina.queueOptions'); // True if the object implements the Transferable interface\n\nfunction isTransferable(value) {\n  return value != null && typeof value === 'object' && exports.kTransferable in value && exports.kValue in value;\n}\n\nexports.isTransferable = isTransferable; // True if object implements Transferable and has been returned\n// by the Piscina.move() function\n\nfunction isMovable(value) {\n  return isTransferable(value) && value[kMovable] === true;\n}\n\nexports.isMovable = isMovable;\n\nfunction markMovable(value) {\n  Object.defineProperty(value, kMovable, {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: true\n  });\n}\n\nexports.markMovable = markMovable;\n\nfunction isTaskQueue(value) {\n  return typeof value === 'object' && value !== null && 'size' in value && typeof value.shift === 'function' && typeof value.remove === 'function' && typeof value.push === 'function';\n}\n\nexports.isTaskQueue = isTaskQueue;\nexports.kRequestCountField = 0;\nexports.kResponseCountField = 1;\nexports.kFieldCount = 2;","map":{"version":3,"names":["Object","defineProperty","exports","value","kFieldCount","kResponseCountField","kRequestCountField","isTaskQueue","markMovable","isMovable","isTransferable","kQueueOptions","kValue","kTransferable","commonState","isWorkerThread","workerData","undefined","kMovable","Symbol","for","enumerable","configurable","writable","shift","remove","push"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/piscina/dist/src/common.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.kFieldCount = exports.kResponseCountField = exports.kRequestCountField = exports.isTaskQueue = exports.markMovable = exports.isMovable = exports.isTransferable = exports.kQueueOptions = exports.kValue = exports.kTransferable = exports.commonState = void 0;\n;\nexports.commonState = {\n    isWorkerThread: false,\n    workerData: undefined\n};\n// Internal symbol used to mark Transferable objects returned\n// by the Piscina.move() function\nconst kMovable = Symbol('Piscina.kMovable');\nexports.kTransferable = Symbol.for('Piscina.transferable');\nexports.kValue = Symbol.for('Piscina.valueOf');\nexports.kQueueOptions = Symbol.for('Piscina.queueOptions');\n// True if the object implements the Transferable interface\nfunction isTransferable(value) {\n    return value != null &&\n        typeof value === 'object' &&\n        exports.kTransferable in value &&\n        exports.kValue in value;\n}\nexports.isTransferable = isTransferable;\n// True if object implements Transferable and has been returned\n// by the Piscina.move() function\nfunction isMovable(value) {\n    return isTransferable(value) && value[kMovable] === true;\n}\nexports.isMovable = isMovable;\nfunction markMovable(value) {\n    Object.defineProperty(value, kMovable, {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: true\n    });\n}\nexports.markMovable = markMovable;\nfunction isTaskQueue(value) {\n    return typeof value === 'object' &&\n        value !== null &&\n        'size' in value &&\n        typeof value.shift === 'function' &&\n        typeof value.remove === 'function' &&\n        typeof value.push === 'function';\n}\nexports.isTaskQueue = isTaskQueue;\nexports.kRequestCountField = 0;\nexports.kResponseCountField = 1;\nexports.kFieldCount = 2;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACG,mBAAR,GAA8BH,OAAO,CAACI,kBAAR,GAA6BJ,OAAO,CAACK,WAAR,GAAsBL,OAAO,CAACM,WAAR,GAAsBN,OAAO,CAACO,SAAR,GAAoBP,OAAO,CAACQ,cAAR,GAAyBR,OAAO,CAACS,aAAR,GAAwBT,OAAO,CAACU,MAAR,GAAiBV,OAAO,CAACW,aAAR,GAAwBX,OAAO,CAACY,WAAR,GAAsB,KAAK,CAAtQ;AACA;AACAZ,OAAO,CAACY,WAAR,GAAsB;EAClBC,cAAc,EAAE,KADE;EAElBC,UAAU,EAAEC;AAFM,CAAtB,C,CAIA;AACA;;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAAC,kBAAD,CAAvB;AACAjB,OAAO,CAACW,aAAR,GAAwBM,MAAM,CAACC,GAAP,CAAW,sBAAX,CAAxB;AACAlB,OAAO,CAACU,MAAR,GAAiBO,MAAM,CAACC,GAAP,CAAW,iBAAX,CAAjB;AACAlB,OAAO,CAACS,aAAR,GAAwBQ,MAAM,CAACC,GAAP,CAAW,sBAAX,CAAxB,C,CACA;;AACA,SAASV,cAAT,CAAwBP,KAAxB,EAA+B;EAC3B,OAAOA,KAAK,IAAI,IAAT,IACH,OAAOA,KAAP,KAAiB,QADd,IAEHD,OAAO,CAACW,aAAR,IAAyBV,KAFtB,IAGHD,OAAO,CAACU,MAAR,IAAkBT,KAHtB;AAIH;;AACDD,OAAO,CAACQ,cAAR,GAAyBA,cAAzB,C,CACA;AACA;;AACA,SAASD,SAAT,CAAmBN,KAAnB,EAA0B;EACtB,OAAOO,cAAc,CAACP,KAAD,CAAd,IAAyBA,KAAK,CAACe,QAAD,CAAL,KAAoB,IAApD;AACH;;AACDhB,OAAO,CAACO,SAAR,GAAoBA,SAApB;;AACA,SAASD,WAAT,CAAqBL,KAArB,EAA4B;EACxBH,MAAM,CAACC,cAAP,CAAsBE,KAAtB,EAA6Be,QAA7B,EAAuC;IACnCG,UAAU,EAAE,KADuB;IAEnCC,YAAY,EAAE,IAFqB;IAGnCC,QAAQ,EAAE,IAHyB;IAInCpB,KAAK,EAAE;EAJ4B,CAAvC;AAMH;;AACDD,OAAO,CAACM,WAAR,GAAsBA,WAAtB;;AACA,SAASD,WAAT,CAAqBJ,KAArB,EAA4B;EACxB,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IACHA,KAAK,KAAK,IADP,IAEH,UAAUA,KAFP,IAGH,OAAOA,KAAK,CAACqB,KAAb,KAAuB,UAHpB,IAIH,OAAOrB,KAAK,CAACsB,MAAb,KAAwB,UAJrB,IAKH,OAAOtB,KAAK,CAACuB,IAAb,KAAsB,UAL1B;AAMH;;AACDxB,OAAO,CAACK,WAAR,GAAsBA,WAAtB;AACAL,OAAO,CAACI,kBAAR,GAA6B,CAA7B;AACAJ,OAAO,CAACG,mBAAR,GAA8B,CAA9B;AACAH,OAAO,CAACE,WAAR,GAAsB,CAAtB"},"metadata":{},"sourceType":"script"}