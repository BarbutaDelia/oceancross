{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inlineLocales = exports.createI18nPlugins = void 0;\n\nconst remapping_1 = __importDefault(require(\"@ampproject/remapping\"));\n\nconst core_1 = require(\"@babel/core\");\n\nconst template_1 = __importDefault(require(\"@babel/template\"));\n\nconst fs = __importStar(require(\"fs\"));\n\nconst path = __importStar(require(\"path\"));\n\nconst worker_threads_1 = require(\"worker_threads\");\n\nconst environment_options_1 = require(\"./environment-options\");\n\nconst error_1 = require(\"./error\");\n\nconst load_esm_1 = require(\"./load-esm\"); // Lazy loaded webpack-sources object\n// Webpack is only imported if needed during the processing\n\n\nlet webpackSources;\nconst {\n  i18n\n} = worker_threads_1.workerData || {};\n/**\n * Internal flag to enable the direct usage of the `@angular/localize` translation plugins.\n * Their usage is currently several times slower than the string manipulation method.\n * Future work to optimize the plugins should enable plugin usage as the default.\n */\n\nconst USE_LOCALIZE_PLUGINS = false;\n/**\n * Cached instance of the `@angular/localize/tools` module.\n * This is used to remove the need to repeatedly import the module per file translation.\n */\n\nlet localizeToolsModule;\n/**\n * Attempts to load the `@angular/localize/tools` module containing the functionality to\n * perform the file translations.\n * This module must be dynamically loaded as it is an ESM module and this file is CommonJS.\n */\n\nfunction loadLocalizeTools() {\n  return _loadLocalizeTools.apply(this, arguments);\n}\n\nfunction _loadLocalizeTools() {\n  _loadLocalizeTools = _asyncToGenerator(function* () {\n    if (localizeToolsModule !== undefined) {\n      return localizeToolsModule;\n    } // Load ESM `@angular/localize/tools` using the TypeScript dynamic import workaround.\n    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n    // changed to a direct dynamic import.\n\n\n    return (0, load_esm_1.loadEsmModule)('@angular/localize/tools');\n  });\n  return _loadLocalizeTools.apply(this, arguments);\n}\n\nfunction createI18nPlugins(_x, _x2, _x3, _x4, _x5) {\n  return _createI18nPlugins.apply(this, arguments);\n}\n\nfunction _createI18nPlugins() {\n  _createI18nPlugins = _asyncToGenerator(function* (locale, translation, missingTranslation, shouldInline, localeDataContent) {\n    const {\n      Diagnostics,\n      makeEs2015TranslatePlugin,\n      makeEs5TranslatePlugin,\n      makeLocalePlugin\n    } = yield loadLocalizeTools();\n    const plugins = [];\n    const diagnostics = new Diagnostics();\n\n    if (shouldInline) {\n      plugins.push( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      makeEs2015TranslatePlugin(diagnostics, translation || {}, {\n        missingTranslation: translation === undefined ? 'ignore' : missingTranslation\n      }));\n      plugins.push( // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      makeEs5TranslatePlugin(diagnostics, translation || {}, {\n        missingTranslation: translation === undefined ? 'ignore' : missingTranslation\n      }));\n    }\n\n    plugins.push(makeLocalePlugin(locale));\n\n    if (localeDataContent) {\n      plugins.push({\n        visitor: {\n          Program(path) {\n            path.unshiftContainer('body', template_1.default.ast(localeDataContent));\n          }\n\n        }\n      });\n    }\n\n    return {\n      diagnostics,\n      plugins\n    };\n  });\n  return _createI18nPlugins.apply(this, arguments);\n}\n\nexports.createI18nPlugins = createI18nPlugins;\nconst localizeName = '$localize';\n\nfunction inlineLocales(_x6) {\n  return _inlineLocales.apply(this, arguments);\n}\n\nfunction _inlineLocales() {\n  _inlineLocales = _asyncToGenerator(function* (options) {\n    var _a;\n\n    if (!i18n || i18n.inlineLocales.size === 0) {\n      return {\n        file: options.filename,\n        diagnostics: [],\n        count: 0\n      };\n    }\n\n    if (i18n.flatOutput && i18n.inlineLocales.size > 1) {\n      throw new Error('Flat output is only supported when inlining one locale.');\n    }\n\n    const hasLocalizeName = options.code.includes(localizeName);\n\n    if (!hasLocalizeName && !options.setLocale) {\n      return inlineCopyOnly(options);\n    }\n\n    yield loadLocalizeTools();\n    let ast;\n\n    try {\n      ast = (0, core_1.parseSync)(options.code, {\n        babelrc: false,\n        configFile: false,\n        sourceType: 'script',\n        filename: options.filename\n      });\n    } catch (error) {\n      (0, error_1.assertIsError)(error); // Make the error more readable.\n      // Same errors will contain the full content of the file as the error message\n      // Which makes it hard to find the actual error message.\n\n      const index = error.message.indexOf(')\\n');\n      const msg = index !== -1 ? error.message.slice(0, index + 1) : error.message;\n      throw new Error(`${msg}\\nAn error occurred inlining file \"${options.filename}\"`);\n    }\n\n    if (!ast) {\n      throw new Error(`Unknown error occurred inlining file \"${options.filename}\"`);\n    }\n\n    if (!USE_LOCALIZE_PLUGINS) {\n      return inlineLocalesDirect(ast, options);\n    }\n\n    const diagnostics = [];\n\n    for (const locale of i18n.inlineLocales) {\n      const isSourceLocale = locale === i18n.sourceLocale; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      const translations = isSourceLocale ? {} : i18n.locales[locale].translation || {};\n      let localeDataContent;\n\n      if (options.setLocale) {\n        // If locale data is provided, load it and prepend to file\n        const localeDataPath = (_a = i18n.locales[locale]) === null || _a === void 0 ? void 0 : _a.dataPath;\n\n        if (localeDataPath) {\n          localeDataContent = yield loadLocaleData(localeDataPath, true, options.es5);\n        }\n      }\n\n      const {\n        diagnostics: localeDiagnostics,\n        plugins\n      } = yield createI18nPlugins(locale, translations, isSourceLocale ? 'ignore' : options.missingTranslation || 'warning', true, localeDataContent);\n      const transformResult = yield (0, core_1.transformFromAstSync)(ast, options.code, {\n        filename: options.filename,\n        // using false ensures that babel will NOT search and process sourcemap comments (large memory usage)\n        // The types do not include the false option even though it is valid\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        inputSourceMap: false,\n        babelrc: false,\n        configFile: false,\n        plugins,\n        compact: !environment_options_1.shouldBeautify,\n        sourceMaps: !!options.map\n      });\n      diagnostics.push(...localeDiagnostics.messages);\n\n      if (!transformResult || !transformResult.code) {\n        throw new Error(`Unknown error occurred processing bundle for \"${options.filename}\".`);\n      }\n\n      const outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n      fs.writeFileSync(outputPath, transformResult.code);\n\n      if (options.map && transformResult.map) {\n        const outputMap = (0, remapping_1.default)([transformResult.map, options.map], () => null);\n        fs.writeFileSync(outputPath + '.map', JSON.stringify(outputMap));\n      }\n    }\n\n    return {\n      file: options.filename,\n      diagnostics\n    };\n  });\n  return _inlineLocales.apply(this, arguments);\n}\n\nexports.inlineLocales = inlineLocales;\n\nfunction inlineLocalesDirect(_x7, _x8) {\n  return _inlineLocalesDirect.apply(this, arguments);\n}\n\nfunction _inlineLocalesDirect() {\n  _inlineLocalesDirect = _asyncToGenerator(function* (ast, options) {\n    if (!i18n || i18n.inlineLocales.size === 0) {\n      return {\n        file: options.filename,\n        diagnostics: [],\n        count: 0\n      };\n    }\n\n    const {\n      default: generate\n    } = yield Promise.resolve().then(() => __importStar(require('@babel/generator')));\n    const localizeDiag = yield loadLocalizeTools();\n    const diagnostics = new localizeDiag.Diagnostics();\n    const positions = findLocalizePositions(ast, options, localizeDiag);\n\n    if (positions.length === 0 && !options.setLocale) {\n      return inlineCopyOnly(options);\n    }\n\n    const inputMap = !!options.map && JSON.parse(options.map); // Cleanup source root otherwise it will be added to each source entry\n\n    const mapSourceRoot = inputMap && inputMap.sourceRoot;\n\n    if (inputMap) {\n      delete inputMap.sourceRoot;\n    } // Load Webpack only when needed\n\n\n    if (webpackSources === undefined) {\n      webpackSources = (yield Promise.resolve().then(() => __importStar(require('webpack')))).sources;\n    }\n\n    const {\n      ConcatSource,\n      OriginalSource,\n      ReplaceSource,\n      SourceMapSource\n    } = webpackSources;\n\n    for (const locale of i18n.inlineLocales) {\n      const content = new ReplaceSource(inputMap ? new SourceMapSource(options.code, options.filename, inputMap) : new OriginalSource(options.code, options.filename));\n      const isSourceLocale = locale === i18n.sourceLocale; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      const translations = isSourceLocale ? {} : i18n.locales[locale].translation || {};\n\n      for (const position of positions) {\n        const translated = localizeDiag.translate(diagnostics, translations, position.messageParts, position.expressions, isSourceLocale ? 'ignore' : options.missingTranslation || 'warning');\n        const expression = localizeDiag.buildLocalizeReplacement(translated[0], translated[1]);\n        const {\n          code\n        } = generate(expression);\n        content.replace(position.start, position.end - 1, code);\n      }\n\n      let outputSource = content;\n\n      if (options.setLocale) {\n        const setLocaleText = `var $localize=Object.assign(void 0===$localize?{}:$localize,{locale:\"${locale}\"});\\n`; // If locale data is provided, load it and prepend to file\n\n        let localeDataSource;\n        const localeDataPath = i18n.locales[locale] && i18n.locales[locale].dataPath;\n\n        if (localeDataPath) {\n          const localeDataContent = yield loadLocaleData(localeDataPath, true, options.es5);\n          localeDataSource = new OriginalSource(localeDataContent, path.basename(localeDataPath));\n        }\n\n        outputSource = localeDataSource ? // The semicolon ensures that there is no syntax error between statements\n        new ConcatSource(setLocaleText, localeDataSource, ';\\n', content) : new ConcatSource(setLocaleText, content);\n      }\n\n      const {\n        source: outputCode,\n        map: outputMap\n      } = outputSource.sourceAndMap();\n      const outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n      fs.writeFileSync(outputPath, outputCode);\n\n      if (inputMap && outputMap) {\n        outputMap.file = options.filename;\n\n        if (mapSourceRoot) {\n          outputMap.sourceRoot = mapSourceRoot;\n        }\n\n        fs.writeFileSync(outputPath + '.map', JSON.stringify(outputMap));\n      }\n    }\n\n    return {\n      file: options.filename,\n      diagnostics: diagnostics.messages,\n      count: positions.length\n    };\n  });\n  return _inlineLocalesDirect.apply(this, arguments);\n}\n\nfunction inlineCopyOnly(options) {\n  if (!i18n) {\n    throw new Error('i18n options are missing');\n  }\n\n  for (const locale of i18n.inlineLocales) {\n    const outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n    fs.writeFileSync(outputPath, options.code);\n\n    if (options.map) {\n      fs.writeFileSync(outputPath + '.map', options.map);\n    }\n  }\n\n  return {\n    file: options.filename,\n    diagnostics: [],\n    count: 0\n  };\n}\n\nfunction findLocalizePositions(ast, options, utils) {\n  const positions = []; // Workaround to ensure a path hub is present for traversal\n\n  const {\n    File\n  } = require('@babel/core');\n\n  const file = new File({}, {\n    code: options.code,\n    ast\n  });\n\n  if (options.es5) {\n    (0, core_1.traverse)(file.ast, {\n      CallExpression(path) {\n        const callee = path.get('callee');\n\n        if (callee.isIdentifier() && callee.node.name === localizeName && utils.isGlobalIdentifier(callee)) {\n          const [messageParts, expressions] = unwrapLocalizeCall(path, utils);\n          positions.push({\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            start: path.node.start,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            end: path.node.end,\n            messageParts,\n            expressions\n          });\n        }\n      }\n\n    });\n  } else {\n    (0, core_1.traverse)(file.ast, {\n      TaggedTemplateExpression(path) {\n        if (core_1.types.isIdentifier(path.node.tag) && path.node.tag.name === localizeName) {\n          const [messageParts, expressions] = unwrapTemplateLiteral(path, utils);\n          positions.push({\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            start: path.node.start,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            end: path.node.end,\n            messageParts,\n            expressions\n          });\n        }\n      }\n\n    });\n  }\n\n  return positions;\n}\n\nfunction unwrapTemplateLiteral(path, utils) {\n  const [messageParts] = utils.unwrapMessagePartsFromTemplateLiteral(path.get('quasi').get('quasis'));\n  const [expressions] = utils.unwrapExpressionsFromTemplateLiteral(path.get('quasi'));\n  return [messageParts, expressions];\n}\n\nfunction unwrapLocalizeCall(path, utils) {\n  const [messageParts] = utils.unwrapMessagePartsFromLocalizeCall(path);\n  const [expressions] = utils.unwrapSubstitutionsFromLocalizeCall(path);\n  return [messageParts, expressions];\n}\n\nfunction loadLocaleData(_x9, _x10, _x11) {\n  return _loadLocaleData.apply(this, arguments);\n}\n\nfunction _loadLocaleData() {\n  _loadLocaleData = _asyncToGenerator(function* (path, optimize, es5) {\n    // The path is validated during option processing before the build starts\n    const content = fs.readFileSync(path, 'utf8'); // Downlevel and optimize the data\n\n    const transformResult = yield (0, core_1.transformAsync)(content, {\n      filename: path,\n      // The types do not include the false option even though it is valid\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      inputSourceMap: false,\n      babelrc: false,\n      configFile: false,\n      presets: [[require.resolve('@babel/preset-env'), {\n        bugfixes: true,\n        // IE 11 is the oldest supported browser\n        targets: es5 ? {\n          ie: '11'\n        } : {\n          esmodules: true\n        }\n      }]],\n      minified: environment_options_1.allowMinify && optimize,\n      compact: !environment_options_1.shouldBeautify && optimize,\n      comments: !optimize\n    });\n\n    if (!transformResult || !transformResult.code) {\n      throw new Error(`Unknown error occurred processing bundle for \"${path}\".`);\n    }\n\n    return transformResult.code;\n  });\n  return _loadLocaleData.apply(this, arguments);\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","inlineLocales","createI18nPlugins","remapping_1","require","core_1","template_1","fs","path","worker_threads_1","environment_options_1","error_1","load_esm_1","webpackSources","i18n","workerData","USE_LOCALIZE_PLUGINS","localizeToolsModule","loadLocalizeTools","loadEsmModule","locale","translation","missingTranslation","shouldInline","localeDataContent","Diagnostics","makeEs2015TranslatePlugin","makeEs5TranslatePlugin","makeLocalePlugin","plugins","diagnostics","push","visitor","Program","unshiftContainer","default","ast","localizeName","options","_a","size","file","filename","count","flatOutput","Error","hasLocalizeName","code","includes","setLocale","inlineCopyOnly","parseSync","babelrc","configFile","sourceType","error","assertIsError","index","message","indexOf","msg","slice","inlineLocalesDirect","isSourceLocale","sourceLocale","translations","locales","localeDataPath","dataPath","loadLocaleData","es5","localeDiagnostics","transformResult","transformFromAstSync","inputSourceMap","compact","shouldBeautify","sourceMaps","map","messages","outputPath","join","writeFileSync","outputMap","JSON","stringify","generate","Promise","resolve","then","localizeDiag","positions","findLocalizePositions","length","inputMap","parse","mapSourceRoot","sourceRoot","sources","ConcatSource","OriginalSource","ReplaceSource","SourceMapSource","content","position","translated","translate","messageParts","expressions","expression","buildLocalizeReplacement","replace","start","end","outputSource","setLocaleText","localeDataSource","basename","source","outputCode","sourceAndMap","utils","File","traverse","CallExpression","callee","isIdentifier","node","name","isGlobalIdentifier","unwrapLocalizeCall","TaggedTemplateExpression","types","tag","unwrapTemplateLiteral","unwrapMessagePartsFromTemplateLiteral","unwrapExpressionsFromTemplateLiteral","unwrapMessagePartsFromLocalizeCall","unwrapSubstitutionsFromLocalizeCall","optimize","readFileSync","transformAsync","presets","bugfixes","targets","ie","esmodules","minified","allowMinify","comments"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@angular-devkit/build-angular/src/utils/process-bundle.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inlineLocales = exports.createI18nPlugins = void 0;\nconst remapping_1 = __importDefault(require(\"@ampproject/remapping\"));\nconst core_1 = require(\"@babel/core\");\nconst template_1 = __importDefault(require(\"@babel/template\"));\nconst fs = __importStar(require(\"fs\"));\nconst path = __importStar(require(\"path\"));\nconst worker_threads_1 = require(\"worker_threads\");\nconst environment_options_1 = require(\"./environment-options\");\nconst error_1 = require(\"./error\");\nconst load_esm_1 = require(\"./load-esm\");\n// Lazy loaded webpack-sources object\n// Webpack is only imported if needed during the processing\nlet webpackSources;\nconst { i18n } = (worker_threads_1.workerData || {});\n/**\n * Internal flag to enable the direct usage of the `@angular/localize` translation plugins.\n * Their usage is currently several times slower than the string manipulation method.\n * Future work to optimize the plugins should enable plugin usage as the default.\n */\nconst USE_LOCALIZE_PLUGINS = false;\n/**\n * Cached instance of the `@angular/localize/tools` module.\n * This is used to remove the need to repeatedly import the module per file translation.\n */\nlet localizeToolsModule;\n/**\n * Attempts to load the `@angular/localize/tools` module containing the functionality to\n * perform the file translations.\n * This module must be dynamically loaded as it is an ESM module and this file is CommonJS.\n */\nasync function loadLocalizeTools() {\n    if (localizeToolsModule !== undefined) {\n        return localizeToolsModule;\n    }\n    // Load ESM `@angular/localize/tools` using the TypeScript dynamic import workaround.\n    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n    // changed to a direct dynamic import.\n    return (0, load_esm_1.loadEsmModule)('@angular/localize/tools');\n}\nasync function createI18nPlugins(locale, translation, missingTranslation, shouldInline, localeDataContent) {\n    const { Diagnostics, makeEs2015TranslatePlugin, makeEs5TranslatePlugin, makeLocalePlugin } = await loadLocalizeTools();\n    const plugins = [];\n    const diagnostics = new Diagnostics();\n    if (shouldInline) {\n        plugins.push(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        makeEs2015TranslatePlugin(diagnostics, (translation || {}), {\n            missingTranslation: translation === undefined ? 'ignore' : missingTranslation,\n        }));\n        plugins.push(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        makeEs5TranslatePlugin(diagnostics, (translation || {}), {\n            missingTranslation: translation === undefined ? 'ignore' : missingTranslation,\n        }));\n    }\n    plugins.push(makeLocalePlugin(locale));\n    if (localeDataContent) {\n        plugins.push({\n            visitor: {\n                Program(path) {\n                    path.unshiftContainer('body', template_1.default.ast(localeDataContent));\n                },\n            },\n        });\n    }\n    return { diagnostics, plugins };\n}\nexports.createI18nPlugins = createI18nPlugins;\nconst localizeName = '$localize';\nasync function inlineLocales(options) {\n    var _a;\n    if (!i18n || i18n.inlineLocales.size === 0) {\n        return { file: options.filename, diagnostics: [], count: 0 };\n    }\n    if (i18n.flatOutput && i18n.inlineLocales.size > 1) {\n        throw new Error('Flat output is only supported when inlining one locale.');\n    }\n    const hasLocalizeName = options.code.includes(localizeName);\n    if (!hasLocalizeName && !options.setLocale) {\n        return inlineCopyOnly(options);\n    }\n    await loadLocalizeTools();\n    let ast;\n    try {\n        ast = (0, core_1.parseSync)(options.code, {\n            babelrc: false,\n            configFile: false,\n            sourceType: 'script',\n            filename: options.filename,\n        });\n    }\n    catch (error) {\n        (0, error_1.assertIsError)(error);\n        // Make the error more readable.\n        // Same errors will contain the full content of the file as the error message\n        // Which makes it hard to find the actual error message.\n        const index = error.message.indexOf(')\\n');\n        const msg = index !== -1 ? error.message.slice(0, index + 1) : error.message;\n        throw new Error(`${msg}\\nAn error occurred inlining file \"${options.filename}\"`);\n    }\n    if (!ast) {\n        throw new Error(`Unknown error occurred inlining file \"${options.filename}\"`);\n    }\n    if (!USE_LOCALIZE_PLUGINS) {\n        return inlineLocalesDirect(ast, options);\n    }\n    const diagnostics = [];\n    for (const locale of i18n.inlineLocales) {\n        const isSourceLocale = locale === i18n.sourceLocale;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const translations = isSourceLocale ? {} : i18n.locales[locale].translation || {};\n        let localeDataContent;\n        if (options.setLocale) {\n            // If locale data is provided, load it and prepend to file\n            const localeDataPath = (_a = i18n.locales[locale]) === null || _a === void 0 ? void 0 : _a.dataPath;\n            if (localeDataPath) {\n                localeDataContent = await loadLocaleData(localeDataPath, true, options.es5);\n            }\n        }\n        const { diagnostics: localeDiagnostics, plugins } = await createI18nPlugins(locale, translations, isSourceLocale ? 'ignore' : options.missingTranslation || 'warning', true, localeDataContent);\n        const transformResult = await (0, core_1.transformFromAstSync)(ast, options.code, {\n            filename: options.filename,\n            // using false ensures that babel will NOT search and process sourcemap comments (large memory usage)\n            // The types do not include the false option even though it is valid\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            inputSourceMap: false,\n            babelrc: false,\n            configFile: false,\n            plugins,\n            compact: !environment_options_1.shouldBeautify,\n            sourceMaps: !!options.map,\n        });\n        diagnostics.push(...localeDiagnostics.messages);\n        if (!transformResult || !transformResult.code) {\n            throw new Error(`Unknown error occurred processing bundle for \"${options.filename}\".`);\n        }\n        const outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n        fs.writeFileSync(outputPath, transformResult.code);\n        if (options.map && transformResult.map) {\n            const outputMap = (0, remapping_1.default)([transformResult.map, options.map], () => null);\n            fs.writeFileSync(outputPath + '.map', JSON.stringify(outputMap));\n        }\n    }\n    return { file: options.filename, diagnostics };\n}\nexports.inlineLocales = inlineLocales;\nasync function inlineLocalesDirect(ast, options) {\n    if (!i18n || i18n.inlineLocales.size === 0) {\n        return { file: options.filename, diagnostics: [], count: 0 };\n    }\n    const { default: generate } = await Promise.resolve().then(() => __importStar(require('@babel/generator')));\n    const localizeDiag = await loadLocalizeTools();\n    const diagnostics = new localizeDiag.Diagnostics();\n    const positions = findLocalizePositions(ast, options, localizeDiag);\n    if (positions.length === 0 && !options.setLocale) {\n        return inlineCopyOnly(options);\n    }\n    const inputMap = !!options.map && JSON.parse(options.map);\n    // Cleanup source root otherwise it will be added to each source entry\n    const mapSourceRoot = inputMap && inputMap.sourceRoot;\n    if (inputMap) {\n        delete inputMap.sourceRoot;\n    }\n    // Load Webpack only when needed\n    if (webpackSources === undefined) {\n        webpackSources = (await Promise.resolve().then(() => __importStar(require('webpack')))).sources;\n    }\n    const { ConcatSource, OriginalSource, ReplaceSource, SourceMapSource } = webpackSources;\n    for (const locale of i18n.inlineLocales) {\n        const content = new ReplaceSource(inputMap\n            ? new SourceMapSource(options.code, options.filename, inputMap)\n            : new OriginalSource(options.code, options.filename));\n        const isSourceLocale = locale === i18n.sourceLocale;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const translations = isSourceLocale ? {} : i18n.locales[locale].translation || {};\n        for (const position of positions) {\n            const translated = localizeDiag.translate(diagnostics, translations, position.messageParts, position.expressions, isSourceLocale ? 'ignore' : options.missingTranslation || 'warning');\n            const expression = localizeDiag.buildLocalizeReplacement(translated[0], translated[1]);\n            const { code } = generate(expression);\n            content.replace(position.start, position.end - 1, code);\n        }\n        let outputSource = content;\n        if (options.setLocale) {\n            const setLocaleText = `var $localize=Object.assign(void 0===$localize?{}:$localize,{locale:\"${locale}\"});\\n`;\n            // If locale data is provided, load it and prepend to file\n            let localeDataSource;\n            const localeDataPath = i18n.locales[locale] && i18n.locales[locale].dataPath;\n            if (localeDataPath) {\n                const localeDataContent = await loadLocaleData(localeDataPath, true, options.es5);\n                localeDataSource = new OriginalSource(localeDataContent, path.basename(localeDataPath));\n            }\n            outputSource = localeDataSource\n                ? // The semicolon ensures that there is no syntax error between statements\n                    new ConcatSource(setLocaleText, localeDataSource, ';\\n', content)\n                : new ConcatSource(setLocaleText, content);\n        }\n        const { source: outputCode, map: outputMap } = outputSource.sourceAndMap();\n        const outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n        fs.writeFileSync(outputPath, outputCode);\n        if (inputMap && outputMap) {\n            outputMap.file = options.filename;\n            if (mapSourceRoot) {\n                outputMap.sourceRoot = mapSourceRoot;\n            }\n            fs.writeFileSync(outputPath + '.map', JSON.stringify(outputMap));\n        }\n    }\n    return { file: options.filename, diagnostics: diagnostics.messages, count: positions.length };\n}\nfunction inlineCopyOnly(options) {\n    if (!i18n) {\n        throw new Error('i18n options are missing');\n    }\n    for (const locale of i18n.inlineLocales) {\n        const outputPath = path.join(options.outputPath, i18n.flatOutput ? '' : locale, options.filename);\n        fs.writeFileSync(outputPath, options.code);\n        if (options.map) {\n            fs.writeFileSync(outputPath + '.map', options.map);\n        }\n    }\n    return { file: options.filename, diagnostics: [], count: 0 };\n}\nfunction findLocalizePositions(ast, options, utils) {\n    const positions = [];\n    // Workaround to ensure a path hub is present for traversal\n    const { File } = require('@babel/core');\n    const file = new File({}, { code: options.code, ast });\n    if (options.es5) {\n        (0, core_1.traverse)(file.ast, {\n            CallExpression(path) {\n                const callee = path.get('callee');\n                if (callee.isIdentifier() &&\n                    callee.node.name === localizeName &&\n                    utils.isGlobalIdentifier(callee)) {\n                    const [messageParts, expressions] = unwrapLocalizeCall(path, utils);\n                    positions.push({\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        start: path.node.start,\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        end: path.node.end,\n                        messageParts,\n                        expressions,\n                    });\n                }\n            },\n        });\n    }\n    else {\n        (0, core_1.traverse)(file.ast, {\n            TaggedTemplateExpression(path) {\n                if (core_1.types.isIdentifier(path.node.tag) && path.node.tag.name === localizeName) {\n                    const [messageParts, expressions] = unwrapTemplateLiteral(path, utils);\n                    positions.push({\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        start: path.node.start,\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        end: path.node.end,\n                        messageParts,\n                        expressions,\n                    });\n                }\n            },\n        });\n    }\n    return positions;\n}\nfunction unwrapTemplateLiteral(path, utils) {\n    const [messageParts] = utils.unwrapMessagePartsFromTemplateLiteral(path.get('quasi').get('quasis'));\n    const [expressions] = utils.unwrapExpressionsFromTemplateLiteral(path.get('quasi'));\n    return [messageParts, expressions];\n}\nfunction unwrapLocalizeCall(path, utils) {\n    const [messageParts] = utils.unwrapMessagePartsFromLocalizeCall(path);\n    const [expressions] = utils.unwrapSubstitutionsFromLocalizeCall(path);\n    return [messageParts, expressions];\n}\nasync function loadLocaleData(path, optimize, es5) {\n    // The path is validated during option processing before the build starts\n    const content = fs.readFileSync(path, 'utf8');\n    // Downlevel and optimize the data\n    const transformResult = await (0, core_1.transformAsync)(content, {\n        filename: path,\n        // The types do not include the false option even though it is valid\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        inputSourceMap: false,\n        babelrc: false,\n        configFile: false,\n        presets: [\n            [\n                require.resolve('@babel/preset-env'),\n                {\n                    bugfixes: true,\n                    // IE 11 is the oldest supported browser\n                    targets: es5 ? { ie: '11' } : { esmodules: true },\n                },\n            ],\n        ],\n        minified: environment_options_1.allowMinify && optimize,\n        compact: !environment_options_1.shouldBeautify && optimize,\n        comments: !optimize,\n    });\n    if (!transformResult || !transformResult.code) {\n        throw new Error(`Unknown error occurred processing bundle for \"${path}\".`);\n    }\n    return transformResult.code;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}