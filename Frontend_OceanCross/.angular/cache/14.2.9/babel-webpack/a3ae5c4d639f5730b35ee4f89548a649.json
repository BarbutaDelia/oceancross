{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.purgeStaleBuildCache = void 0;\n\nconst fs_1 = require(\"fs\");\n\nconst path_1 = require(\"path\");\n\nconst normalize_cache_1 = require(\"./normalize-cache\");\n/** Delete stale cache directories used by previous versions of build-angular. */\n\n\nfunction purgeStaleBuildCache(_x) {\n  return _purgeStaleBuildCache.apply(this, arguments);\n}\n\nfunction _purgeStaleBuildCache() {\n  _purgeStaleBuildCache = _asyncToGenerator(function* (context) {\n    var _a;\n\n    const projectName = (_a = context.target) === null || _a === void 0 ? void 0 : _a.project;\n\n    if (!projectName) {\n      return;\n    }\n\n    const metadata = yield context.getProjectMetadata(projectName);\n    const {\n      basePath,\n      path,\n      enabled\n    } = (0, normalize_cache_1.normalizeCacheOptions)(metadata, context.workspaceRoot);\n\n    if (!enabled || !(0, fs_1.existsSync)(basePath)) {\n      return;\n    }\n\n    const entriesToDelete = (yield fs_1.promises.readdir(basePath, {\n      withFileTypes: true\n    })).filter(d => (0, path_1.join)(basePath, d.name) !== path && d.isDirectory()).map(d => {\n      const subPath = (0, path_1.join)(basePath, d.name);\n      return fs_1.promises.rm(subPath, {\n        force: true,\n        recursive: true,\n        maxRetries: 3\n      }).catch(() => void 0);\n    });\n    yield Promise.all(entriesToDelete);\n  });\n  return _purgeStaleBuildCache.apply(this, arguments);\n}\n\nexports.purgeStaleBuildCache = purgeStaleBuildCache;","map":{"version":3,"names":["Object","defineProperty","exports","value","purgeStaleBuildCache","fs_1","require","path_1","normalize_cache_1","context","_a","projectName","target","project","metadata","getProjectMetadata","basePath","path","enabled","normalizeCacheOptions","workspaceRoot","existsSync","entriesToDelete","promises","readdir","withFileTypes","filter","d","join","name","isDirectory","map","subPath","rm","force","recursive","maxRetries","catch","Promise","all"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@angular-devkit/build-angular/src/utils/purge-cache.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.purgeStaleBuildCache = void 0;\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst normalize_cache_1 = require(\"./normalize-cache\");\n/** Delete stale cache directories used by previous versions of build-angular. */\nasync function purgeStaleBuildCache(context) {\n    var _a;\n    const projectName = (_a = context.target) === null || _a === void 0 ? void 0 : _a.project;\n    if (!projectName) {\n        return;\n    }\n    const metadata = await context.getProjectMetadata(projectName);\n    const { basePath, path, enabled } = (0, normalize_cache_1.normalizeCacheOptions)(metadata, context.workspaceRoot);\n    if (!enabled || !(0, fs_1.existsSync)(basePath)) {\n        return;\n    }\n    const entriesToDelete = (await fs_1.promises.readdir(basePath, { withFileTypes: true }))\n        .filter((d) => (0, path_1.join)(basePath, d.name) !== path && d.isDirectory())\n        .map((d) => {\n        const subPath = (0, path_1.join)(basePath, d.name);\n        return fs_1.promises\n            .rm(subPath, { force: true, recursive: true, maxRetries: 3 })\n            .catch(() => void 0);\n    });\n    await Promise.all(entriesToDelete);\n}\nexports.purgeStaleBuildCache = purgeStaleBuildCache;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,IAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAD,CAAtB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,mBAAD,CAAjC;AACA;;;SACeF,oB;;;;;4CAAf,WAAoCK,OAApC,EAA6C;IACzC,IAAIC,EAAJ;;IACA,MAAMC,WAAW,GAAG,CAACD,EAAE,GAAGD,OAAO,CAACG,MAAd,MAA0B,IAA1B,IAAkCF,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACG,OAAlF;;IACA,IAAI,CAACF,WAAL,EAAkB;MACd;IACH;;IACD,MAAMG,QAAQ,SAASL,OAAO,CAACM,kBAAR,CAA2BJ,WAA3B,CAAvB;IACA,MAAM;MAAEK,QAAF;MAAYC,IAAZ;MAAkBC;IAAlB,IAA8B,CAAC,GAAGV,iBAAiB,CAACW,qBAAtB,EAA6CL,QAA7C,EAAuDL,OAAO,CAACW,aAA/D,CAApC;;IACA,IAAI,CAACF,OAAD,IAAY,CAAC,CAAC,GAAGb,IAAI,CAACgB,UAAT,EAAqBL,QAArB,CAAjB,EAAiD;MAC7C;IACH;;IACD,MAAMM,eAAe,GAAG,OAAOjB,IAAI,CAACkB,QAAL,CAAcC,OAAd,CAAsBR,QAAtB,EAAgC;MAAES,aAAa,EAAE;IAAjB,CAAhC,CAAP,EACnBC,MADmB,CACXC,CAAD,IAAO,CAAC,GAAGpB,MAAM,CAACqB,IAAX,EAAiBZ,QAAjB,EAA2BW,CAAC,CAACE,IAA7B,MAAuCZ,IAAvC,IAA+CU,CAAC,CAACG,WAAF,EAD1C,EAEnBC,GAFmB,CAEdJ,CAAD,IAAO;MACZ,MAAMK,OAAO,GAAG,CAAC,GAAGzB,MAAM,CAACqB,IAAX,EAAiBZ,QAAjB,EAA2BW,CAAC,CAACE,IAA7B,CAAhB;MACA,OAAOxB,IAAI,CAACkB,QAAL,CACFU,EADE,CACCD,OADD,EACU;QAAEE,KAAK,EAAE,IAAT;QAAeC,SAAS,EAAE,IAA1B;QAAgCC,UAAU,EAAE;MAA5C,CADV,EAEFC,KAFE,CAEI,MAAM,KAAK,CAFf,CAAP;IAGH,CAPuB,CAAxB;IAQA,MAAMC,OAAO,CAACC,GAAR,CAAYjB,eAAZ,CAAN;EACH,C;;;;AACDpB,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B"},"metadata":{},"sourceType":"script"}