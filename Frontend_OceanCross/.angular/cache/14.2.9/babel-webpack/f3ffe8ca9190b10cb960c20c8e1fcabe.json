{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RemoveHashPlugin = void 0;\n\nclass RemoveHashPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap('remove-hash-plugin', compilation => {\n      const assetPath = (path, data) => {\n        var _a;\n\n        const chunkName = (_a = data.chunk) === null || _a === void 0 ? void 0 : _a.name;\n        const {\n          chunkNames,\n          hashFormat\n        } = this.options;\n\n        if (chunkName && (chunkNames === null || chunkNames === void 0 ? void 0 : chunkNames.includes(chunkName))) {\n          // Replace hash formats with empty strings.\n          return path.replace(hashFormat.chunk, '').replace(hashFormat.extract, '');\n        }\n\n        return path;\n      };\n\n      compilation.hooks.assetPath.tap('remove-hash-plugin', assetPath);\n    });\n  }\n\n}\n\nexports.RemoveHashPlugin = RemoveHashPlugin;","map":{"version":3,"names":["Object","defineProperty","exports","value","RemoveHashPlugin","constructor","options","apply","compiler","hooks","compilation","tap","assetPath","path","data","_a","chunkName","chunk","name","chunkNames","hashFormat","includes","replace","extract"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@angular-devkit/build-angular/src/webpack/plugins/remove-hash-plugin.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoveHashPlugin = void 0;\nclass RemoveHashPlugin {\n    constructor(options) {\n        this.options = options;\n    }\n    apply(compiler) {\n        compiler.hooks.compilation.tap('remove-hash-plugin', (compilation) => {\n            const assetPath = (path, data) => {\n                var _a;\n                const chunkName = (_a = data.chunk) === null || _a === void 0 ? void 0 : _a.name;\n                const { chunkNames, hashFormat } = this.options;\n                if (chunkName && (chunkNames === null || chunkNames === void 0 ? void 0 : chunkNames.includes(chunkName))) {\n                    // Replace hash formats with empty strings.\n                    return path.replace(hashFormat.chunk, '').replace(hashFormat.extract, '');\n                }\n                return path;\n            };\n            compilation.hooks.assetPath.tap('remove-hash-plugin', assetPath);\n        });\n    }\n}\nexports.RemoveHashPlugin = RemoveHashPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AACA,MAAMA,gBAAN,CAAuB;EACnBC,WAAW,CAACC,OAAD,EAAU;IACjB,KAAKA,OAAL,GAAeA,OAAf;EACH;;EACDC,KAAK,CAACC,QAAD,EAAW;IACZA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,oBAA/B,EAAsDD,WAAD,IAAiB;MAClE,MAAME,SAAS,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;QAC9B,IAAIC,EAAJ;;QACA,MAAMC,SAAS,GAAG,CAACD,EAAE,GAAGD,IAAI,CAACG,KAAX,MAAsB,IAAtB,IAA8BF,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAACG,IAA5E;QACA,MAAM;UAAEC,UAAF;UAAcC;QAAd,IAA6B,KAAKd,OAAxC;;QACA,IAAIU,SAAS,KAAKG,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACE,QAAX,CAAoBL,SAApB,CAA7D,CAAb,EAA2G;UACvG;UACA,OAAOH,IAAI,CAACS,OAAL,CAAaF,UAAU,CAACH,KAAxB,EAA+B,EAA/B,EAAmCK,OAAnC,CAA2CF,UAAU,CAACG,OAAtD,EAA+D,EAA/D,CAAP;QACH;;QACD,OAAOV,IAAP;MACH,CATD;;MAUAH,WAAW,CAACD,KAAZ,CAAkBG,SAAlB,CAA4BD,GAA5B,CAAgC,oBAAhC,EAAsDC,SAAtD;IACH,CAZD;EAaH;;AAlBkB;;AAoBvBV,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B"},"metadata":{},"sourceType":"script"}