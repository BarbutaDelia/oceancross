{"ast":null,"code":"\"use strict\";\n\nfunction e(e) {\n  return e && \"object\" == typeof e && \"default\" in e ? e : {\n    default: e\n  };\n}\n\nvar o = e(require(\"postcss-value-parser\"));\n\nconst r = e => {\n  const r = !(\"preserve\" in Object(e)) || Boolean(e.preserve);\n  return {\n    postcssPlugin: \"postcss-overflow-shorthand\",\n    Declaration: (e, {\n      result: t\n    }) => {\n      if (\"overflow\" !== e.prop.toLowerCase()) return;\n      let s = \"\",\n          a = \"\";\n      const l = e.value;\n\n      try {\n        const e = o.default(l).nodes.slice().filter(e => \"comment\" !== e.type && \"space\" !== e.type);\n        if (e.length < 2) return;\n        s = o.default.stringify(e[0]), a = o.default.stringify(e[1]);\n      } catch (o) {\n        return void e.warn(t, `Failed to parse value '${l}' as a shorthand for \"overflow\". Leaving the original value intact.`);\n      }\n\n      s && a && (s.toLowerCase() === a.toLowerCase() ? e.cloneBefore({\n        value: s\n      }) : (e.cloneBefore({\n        prop: \"overflow-x\",\n        value: s\n      }), e.cloneBefore({\n        prop: \"overflow-y\",\n        value: a\n      })), r || e.remove());\n    }\n  };\n};\n\nr.postcss = !0, module.exports = r;","map":{"version":3,"names":["e","default","o","require","r","Object","Boolean","preserve","postcssPlugin","Declaration","result","t","prop","toLowerCase","s","a","l","value","nodes","slice","filter","type","length","stringify","warn","cloneBefore","remove","postcss","module","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/postcss-overflow-shorthand/dist/index.cjs"],"sourcesContent":["\"use strict\";function e(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var o=e(require(\"postcss-value-parser\"));const r=e=>{const r=!(\"preserve\"in Object(e))||Boolean(e.preserve);return{postcssPlugin:\"postcss-overflow-shorthand\",Declaration:(e,{result:t})=>{if(\"overflow\"!==e.prop.toLowerCase())return;let s=\"\",a=\"\";const l=e.value;try{const e=o.default(l).nodes.slice().filter((e=>\"comment\"!==e.type&&\"space\"!==e.type));if(e.length<2)return;s=o.default.stringify(e[0]),a=o.default.stringify(e[1])}catch(o){return void e.warn(t,`Failed to parse value '${l}' as a shorthand for \"overflow\". Leaving the original value intact.`)}s&&a&&(s.toLowerCase()===a.toLowerCase()?e.cloneBefore({value:s}):(e.cloneBefore({prop:\"overflow-x\",value:s}),e.cloneBefore({prop:\"overflow-y\",value:a})),r||e.remove())}}};r.postcss=!0,module.exports=r;\n"],"mappings":"AAAA;;AAAa,SAASA,CAAT,CAAWA,CAAX,EAAa;EAAC,OAAOA,CAAC,IAAE,YAAU,OAAOA,CAApB,IAAuB,aAAYA,CAAnC,GAAqCA,CAArC,GAAuC;IAACC,OAAO,EAACD;EAAT,CAA9C;AAA0D;;AAAA,IAAIE,CAAC,GAACF,CAAC,CAACG,OAAO,CAAC,sBAAD,CAAR,CAAP;;AAAyC,MAAMC,CAAC,GAACJ,CAAC,IAAE;EAAC,MAAMI,CAAC,GAAC,EAAE,cAAaC,MAAM,CAACL,CAAD,CAArB,KAA2BM,OAAO,CAACN,CAAC,CAACO,QAAH,CAA1C;EAAuD,OAAM;IAACC,aAAa,EAAC,4BAAf;IAA4CC,WAAW,EAAC,CAACT,CAAD,EAAG;MAACU,MAAM,EAACC;IAAR,CAAH,KAAgB;MAAC,IAAG,eAAaX,CAAC,CAACY,IAAF,CAAOC,WAAP,EAAhB,EAAqC;MAAO,IAAIC,CAAC,GAAC,EAAN;MAAA,IAASC,CAAC,GAAC,EAAX;MAAc,MAAMC,CAAC,GAAChB,CAAC,CAACiB,KAAV;;MAAgB,IAAG;QAAC,MAAMjB,CAAC,GAACE,CAAC,CAACD,OAAF,CAAUe,CAAV,EAAaE,KAAb,CAAmBC,KAAnB,GAA2BC,MAA3B,CAAmCpB,CAAC,IAAE,cAAYA,CAAC,CAACqB,IAAd,IAAoB,YAAUrB,CAAC,CAACqB,IAAtE,CAAR;QAAqF,IAAGrB,CAAC,CAACsB,MAAF,GAAS,CAAZ,EAAc;QAAOR,CAAC,GAACZ,CAAC,CAACD,OAAF,CAAUsB,SAAV,CAAoBvB,CAAC,CAAC,CAAD,CAArB,CAAF,EAA4Be,CAAC,GAACb,CAAC,CAACD,OAAF,CAAUsB,SAAV,CAAoBvB,CAAC,CAAC,CAAD,CAArB,CAA9B;MAAwD,CAAtK,CAAsK,OAAME,CAAN,EAAQ;QAAC,OAAO,KAAKF,CAAC,CAACwB,IAAF,CAAOb,CAAP,EAAU,0BAAyBK,CAAE,qEAArC,CAAZ;MAAuH;;MAAAF,CAAC,IAAEC,CAAH,KAAOD,CAAC,CAACD,WAAF,OAAkBE,CAAC,CAACF,WAAF,EAAlB,GAAkCb,CAAC,CAACyB,WAAF,CAAc;QAACR,KAAK,EAACH;MAAP,CAAd,CAAlC,IAA4Dd,CAAC,CAACyB,WAAF,CAAc;QAACb,IAAI,EAAC,YAAN;QAAmBK,KAAK,EAACH;MAAzB,CAAd,GAA2Cd,CAAC,CAACyB,WAAF,CAAc;QAACb,IAAI,EAAC,YAAN;QAAmBK,KAAK,EAACF;MAAzB,CAAd,CAAvG,GAAmJX,CAAC,IAAEJ,CAAC,CAAC0B,MAAF,EAA7J;IAAyK;EAAlmB,CAAN;AAA0mB,CAA7qB;;AAA8qBtB,CAAC,CAACuB,OAAF,GAAU,CAAC,CAAX,EAAaC,MAAM,CAACC,OAAP,GAAezB,CAA5B"},"metadata":{},"sourceType":"script"}