{"ast":null,"code":"const debug = require('debug')('log4js:recording');\n\nconst recordedEvents = [];\n\nfunction configure() {\n  return function (logEvent) {\n    debug(`received logEvent, number of events now ${recordedEvents.length + 1}`);\n    debug('log event was ', logEvent);\n    recordedEvents.push(logEvent);\n  };\n}\n\nfunction replay() {\n  return recordedEvents.slice();\n}\n\nfunction reset() {\n  recordedEvents.length = 0;\n}\n\nmodule.exports = {\n  configure,\n  replay,\n  playback: replay,\n  reset,\n  erase: reset\n};","map":{"version":3,"names":["debug","require","recordedEvents","configure","logEvent","length","push","replay","slice","reset","module","exports","playback","erase"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/log4js/lib/appenders/recording.js"],"sourcesContent":["const debug = require('debug')('log4js:recording');\n\nconst recordedEvents = [];\n\nfunction configure() {\n  return function (logEvent) {\n    debug(\n      `received logEvent, number of events now ${recordedEvents.length + 1}`\n    );\n    debug('log event was ', logEvent);\n    recordedEvents.push(logEvent);\n  };\n}\n\nfunction replay() {\n  return recordedEvents.slice();\n}\n\nfunction reset() {\n  recordedEvents.length = 0;\n}\n\nmodule.exports = {\n  configure,\n  replay,\n  playback: replay,\n  reset,\n  erase: reset,\n};\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,kBAAjB,CAAd;;AAEA,MAAMC,cAAc,GAAG,EAAvB;;AAEA,SAASC,SAAT,GAAqB;EACnB,OAAO,UAAUC,QAAV,EAAoB;IACzBJ,KAAK,CACF,2CAA0CE,cAAc,CAACG,MAAf,GAAwB,CAAE,EADlE,CAAL;IAGAL,KAAK,CAAC,gBAAD,EAAmBI,QAAnB,CAAL;IACAF,cAAc,CAACI,IAAf,CAAoBF,QAApB;EACD,CAND;AAOD;;AAED,SAASG,MAAT,GAAkB;EAChB,OAAOL,cAAc,CAACM,KAAf,EAAP;AACD;;AAED,SAASC,KAAT,GAAiB;EACfP,cAAc,CAACG,MAAf,GAAwB,CAAxB;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB;EACfR,SADe;EAEfI,MAFe;EAGfK,QAAQ,EAAEL,MAHK;EAIfE,KAJe;EAKfI,KAAK,EAAEJ;AALQ,CAAjB"},"metadata":{},"sourceType":"script"}