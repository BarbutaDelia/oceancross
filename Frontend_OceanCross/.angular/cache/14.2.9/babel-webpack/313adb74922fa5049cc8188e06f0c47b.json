{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Registry = void 0;\n\nconst array_flatten_1 = __importDefault(require(\"array-flatten\"));\n\nconst dns_equal_1 = __importDefault(require(\"dns-equal\"));\n\nconst service_1 = __importDefault(require(\"./service\"));\n\nconst REANNOUNCE_MAX_MS = 60 * 60 * 1000;\nconst REANNOUNCE_FACTOR = 3;\n\nclass Registry {\n  constructor(server) {\n    this.services = [];\n    this.server = server;\n  }\n\n  publish(config) {\n    function start(service, registry, opts) {\n      if (service.activated) return;\n      service.activated = true;\n      registry.services.push(service);\n      if (!(service instanceof service_1.default)) return;\n\n      if (opts.probe) {\n        registry.probe(registry.server.mdns, service, exists => {\n          if (exists) {\n            service.stop();\n            console.log(new Error('Service name is already in use on the network'));\n            return;\n          }\n\n          registry.announce(registry.server, service);\n        });\n      } else {\n        registry.announce(registry.server, service);\n      }\n    }\n\n    function stop(service, registry, callback) {\n      if (!service.activated) return;\n      if (!(service instanceof service_1.default)) return;\n      registry.teardown(registry.server, service, callback);\n      const index = registry.services.indexOf(service);\n      if (index !== -1) registry.services.splice(index, 1);\n    }\n\n    const service = new service_1.default(config);\n    service.start = start.bind(null, service, this);\n    service.stop = stop.bind(null, service, this);\n    service.start({\n      probe: config.probe !== false\n    });\n    return service;\n  }\n\n  unpublishAll(callback) {\n    this.teardown(this.server, this.services, callback);\n    this.services = [];\n  }\n\n  destroy() {\n    this.services.map(service => service.destroyed = true);\n  }\n\n  probe(mdns, service, callback) {\n    var sent = false;\n    var retries = 0;\n    var timer;\n\n    const send = () => {\n      if (!service.activated || service.destroyed) return;\n      mdns.query(service.fqdn, 'ANY', function () {\n        sent = true;\n        timer = setTimeout(++retries < 3 ? send : done, 250);\n        timer.unref();\n      });\n    };\n\n    const onresponse = packet => {\n      if (!sent) return;\n      if (packet.answers.some(matchRR) || packet.additionals.some(matchRR)) done(true);\n    };\n\n    const matchRR = rr => {\n      return (0, dns_equal_1.default)(rr.name, service.fqdn);\n    };\n\n    const done = exists => {\n      mdns.removeListener('response', onresponse);\n      clearTimeout(timer);\n      callback(!!exists);\n    };\n\n    mdns.on('response', onresponse);\n    setTimeout(send, Math.random() * 250);\n  }\n\n  announce(server, service) {\n    var delay = 1000;\n    var packet = service.records();\n    server.register(packet);\n\n    const broadcast = () => {\n      if (!service.activated || service.destroyed) return;\n      server.mdns.respond(packet, function () {\n        if (!service.published) {\n          service.activated = true;\n          service.published = true;\n          service.emit('up');\n        }\n\n        delay = delay * REANNOUNCE_FACTOR;\n\n        if (delay < REANNOUNCE_MAX_MS && !service.destroyed) {\n          setTimeout(broadcast, delay).unref();\n        }\n      });\n    };\n\n    broadcast();\n  }\n\n  teardown(server, services, callback) {\n    if (!Array.isArray(services)) services = [services];\n    services = services.filter(service => service.activated);\n    var records = array_flatten_1.default.depth(services.map(function (service) {\n      service.activated = false;\n      var records = service.records();\n      records.forEach(record => {\n        record.ttl = 0;\n      });\n      return records;\n    }), 1);\n    if (records.length === 0) return callback && callback();\n    server.unregister(records);\n    server.mdns.respond(records, function () {\n      services.forEach(function (service) {\n        service.published = false;\n      });\n\n      if (typeof callback === \"function\") {\n        callback.apply(null, arguments);\n      }\n    });\n  }\n\n}\n\nexports.Registry = Registry;\nexports.default = Registry;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Registry","array_flatten_1","require","dns_equal_1","service_1","REANNOUNCE_MAX_MS","REANNOUNCE_FACTOR","constructor","server","services","publish","config","start","service","registry","opts","activated","push","default","probe","mdns","exists","stop","console","log","Error","announce","callback","teardown","index","indexOf","splice","bind","unpublishAll","destroy","map","destroyed","sent","retries","timer","send","query","fqdn","setTimeout","done","unref","onresponse","packet","answers","some","matchRR","additionals","rr","name","removeListener","clearTimeout","on","Math","random","delay","records","register","broadcast","respond","published","emit","Array","isArray","filter","depth","forEach","record","ttl","length","unregister","apply","arguments"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/bonjour-service/dist/lib/registry.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Registry = void 0;\nconst array_flatten_1 = __importDefault(require(\"array-flatten\"));\nconst dns_equal_1 = __importDefault(require(\"dns-equal\"));\nconst service_1 = __importDefault(require(\"./service\"));\nconst REANNOUNCE_MAX_MS = 60 * 60 * 1000;\nconst REANNOUNCE_FACTOR = 3;\nclass Registry {\n    constructor(server) {\n        this.services = [];\n        this.server = server;\n    }\n    publish(config) {\n        function start(service, registry, opts) {\n            if (service.activated)\n                return;\n            service.activated = true;\n            registry.services.push(service);\n            if (!(service instanceof service_1.default))\n                return;\n            if (opts.probe) {\n                registry.probe(registry.server.mdns, service, (exists) => {\n                    if (exists) {\n                        service.stop();\n                        console.log(new Error('Service name is already in use on the network'));\n                        return;\n                    }\n                    registry.announce(registry.server, service);\n                });\n            }\n            else {\n                registry.announce(registry.server, service);\n            }\n        }\n        function stop(service, registry, callback) {\n            if (!service.activated)\n                return;\n            if (!(service instanceof service_1.default))\n                return;\n            registry.teardown(registry.server, service, callback);\n            const index = registry.services.indexOf(service);\n            if (index !== -1)\n                registry.services.splice(index, 1);\n        }\n        const service = new service_1.default(config);\n        service.start = start.bind(null, service, this);\n        service.stop = stop.bind(null, service, this);\n        service.start({ probe: config.probe !== false });\n        return service;\n    }\n    unpublishAll(callback) {\n        this.teardown(this.server, this.services, callback);\n        this.services = [];\n    }\n    destroy() {\n        this.services.map(service => service.destroyed = true);\n    }\n    probe(mdns, service, callback) {\n        var sent = false;\n        var retries = 0;\n        var timer;\n        const send = () => {\n            if (!service.activated || service.destroyed)\n                return;\n            mdns.query(service.fqdn, 'ANY', function () {\n                sent = true;\n                timer = setTimeout(++retries < 3 ? send : done, 250);\n                timer.unref();\n            });\n        };\n        const onresponse = (packet) => {\n            if (!sent)\n                return;\n            if (packet.answers.some(matchRR) || packet.additionals.some(matchRR))\n                done(true);\n        };\n        const matchRR = (rr) => {\n            return (0, dns_equal_1.default)(rr.name, service.fqdn);\n        };\n        const done = (exists) => {\n            mdns.removeListener('response', onresponse);\n            clearTimeout(timer);\n            callback(!!exists);\n        };\n        mdns.on('response', onresponse);\n        setTimeout(send, Math.random() * 250);\n    }\n    announce(server, service) {\n        var delay = 1000;\n        var packet = service.records();\n        server.register(packet);\n        const broadcast = () => {\n            if (!service.activated || service.destroyed)\n                return;\n            server.mdns.respond(packet, function () {\n                if (!service.published) {\n                    service.activated = true;\n                    service.published = true;\n                    service.emit('up');\n                }\n                delay = delay * REANNOUNCE_FACTOR;\n                if (delay < REANNOUNCE_MAX_MS && !service.destroyed) {\n                    setTimeout(broadcast, delay).unref();\n                }\n            });\n        };\n        broadcast();\n    }\n    teardown(server, services, callback) {\n        if (!Array.isArray(services))\n            services = [services];\n        services = services.filter((service) => service.activated);\n        var records = array_flatten_1.default.depth(services.map(function (service) {\n            service.activated = false;\n            var records = service.records();\n            records.forEach((record) => {\n                record.ttl = 0;\n            });\n            return records;\n        }), 1);\n        if (records.length === 0)\n            return callback && callback();\n        server.unregister(records);\n        server.mdns.respond(records, function () {\n            services.forEach(function (service) {\n                service.published = false;\n            });\n            if (typeof callback === \"function\") {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n}\nexports.Registry = Registry;\nexports.default = Registry;\n"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;IAAE,WAAWA;EAAb,CAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,MAAMC,eAAe,GAAGR,eAAe,CAACS,OAAO,CAAC,eAAD,CAAR,CAAvC;;AACA,MAAMC,WAAW,GAAGV,eAAe,CAACS,OAAO,CAAC,WAAD,CAAR,CAAnC;;AACA,MAAME,SAAS,GAAGX,eAAe,CAACS,OAAO,CAAC,WAAD,CAAR,CAAjC;;AACA,MAAMG,iBAAiB,GAAG,KAAK,EAAL,GAAU,IAApC;AACA,MAAMC,iBAAiB,GAAG,CAA1B;;AACA,MAAMN,QAAN,CAAe;EACXO,WAAW,CAACC,MAAD,EAAS;IAChB,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKD,MAAL,GAAcA,MAAd;EACH;;EACDE,OAAO,CAACC,MAAD,EAAS;IACZ,SAASC,KAAT,CAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,IAAlC,EAAwC;MACpC,IAAIF,OAAO,CAACG,SAAZ,EACI;MACJH,OAAO,CAACG,SAAR,GAAoB,IAApB;MACAF,QAAQ,CAACL,QAAT,CAAkBQ,IAAlB,CAAuBJ,OAAvB;MACA,IAAI,EAAEA,OAAO,YAAYT,SAAS,CAACc,OAA/B,CAAJ,EACI;;MACJ,IAAIH,IAAI,CAACI,KAAT,EAAgB;QACZL,QAAQ,CAACK,KAAT,CAAeL,QAAQ,CAACN,MAAT,CAAgBY,IAA/B,EAAqCP,OAArC,EAA+CQ,MAAD,IAAY;UACtD,IAAIA,MAAJ,EAAY;YACRR,OAAO,CAACS,IAAR;YACAC,OAAO,CAACC,GAAR,CAAY,IAAIC,KAAJ,CAAU,+CAAV,CAAZ;YACA;UACH;;UACDX,QAAQ,CAACY,QAAT,CAAkBZ,QAAQ,CAACN,MAA3B,EAAmCK,OAAnC;QACH,CAPD;MAQH,CATD,MAUK;QACDC,QAAQ,CAACY,QAAT,CAAkBZ,QAAQ,CAACN,MAA3B,EAAmCK,OAAnC;MACH;IACJ;;IACD,SAASS,IAAT,CAAcT,OAAd,EAAuBC,QAAvB,EAAiCa,QAAjC,EAA2C;MACvC,IAAI,CAACd,OAAO,CAACG,SAAb,EACI;MACJ,IAAI,EAAEH,OAAO,YAAYT,SAAS,CAACc,OAA/B,CAAJ,EACI;MACJJ,QAAQ,CAACc,QAAT,CAAkBd,QAAQ,CAACN,MAA3B,EAAmCK,OAAnC,EAA4Cc,QAA5C;MACA,MAAME,KAAK,GAAGf,QAAQ,CAACL,QAAT,CAAkBqB,OAAlB,CAA0BjB,OAA1B,CAAd;MACA,IAAIgB,KAAK,KAAK,CAAC,CAAf,EACIf,QAAQ,CAACL,QAAT,CAAkBsB,MAAlB,CAAyBF,KAAzB,EAAgC,CAAhC;IACP;;IACD,MAAMhB,OAAO,GAAG,IAAIT,SAAS,CAACc,OAAd,CAAsBP,MAAtB,CAAhB;IACAE,OAAO,CAACD,KAAR,GAAgBA,KAAK,CAACoB,IAAN,CAAW,IAAX,EAAiBnB,OAAjB,EAA0B,IAA1B,CAAhB;IACAA,OAAO,CAACS,IAAR,GAAeA,IAAI,CAACU,IAAL,CAAU,IAAV,EAAgBnB,OAAhB,EAAyB,IAAzB,CAAf;IACAA,OAAO,CAACD,KAAR,CAAc;MAAEO,KAAK,EAAER,MAAM,CAACQ,KAAP,KAAiB;IAA1B,CAAd;IACA,OAAON,OAAP;EACH;;EACDoB,YAAY,CAACN,QAAD,EAAW;IACnB,KAAKC,QAAL,CAAc,KAAKpB,MAAnB,EAA2B,KAAKC,QAAhC,EAA0CkB,QAA1C;IACA,KAAKlB,QAAL,GAAgB,EAAhB;EACH;;EACDyB,OAAO,GAAG;IACN,KAAKzB,QAAL,CAAc0B,GAAd,CAAkBtB,OAAO,IAAIA,OAAO,CAACuB,SAAR,GAAoB,IAAjD;EACH;;EACDjB,KAAK,CAACC,IAAD,EAAOP,OAAP,EAAgBc,QAAhB,EAA0B;IAC3B,IAAIU,IAAI,GAAG,KAAX;IACA,IAAIC,OAAO,GAAG,CAAd;IACA,IAAIC,KAAJ;;IACA,MAAMC,IAAI,GAAG,MAAM;MACf,IAAI,CAAC3B,OAAO,CAACG,SAAT,IAAsBH,OAAO,CAACuB,SAAlC,EACI;MACJhB,IAAI,CAACqB,KAAL,CAAW5B,OAAO,CAAC6B,IAAnB,EAAyB,KAAzB,EAAgC,YAAY;QACxCL,IAAI,GAAG,IAAP;QACAE,KAAK,GAAGI,UAAU,CAAC,EAAEL,OAAF,GAAY,CAAZ,GAAgBE,IAAhB,GAAuBI,IAAxB,EAA8B,GAA9B,CAAlB;QACAL,KAAK,CAACM,KAAN;MACH,CAJD;IAKH,CARD;;IASA,MAAMC,UAAU,GAAIC,MAAD,IAAY;MAC3B,IAAI,CAACV,IAAL,EACI;MACJ,IAAIU,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBC,OAApB,KAAgCH,MAAM,CAACI,WAAP,CAAmBF,IAAnB,CAAwBC,OAAxB,CAApC,EACIN,IAAI,CAAC,IAAD,CAAJ;IACP,CALD;;IAMA,MAAMM,OAAO,GAAIE,EAAD,IAAQ;MACpB,OAAO,CAAC,GAAGjD,WAAW,CAACe,OAAhB,EAAyBkC,EAAE,CAACC,IAA5B,EAAkCxC,OAAO,CAAC6B,IAA1C,CAAP;IACH,CAFD;;IAGA,MAAME,IAAI,GAAIvB,MAAD,IAAY;MACrBD,IAAI,CAACkC,cAAL,CAAoB,UAApB,EAAgCR,UAAhC;MACAS,YAAY,CAAChB,KAAD,CAAZ;MACAZ,QAAQ,CAAC,CAAC,CAACN,MAAH,CAAR;IACH,CAJD;;IAKAD,IAAI,CAACoC,EAAL,CAAQ,UAAR,EAAoBV,UAApB;IACAH,UAAU,CAACH,IAAD,EAAOiB,IAAI,CAACC,MAAL,KAAgB,GAAvB,CAAV;EACH;;EACDhC,QAAQ,CAAClB,MAAD,EAASK,OAAT,EAAkB;IACtB,IAAI8C,KAAK,GAAG,IAAZ;IACA,IAAIZ,MAAM,GAAGlC,OAAO,CAAC+C,OAAR,EAAb;IACApD,MAAM,CAACqD,QAAP,CAAgBd,MAAhB;;IACA,MAAMe,SAAS,GAAG,MAAM;MACpB,IAAI,CAACjD,OAAO,CAACG,SAAT,IAAsBH,OAAO,CAACuB,SAAlC,EACI;MACJ5B,MAAM,CAACY,IAAP,CAAY2C,OAAZ,CAAoBhB,MAApB,EAA4B,YAAY;QACpC,IAAI,CAAClC,OAAO,CAACmD,SAAb,EAAwB;UACpBnD,OAAO,CAACG,SAAR,GAAoB,IAApB;UACAH,OAAO,CAACmD,SAAR,GAAoB,IAApB;UACAnD,OAAO,CAACoD,IAAR,CAAa,IAAb;QACH;;QACDN,KAAK,GAAGA,KAAK,GAAGrD,iBAAhB;;QACA,IAAIqD,KAAK,GAAGtD,iBAAR,IAA6B,CAACQ,OAAO,CAACuB,SAA1C,EAAqD;UACjDO,UAAU,CAACmB,SAAD,EAAYH,KAAZ,CAAV,CAA6Bd,KAA7B;QACH;MACJ,CAVD;IAWH,CAdD;;IAeAiB,SAAS;EACZ;;EACDlC,QAAQ,CAACpB,MAAD,EAASC,QAAT,EAAmBkB,QAAnB,EAA6B;IACjC,IAAI,CAACuC,KAAK,CAACC,OAAN,CAAc1D,QAAd,CAAL,EACIA,QAAQ,GAAG,CAACA,QAAD,CAAX;IACJA,QAAQ,GAAGA,QAAQ,CAAC2D,MAAT,CAAiBvD,OAAD,IAAaA,OAAO,CAACG,SAArC,CAAX;IACA,IAAI4C,OAAO,GAAG3D,eAAe,CAACiB,OAAhB,CAAwBmD,KAAxB,CAA8B5D,QAAQ,CAAC0B,GAAT,CAAa,UAAUtB,OAAV,EAAmB;MACxEA,OAAO,CAACG,SAAR,GAAoB,KAApB;MACA,IAAI4C,OAAO,GAAG/C,OAAO,CAAC+C,OAAR,EAAd;MACAA,OAAO,CAACU,OAAR,CAAiBC,MAAD,IAAY;QACxBA,MAAM,CAACC,GAAP,GAAa,CAAb;MACH,CAFD;MAGA,OAAOZ,OAAP;IACH,CAP2C,CAA9B,EAOV,CAPU,CAAd;IAQA,IAAIA,OAAO,CAACa,MAAR,KAAmB,CAAvB,EACI,OAAO9C,QAAQ,IAAIA,QAAQ,EAA3B;IACJnB,MAAM,CAACkE,UAAP,CAAkBd,OAAlB;IACApD,MAAM,CAACY,IAAP,CAAY2C,OAAZ,CAAoBH,OAApB,EAA6B,YAAY;MACrCnD,QAAQ,CAAC6D,OAAT,CAAiB,UAAUzD,OAAV,EAAmB;QAChCA,OAAO,CAACmD,SAAR,GAAoB,KAApB;MACH,CAFD;;MAGA,IAAI,OAAOrC,QAAP,KAAoB,UAAxB,EAAoC;QAChCA,QAAQ,CAACgD,KAAT,CAAe,IAAf,EAAqBC,SAArB;MACH;IACJ,CAPD;EAQH;;AA5HU;;AA8Hf9E,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACAF,OAAO,CAACoB,OAAR,GAAkBlB,QAAlB"},"metadata":{},"sourceType":"script"}