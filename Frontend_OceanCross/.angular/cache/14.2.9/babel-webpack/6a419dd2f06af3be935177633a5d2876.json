{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst util = require('util');\n\nconst fs = require('graceful-fs'); // bind need only for mock unit tests\n\n\nconst readFile = util.promisify(fs.readFile.bind(fs));\n\nconst tryToRead = function (path, log) {\n  const maxRetries = 3;\n  let promise = readFile(path);\n\n  for (let retryCount = 1; retryCount <= maxRetries; retryCount++) {\n    promise = promise.catch(err => {\n      log.warn(err);\n      log.warn('retrying ' + retryCount);\n      return readFile(path);\n    });\n  }\n\n  return promise.catch(err => {\n    log.warn(err);\n    return Promise.reject(err);\n  });\n};\n\nconst mm = require('minimatch');\n\nconst {\n  isBinaryFile\n} = require('isbinaryfile');\n\nconst _ = require('lodash');\n\nconst CryptoUtils = require('./utils/crypto-utils');\n\nconst log = require('./logger').create('preprocess');\n\nfunction executeProcessor(process, file, content) {\n  let done = null;\n  const donePromise = new Promise((resolve, reject) => {\n    done = function (error, content) {\n      // normalize B-C\n      if (arguments.length === 1 && typeof error === 'string') {\n        content = error;\n        error = null;\n      }\n\n      if (error) {\n        reject(error);\n      } else {\n        resolve(content);\n      }\n    };\n  });\n  return (process(content, file, done) || Promise.resolve()).then(content => {\n    if (content) {\n      // async process correctly returned content\n      return content;\n    } // process called done() (Either old sync api or an async function that did not return content)\n\n\n    return donePromise;\n  });\n}\n\nfunction runProcessors(_x, _x2, _x3) {\n  return _runProcessors.apply(this, arguments);\n}\n\nfunction _runProcessors() {\n  _runProcessors = _asyncToGenerator(function* (preprocessors, file, content) {\n    try {\n      for (const process of preprocessors) {\n        content = yield executeProcessor(process, file, content);\n      }\n    } catch (error) {\n      file.contentPath = null;\n      file.content = null;\n      throw error;\n    }\n\n    file.contentPath = null;\n    file.content = content;\n    file.sha = CryptoUtils.sha1(content);\n  });\n  return _runProcessors.apply(this, arguments);\n}\n\nfunction createPriorityPreprocessor(config = {}, preprocessorPriority, basePath, instantiatePlugin) {\n  _.union.apply(_, Object.values(config)).forEach(name => instantiatePlugin('preprocessor', name));\n\n  return /*#__PURE__*/function () {\n    var _preprocess = _asyncToGenerator(function* (file) {\n      const buffer = yield tryToRead(file.originalPath, log);\n      let isBinary = file.isBinary;\n\n      if (isBinary == null) {\n        // Pattern did not specify, probe for it.\n        isBinary = yield isBinaryFile(buffer, buffer.length);\n      }\n\n      const preprocessorNames = Object.keys(config).reduce((ppNames, pattern) => {\n        if (mm(file.originalPath, pattern, {\n          dot: true\n        })) {\n          ppNames = _.union(ppNames, config[pattern]);\n        }\n\n        return ppNames;\n      }, []); // Apply preprocessor priority.\n\n      const preprocessors = preprocessorNames.map(name => [name, preprocessorPriority[name] || 0]).sort((a, b) => b[1] - a[1]).map(duo => duo[0]).reduce((preProcs, name) => {\n        const p = instantiatePlugin('preprocessor', name);\n\n        if (!isBinary || p && p.handleBinaryFiles) {\n          preProcs.push(p);\n        } else {\n          log.warn(`Ignored preprocessing ${file.originalPath} because ${name} has handleBinaryFiles=false.`);\n        }\n\n        return preProcs;\n      }, []);\n      yield runProcessors(preprocessors, file, isBinary ? buffer : buffer.toString());\n    });\n\n    function preprocess(_x4) {\n      return _preprocess.apply(this, arguments);\n    }\n\n    return preprocess;\n  }();\n}\n\ncreatePriorityPreprocessor.$inject = ['config.preprocessors', 'config.preprocessor_priority', 'config.basePath', 'instantiatePlugin'];\nexports.createPriorityPreprocessor = createPriorityPreprocessor;","map":{"version":3,"names":["util","require","fs","readFile","promisify","bind","tryToRead","path","log","maxRetries","promise","retryCount","catch","err","warn","Promise","reject","mm","isBinaryFile","_","CryptoUtils","create","executeProcessor","process","file","content","done","donePromise","resolve","error","arguments","length","then","runProcessors","preprocessors","contentPath","sha","sha1","createPriorityPreprocessor","config","preprocessorPriority","basePath","instantiatePlugin","union","apply","Object","values","forEach","name","buffer","originalPath","isBinary","preprocessorNames","keys","reduce","ppNames","pattern","dot","map","sort","a","b","duo","preProcs","p","handleBinaryFiles","push","toString","preprocess","$inject","exports"],"sources":["/Users/deliabarbuta/Documents/An4Sem1/PAW/Proiect/proiect-paw-tadam/Frontend_OceanCross/node_modules/karma/lib/preprocessor.js"],"sourcesContent":["'use strict'\n\nconst util = require('util')\nconst fs = require('graceful-fs')\n// bind need only for mock unit tests\nconst readFile = util.promisify(fs.readFile.bind(fs))\nconst tryToRead = function (path, log) {\n  const maxRetries = 3\n  let promise = readFile(path)\n  for (let retryCount = 1; retryCount <= maxRetries; retryCount++) {\n    promise = promise.catch((err) => {\n      log.warn(err)\n      log.warn('retrying ' + retryCount)\n      return readFile(path)\n    })\n  }\n  return promise.catch((err) => {\n    log.warn(err)\n    return Promise.reject(err)\n  })\n}\n\nconst mm = require('minimatch')\nconst { isBinaryFile } = require('isbinaryfile')\nconst _ = require('lodash')\nconst CryptoUtils = require('./utils/crypto-utils')\n\nconst log = require('./logger').create('preprocess')\n\nfunction executeProcessor (process, file, content) {\n  let done = null\n  const donePromise = new Promise((resolve, reject) => {\n    done = function (error, content) {\n      // normalize B-C\n      if (arguments.length === 1 && typeof error === 'string') {\n        content = error\n        error = null\n      }\n      if (error) {\n        reject(error)\n      } else {\n        resolve(content)\n      }\n    }\n  })\n\n  return (process(content, file, done) || Promise.resolve()).then((content) => {\n    if (content) {\n      // async process correctly returned content\n      return content\n    }\n    // process called done() (Either old sync api or an async function that did not return content)\n    return donePromise\n  })\n}\n\nasync function runProcessors (preprocessors, file, content) {\n  try {\n    for (const process of preprocessors) {\n      content = await executeProcessor(process, file, content)\n    }\n  } catch (error) {\n    file.contentPath = null\n    file.content = null\n    throw error\n  }\n\n  file.contentPath = null\n  file.content = content\n  file.sha = CryptoUtils.sha1(content)\n}\n\nfunction createPriorityPreprocessor (config = {}, preprocessorPriority, basePath, instantiatePlugin) {\n  _.union.apply(_, Object.values(config)).forEach((name) => instantiatePlugin('preprocessor', name))\n  return async function preprocess (file) {\n    const buffer = await tryToRead(file.originalPath, log)\n    let isBinary = file.isBinary\n    if (isBinary == null) {\n      // Pattern did not specify, probe for it.\n      isBinary = await isBinaryFile(buffer, buffer.length)\n    }\n\n    const preprocessorNames = Object.keys(config).reduce((ppNames, pattern) => {\n      if (mm(file.originalPath, pattern, { dot: true })) {\n        ppNames = _.union(ppNames, config[pattern])\n      }\n      return ppNames\n    }, [])\n\n    // Apply preprocessor priority.\n    const preprocessors = preprocessorNames\n      .map((name) => [name, preprocessorPriority[name] || 0])\n      .sort((a, b) => b[1] - a[1])\n      .map((duo) => duo[0])\n      .reduce((preProcs, name) => {\n        const p = instantiatePlugin('preprocessor', name)\n\n        if (!isBinary || (p && p.handleBinaryFiles)) {\n          preProcs.push(p)\n        } else {\n          log.warn(`Ignored preprocessing ${file.originalPath} because ${name} has handleBinaryFiles=false.`)\n        }\n        return preProcs\n      }, [])\n\n    await runProcessors(preprocessors, file, isBinary ? buffer : buffer.toString())\n  }\n}\n\ncreatePriorityPreprocessor.$inject = ['config.preprocessors', 'config.preprocessor_priority', 'config.basePath', 'instantiatePlugin']\nexports.createPriorityPreprocessor = createPriorityPreprocessor\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}